# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TopOpeBRep module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_topopebrep.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _TopOpeBRep
else:
    import _TopOpeBRep

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _TopOpeBRep.SWIG_PyInstanceMethod_New
_swig_new_static_method = _TopOpeBRep.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TopOpeBRep.delete_SwigPyIterator
    value = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator_value)
    incr = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator_copy)
    next = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_TopOpeBRep.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _TopOpeBRep:
_TopOpeBRep.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.BRepTopAdaptor
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.Adaptor3d
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.Adaptor2d
import OCC.Core.Geom2d
import OCC.Core.math
import OCC.Core.BRepAdaptor
import OCC.Core.GeomAdaptor
import OCC.Core.Geom2dAdaptor
import OCC.Core.IntRes2d
import OCC.Core.IntPatch
import OCC.Core.Intf
import OCC.Core.Bnd
import OCC.Core.BVH
import OCC.Core.IntSurf
import OCC.Core.IntAna
import OCC.Core.TopOpeBRepDS
import OCC.Core.TopOpeBRepTool
import OCC.Core.TopTools
import OCC.Core.BRepClass3d
import OCC.Core.IntCurveSurface
import OCC.Core.IntCurvesFace
import OCC.Core.TopExp
import OCC.Core.Extrema
TopOpeBRep_P2DUNK = _TopOpeBRep.TopOpeBRep_P2DUNK
TopOpeBRep_P2DINT = _TopOpeBRep.TopOpeBRep_P2DINT
TopOpeBRep_P2DSGF = _TopOpeBRep.TopOpeBRep_P2DSGF
TopOpeBRep_P2DSGL = _TopOpeBRep.TopOpeBRep_P2DSGL
TopOpeBRep_P2DNEW = _TopOpeBRep.TopOpeBRep_P2DNEW
TopOpeBRep_ANALYTIC = _TopOpeBRep.TopOpeBRep_ANALYTIC
TopOpeBRep_RESTRICTION = _TopOpeBRep.TopOpeBRep_RESTRICTION
TopOpeBRep_WALKING = _TopOpeBRep.TopOpeBRep_WALKING
TopOpeBRep_LINE = _TopOpeBRep.TopOpeBRep_LINE
TopOpeBRep_CIRCLE = _TopOpeBRep.TopOpeBRep_CIRCLE
TopOpeBRep_ELLIPSE = _TopOpeBRep.TopOpeBRep_ELLIPSE
TopOpeBRep_PARABOLA = _TopOpeBRep.TopOpeBRep_PARABOLA
TopOpeBRep_HYPERBOLA = _TopOpeBRep.TopOpeBRep_HYPERBOLA
TopOpeBRep_OTHERTYPE = _TopOpeBRep.TopOpeBRep_OTHERTYPE
Handle_TopOpeBRep_FFDumper_Create = _TopOpeBRep.Handle_TopOpeBRep_FFDumper_Create
Handle_TopOpeBRep_FFDumper_DownCast = _TopOpeBRep.Handle_TopOpeBRep_FFDumper_DownCast
Handle_TopOpeBRep_FFDumper_IsNull = _TopOpeBRep.Handle_TopOpeBRep_FFDumper_IsNull
Handle_TopOpeBRep_Hctxee2d_Create = _TopOpeBRep.Handle_TopOpeBRep_Hctxee2d_Create
Handle_TopOpeBRep_Hctxee2d_DownCast = _TopOpeBRep.Handle_TopOpeBRep_Hctxee2d_DownCast
Handle_TopOpeBRep_Hctxee2d_IsNull = _TopOpeBRep.Handle_TopOpeBRep_Hctxee2d_IsNull
Handle_TopOpeBRep_Hctxff2d_Create = _TopOpeBRep.Handle_TopOpeBRep_Hctxff2d_Create
Handle_TopOpeBRep_Hctxff2d_DownCast = _TopOpeBRep.Handle_TopOpeBRep_Hctxff2d_DownCast
Handle_TopOpeBRep_Hctxff2d_IsNull = _TopOpeBRep.Handle_TopOpeBRep_Hctxff2d_IsNull
Handle_TopOpeBRep_HArray1OfVPointInter_Create = _TopOpeBRep.Handle_TopOpeBRep_HArray1OfVPointInter_Create
Handle_TopOpeBRep_HArray1OfVPointInter_DownCast = _TopOpeBRep.Handle_TopOpeBRep_HArray1OfVPointInter_DownCast
Handle_TopOpeBRep_HArray1OfVPointInter_IsNull = _TopOpeBRep.Handle_TopOpeBRep_HArray1OfVPointInter_IsNull
Handle_TopOpeBRep_HArray1OfLineInter_Create = _TopOpeBRep.Handle_TopOpeBRep_HArray1OfLineInter_Create
Handle_TopOpeBRep_HArray1OfLineInter_DownCast = _TopOpeBRep.Handle_TopOpeBRep_HArray1OfLineInter_DownCast
Handle_TopOpeBRep_HArray1OfLineInter_IsNull = _TopOpeBRep.Handle_TopOpeBRep_HArray1OfLineInter_IsNull
class TopOpeBRep_DataMapOfTopolTool(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_begin)
    end = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_end)
    cbegin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_cend)

    def __init__(self, *args):
        _TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_swiginit(self, _TopOpeBRep.new_TopOpeBRep_DataMapOfTopolTool(*args))
    Exchange = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_Exchange)
    Assign = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_Assign)
    Set = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_Set)
    ReSize = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_ReSize)
    Bind = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_Bind)
    Bound = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_Bound)
    IsBound = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_IsBound)
    UnBind = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_UnBind)
    Seek = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_Seek)
    Find = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_Find)
    ChangeSeek = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_ChangeFind)
    __call__ = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool___call__)
    Clear = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_Clear)
    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_DataMapOfTopolTool
    Size = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_Size)

# Register TopOpeBRep_DataMapOfTopolTool in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_DataMapOfTopolTool_swigregister(TopOpeBRep_DataMapOfTopolTool)

class TopOpeBRep_SequenceOfPoint2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_begin)
    end = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_end)
    cbegin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_cend)

    def __init__(self, *args):
        _TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_swiginit(self, _TopOpeBRep.new_TopOpeBRep_SequenceOfPoint2d(*args))
    Size = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Size)
    Length = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Length)
    Lower = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Lower)
    Upper = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Upper)
    IsEmpty = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_IsEmpty)
    Reverse = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Reverse)
    Exchange = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Exchange)
    delNode = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_delNode)
    Clear = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Clear)
    Assign = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Assign)
    Set = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Set)
    Remove = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Remove)
    Append = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Append)
    Prepend = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Prepend)
    InsertBefore = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_InsertAfter)
    Split = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Split)
    First = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_First)
    ChangeFirst = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_ChangeFirst)
    Last = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Last)
    ChangeLast = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_ChangeLast)
    Value = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_Value)
    ChangeValue = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d___call__)
    SetValue = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_SetValue)
    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_SequenceOfPoint2d

# Register TopOpeBRep_SequenceOfPoint2d in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_swigregister(TopOpeBRep_SequenceOfPoint2d)
TopOpeBRep_SequenceOfPoint2d_delNode = _TopOpeBRep.TopOpeBRep_SequenceOfPoint2d_delNode

class TopOpeBRep_Array1OfLineInter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_begin)
    end = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_end)
    cbegin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_cend)

    def __init__(self, *args):
        _TopOpeBRep.TopOpeBRep_Array1OfLineInter_swiginit(self, _TopOpeBRep.new_TopOpeBRep_Array1OfLineInter(*args))
    Init = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Init)
    Size = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Size)
    Length = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Length)
    IsEmpty = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_IsEmpty)
    Lower = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Lower)
    Upper = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Upper)
    IsDeletable = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_IsAllocated)
    Assign = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Assign)
    Move = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Move)
    Set = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Set)
    First = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_First)
    ChangeFirst = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_ChangeFirst)
    Last = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Last)
    ChangeLast = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_ChangeLast)
    Value = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Value)
    ChangeValue = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_ChangeValue)
    __call__ = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter___call__)
    SetValue = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_SetValue)
    Resize = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfLineInter_Resize)
    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_Array1OfLineInter

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TopOpeBRep_Array1OfLineInter in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_Array1OfLineInter_swigregister(TopOpeBRep_Array1OfLineInter)

class TopOpeBRep_ListOfBipoint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_begin)
    end = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_end)
    cbegin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_cend)

    def __init__(self, *args):
        _TopOpeBRep.TopOpeBRep_ListOfBipoint_swiginit(self, _TopOpeBRep.new_TopOpeBRep_ListOfBipoint(*args))
    Size = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_Size)
    Assign = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_Assign)
    Set = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_Set)
    Clear = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_Clear)
    First = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_First)
    Last = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_Last)
    Append = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_Append)
    Prepend = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_Prepend)
    RemoveFirst = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_RemoveFirst)
    Remove = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_Remove)
    InsertBefore = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_InsertAfter)
    Reverse = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListOfBipoint_Reverse)
    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_ListOfBipoint

# Register TopOpeBRep_ListOfBipoint in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_ListOfBipoint_swigregister(TopOpeBRep_ListOfBipoint)

class TopOpeBRep_ListIteratorOfListOfBipoint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRep.TopOpeBRep_ListIteratorOfListOfBipoint_swiginit(self, _TopOpeBRep.new_TopOpeBRep_ListIteratorOfListOfBipoint(*args))
    More = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListIteratorOfListOfBipoint_More)
    Next = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListIteratorOfListOfBipoint_Next)
    Value = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListIteratorOfListOfBipoint_Value)
    ChangeValue = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ListIteratorOfListOfBipoint_ChangeValue)
    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_ListIteratorOfListOfBipoint

# Register TopOpeBRep_ListIteratorOfListOfBipoint in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_ListIteratorOfListOfBipoint_swigregister(TopOpeBRep_ListIteratorOfListOfBipoint)

class TopOpeBRep_Array1OfVPointInter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_begin)
    end = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_end)
    cbegin = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_cend)

    def __init__(self, *args):
        _TopOpeBRep.TopOpeBRep_Array1OfVPointInter_swiginit(self, _TopOpeBRep.new_TopOpeBRep_Array1OfVPointInter(*args))
    Init = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Init)
    Size = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Size)
    Length = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Length)
    IsEmpty = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_IsEmpty)
    Lower = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Lower)
    Upper = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Upper)
    IsDeletable = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_IsAllocated)
    Assign = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Assign)
    Move = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Move)
    Set = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Set)
    First = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_First)
    ChangeFirst = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_ChangeFirst)
    Last = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Last)
    ChangeLast = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_ChangeLast)
    Value = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Value)
    ChangeValue = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_ChangeValue)
    __call__ = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter___call__)
    SetValue = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_SetValue)
    Resize = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_Resize)
    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_Array1OfVPointInter

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TopOpeBRep_Array1OfVPointInter in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_Array1OfVPointInter_swigregister(TopOpeBRep_Array1OfVPointInter)

class topopebrep(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Print = _swig_new_static_method(_TopOpeBRep.topopebrep_Print)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRep.topopebrep_swiginit(self, _TopOpeBRep.new_topopebrep())
    __swig_destroy__ = _TopOpeBRep.delete_topopebrep

# Register topopebrep in _TopOpeBRep:
_TopOpeBRep.topopebrep_swigregister(topopebrep)
topopebrep_Print = _TopOpeBRep.topopebrep_Print

class TopOpeBRep_Bipoint(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    I1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Bipoint_I1)
    I2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Bipoint_I2)

    def __init__(self, *args):
        r"""
        :rtype: None:param I1:
        	:type I1: int
        	:param I2:
        	:type I2: int
        	:rtype: None
        """
        _TopOpeBRep.TopOpeBRep_Bipoint_swiginit(self, _TopOpeBRep.new_TopOpeBRep_Bipoint(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_Bipoint

# Register TopOpeBRep_Bipoint in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_Bipoint_swigregister(TopOpeBRep_Bipoint)

class TopOpeBRep_DSFiller(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeEdgesFiller = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_ChangeEdgesFiller)
    ChangeFaceEdgeFiller = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_ChangeFaceEdgeFiller)
    ChangeFacesFiller = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_ChangeFacesFiller)
    ChangeShapeIntersector = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_ChangeShapeIntersector)
    ChangeShapeIntersector2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_ChangeShapeIntersector2d)
    Checker = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_Checker)
    Complete = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_Complete)
    CompleteDS = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_CompleteDS)
    CompleteDS2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_CompleteDS2d)
    Filter = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_Filter)
    GapFiller = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_GapFiller)
    Insert = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_Insert)
    Insert1d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_Insert1d)
    Insert2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_Insert2d)
    InsertIntersection = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_InsertIntersection)
    InsertIntersection2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_InsertIntersection2d)
    IsContext1d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_IsContext1d)
    IsMadeOf1d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_IsMadeOf1d)
    PShapeClassifier = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_PShapeClassifier)
    Reducer = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_Reducer)
    RemoveUnsharedGeometry = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_DSFiller_RemoveUnsharedGeometry)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_DSFiller_swiginit(self, _TopOpeBRep.new_TopOpeBRep_DSFiller(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_DSFiller

# Register TopOpeBRep_DSFiller in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_DSFiller_swigregister(TopOpeBRep_DSFiller)

class TopOpeBRep_EdgesFiller(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Face = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesFiller_Face)
    Insert = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesFiller_Insert)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_EdgesFiller_swiginit(self, _TopOpeBRep.new_TopOpeBRep_EdgesFiller(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_EdgesFiller

# Register TopOpeBRep_EdgesFiller in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_EdgesFiller_swigregister(TopOpeBRep_EdgesFiller)

class TopOpeBRep_EdgesIntersector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Curve = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Curve)
    Dimension = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Dimension)
    Dump = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Dump)
    Edge = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Edge)
    Face = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Face)
    FacesSameOriented = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_FacesSameOriented)
    ForceTolerances = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_ForceTolerances)
    HasSegment = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_HasSegment)
    InitPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_InitPoint)
    IsEmpty = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_IsEmpty)
    MorePoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_MorePoint)
    NbPoints = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_NbPoints)
    NbSegments = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_NbSegments)
    NextPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_NextPoint)
    Perform = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Perform)
    Point = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Point)
    Points = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Points)
    ReduceSegment = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_ReduceSegment)
    SameDomain = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_SameDomain)
    SetFaces = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_SetFaces)
    Status1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Status1)
    Surface = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Surface)
    SurfacesSameOriented = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_SurfacesSameOriented)
    ToleranceMax = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_ToleranceMax)
    Tolerances = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_EdgesIntersector_Tolerances)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_EdgesIntersector_swiginit(self, _TopOpeBRep.new_TopOpeBRep_EdgesIntersector(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_EdgesIntersector

# Register TopOpeBRep_EdgesIntersector in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_EdgesIntersector_swigregister(TopOpeBRep_EdgesIntersector)

class TopOpeBRep_FFDumper(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpDSP = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FFDumper_DumpDSP)
    DumpLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FFDumper_DumpLine)
    DumpVP = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FFDumper_DumpVP)
    ExploreIndex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FFDumper_ExploreIndex)
    Init = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FFDumper_Init)
    PFacesFillerDummy = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FFDumper_PFacesFillerDummy)

    def __init__(self, *args):
        r"""
        :param PFF:
        	:type PFF: TopOpeBRep_PFacesFiller
        	:rtype: None
        """
        _TopOpeBRep.TopOpeBRep_FFDumper_swiginit(self, _TopOpeBRep.new_TopOpeBRep_FFDumper(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRep_FFDumper_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_FFDumper

# Register TopOpeBRep_FFDumper in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_FFDumper_swigregister(TopOpeBRep_FFDumper)

class TopOpeBRep_FFTransitionTool(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProcessEdgeONTransition = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FFTransitionTool_ProcessEdgeONTransition)
    ProcessEdgeTransition = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FFTransitionTool_ProcessEdgeTransition)
    ProcessFaceTransition = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FFTransitionTool_ProcessFaceTransition)
    ProcessLineTransition = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FFTransitionTool_ProcessLineTransition)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRep.TopOpeBRep_FFTransitionTool_swiginit(self, _TopOpeBRep.new_TopOpeBRep_FFTransitionTool())
    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_FFTransitionTool

# Register TopOpeBRep_FFTransitionTool in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_FFTransitionTool_swigregister(TopOpeBRep_FFTransitionTool)
TopOpeBRep_FFTransitionTool_ProcessEdgeONTransition = _TopOpeBRep.TopOpeBRep_FFTransitionTool_ProcessEdgeONTransition
TopOpeBRep_FFTransitionTool_ProcessEdgeTransition = _TopOpeBRep.TopOpeBRep_FFTransitionTool_ProcessEdgeTransition
TopOpeBRep_FFTransitionTool_ProcessFaceTransition = _TopOpeBRep.TopOpeBRep_FFTransitionTool_ProcessFaceTransition
TopOpeBRep_FFTransitionTool_ProcessLineTransition = _TopOpeBRep.TopOpeBRep_FFTransitionTool_ProcessLineTransition

class TopOpeBRep_FaceEdgeFiller(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Insert = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeFiller_Insert)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_FaceEdgeFiller_swiginit(self, _TopOpeBRep.new_TopOpeBRep_FaceEdgeFiller(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_FaceEdgeFiller

# Register TopOpeBRep_FaceEdgeFiller in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_FaceEdgeFiller_swigregister(TopOpeBRep_FaceEdgeFiller)

class TopOpeBRep_FaceEdgeIntersector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ForceTolerance = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_ForceTolerance)
    Index = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_Index)
    InitPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_InitPoint)
    IsEmpty = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_IsEmpty)
    IsVertex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_IsVertex)
    MorePoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_MorePoint)
    NbPoints = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_NbPoints)
    NextPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_NextPoint)
    Parameter = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_Parameter)
    Perform = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_Perform)
    Shape = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_Shape)
    State = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_State)
    Tolerance = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_Tolerance)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_swiginit(self, _TopOpeBRep.new_TopOpeBRep_FaceEdgeIntersector(*args))
    Transition = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_Transition)
    UVPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_UVPoint)
    Value = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_Value)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_FaceEdgeIntersector

# Register TopOpeBRep_FaceEdgeIntersector in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_FaceEdgeIntersector_swigregister(TopOpeBRep_FaceEdgeIntersector)

class TopOpeBRep_FacesFiller(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddShapesLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_AddShapesLine)
    ChangeDataStructure = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ChangeDataStructure)
    ChangeFacesIntersector = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ChangeFacesIntersector)
    ChangePointClassifier = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ChangePointClassifier)
    CheckLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_CheckLine)
    EqualpPonR = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FacesFiller_EqualpPonR)
    Face = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_Face)
    FaceFaceTransition = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_FaceFaceTransition)
    FillLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_FillLine)
    FillLineVPonR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_FillLineVPonR)
    GetESL = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_GetESL)
    GetFFGeometry = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_GetFFGeometry)
    GetGeometry = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_GetGeometry)
    GetTraceIndex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_GetTraceIndex)
    HDataStructure = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_HDataStructure)
    Insert = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_Insert)
    IsVPtransLok = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FacesFiller_IsVPtransLok)
    LSameDomainERL = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FacesFiller_LSameDomainERL)
    Lminmax = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FacesFiller_Lminmax)
    LoadLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_LoadLine)
    MakeGeometry = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_MakeGeometry)
    PDataStructureDummy = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_PDataStructureDummy)
    PFacesIntersectorDummy = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_PFacesIntersectorDummy)
    PLineInterDummy = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_PLineInterDummy)
    PShapeClassifier = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_PShapeClassifier)
    ProcessLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessLine)
    ProcessRLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessRLine)
    ProcessSectionEdges = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessSectionEdges)
    ProcessVPInotonR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessVPInotonR)
    ProcessVPIonR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessVPIonR)
    ProcessVPR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessVPR)
    ProcessVPnotonR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessVPnotonR)
    ProcessVPonR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessVPonR)
    ProcessVPonclosingR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessVPonclosingR)
    ProcessVPondgE = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ProcessVPondgE)
    ResetDSC = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_ResetDSC)
    SetPShapeClassifier = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_SetPShapeClassifier)
    SetTraceIndex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_SetTraceIndex)
    StoreCurveInterference = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_StoreCurveInterference)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_FacesFiller_swiginit(self, _TopOpeBRep.new_TopOpeBRep_FacesFiller(*args))
    TransvpOK = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FacesFiller_TransvpOK)
    VPParamOnER = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_FacesFiller_VPParamOnER)
    VP_Position = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_VP_Position)
    VP_PositionOnL = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_VP_PositionOnL)
    VP_PositionOnR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesFiller_VP_PositionOnR)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_FacesFiller

# Register TopOpeBRep_FacesFiller in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_FacesFiller_swigregister(TopOpeBRep_FacesFiller)
TopOpeBRep_FacesFiller_EqualpPonR = _TopOpeBRep.TopOpeBRep_FacesFiller_EqualpPonR
TopOpeBRep_FacesFiller_IsVPtransLok = _TopOpeBRep.TopOpeBRep_FacesFiller_IsVPtransLok
TopOpeBRep_FacesFiller_LSameDomainERL = _TopOpeBRep.TopOpeBRep_FacesFiller_LSameDomainERL
TopOpeBRep_FacesFiller_Lminmax = _TopOpeBRep.TopOpeBRep_FacesFiller_Lminmax
TopOpeBRep_FacesFiller_TransvpOK = _TopOpeBRep.TopOpeBRep_FacesFiller_TransvpOK
TopOpeBRep_FacesFiller_VPParamOnER = _TopOpeBRep.TopOpeBRep_FacesFiller_VPParamOnER

class TopOpeBRep_FacesIntersector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_ChangeLine)
    CurrentLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_CurrentLine)
    CurrentLineIndex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_CurrentLineIndex)
    Face = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_Face)
    ForceTolerances = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_ForceTolerances)
    GetTolerances = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_GetTolerances)
    InitLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_InitLine)
    IsDone = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_IsDone)
    IsEmpty = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_IsEmpty)
    IsRestriction = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_IsRestriction)
    Lines = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_Lines)
    MoreLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_MoreLine)
    NbLines = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_NbLines)
    NextLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_NextLine)
    Perform = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_Perform)
    PrepareLines = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_PrepareLines)
    Restrictions = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_Restrictions)
    SameDomain = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_SameDomain)
    SurfacesSameOriented = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_FacesIntersector_SurfacesSameOriented)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_FacesIntersector_swiginit(self, _TopOpeBRep.new_TopOpeBRep_FacesIntersector(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_FacesIntersector

# Register TopOpeBRep_FacesIntersector in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_FacesIntersector_swigregister(TopOpeBRep_FacesIntersector)

class TopOpeBRep_GeomTool(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MakeBSpline1fromWALKING2d = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_GeomTool_MakeBSpline1fromWALKING2d)
    MakeBSpline1fromWALKING3d = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_GeomTool_MakeBSpline1fromWALKING3d)
    MakeCurve = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_GeomTool_MakeCurve)
    MakeCurves = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_GeomTool_MakeCurves)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRep.TopOpeBRep_GeomTool_swiginit(self, _TopOpeBRep.new_TopOpeBRep_GeomTool())
    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_GeomTool

# Register TopOpeBRep_GeomTool in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_GeomTool_swigregister(TopOpeBRep_GeomTool)
TopOpeBRep_GeomTool_MakeBSpline1fromWALKING2d = _TopOpeBRep.TopOpeBRep_GeomTool_MakeBSpline1fromWALKING2d
TopOpeBRep_GeomTool_MakeBSpline1fromWALKING3d = _TopOpeBRep.TopOpeBRep_GeomTool_MakeBSpline1fromWALKING3d
TopOpeBRep_GeomTool_MakeCurve = _TopOpeBRep.TopOpeBRep_GeomTool_MakeCurve
TopOpeBRep_GeomTool_MakeCurves = _TopOpeBRep.TopOpeBRep_GeomTool_MakeCurves

class TopOpeBRep_Hctxee2d(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Curve = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxee2d_Curve)
    Domain = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxee2d_Domain)
    Edge = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxee2d_Edge)
    SetEdges = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxee2d_SetEdges)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_Hctxee2d_swiginit(self, _TopOpeBRep.new_TopOpeBRep_Hctxee2d(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRep_Hctxee2d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_Hctxee2d

# Register TopOpeBRep_Hctxee2d in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_Hctxee2d_swigregister(TopOpeBRep_Hctxee2d)

class TopOpeBRep_Hctxff2d(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Face = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_Face)
    FaceSameOrientedWithRef = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_FaceSameOrientedWithRef)
    FacesSameOriented = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_FacesSameOriented)
    GetMaxTolerance = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_GetMaxTolerance)
    GetTolerances = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_GetTolerances)
    HSurface = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_HSurface)
    SetFaces = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_SetFaces)
    SetHSurfaces = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_SetHSurfaces)
    SetTolerances = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_SetTolerances)
    SurfacesSameOriented = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Hctxff2d_SurfacesSameOriented)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_Hctxff2d_swiginit(self, _TopOpeBRep.new_TopOpeBRep_Hctxff2d(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRep_Hctxff2d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_Hctxff2d

# Register TopOpeBRep_Hctxff2d in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_Hctxff2d_swigregister(TopOpeBRep_Hctxff2d)

class TopOpeBRep_LineInter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Arc = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_Arc)
    ArcIsEdge = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_ArcIsEdge)
    Bounds = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_Bounds)
    ChangeVPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_ChangeVPoint)
    ComputeFaceFaceTransition = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_ComputeFaceFaceTransition)
    Curve = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_Curve)
    DumpBipoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_DumpBipoint)
    DumpLineTransitionsToString = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_DumpLineTransitionsToString)
    DumpType = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_DumpType)
    DumpVPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_DumpVPoint)
    FaceFaceTransition = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_FaceFaceTransition)
    GetTraceIndex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_GetTraceIndex)
    HasFirstPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_HasFirstPoint)
    HasLastPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_HasLastPoint)
    HasVInternal = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_HasVInternal)
    HasVPonR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_HasVPonR)
    INL = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_INL)
    Index = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_Index)
    IsPeriodic = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_IsPeriodic)
    IsVClosed = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_IsVClosed)
    LineG = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_LineG)
    LineR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_LineR)
    LineW = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_LineW)
    NbVPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_NbVPoint)
    NbWPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_NbWPoint)
    OK = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_OK)
    Period = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_Period)
    SetFaces = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SetFaces)
    SetHasVPonR = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SetHasVPonR)
    SetINL = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SetINL)
    SetIsVClosed = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SetIsVClosed)
    SetLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SetLine)
    SetOK = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SetOK)
    SetTraceIndex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SetTraceIndex)
    SetVPBounds = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SetVPBounds)
    SituationS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SituationS1)
    SituationS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_SituationS2)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_LineInter_swiginit(self, _TopOpeBRep.new_TopOpeBRep_LineInter(*args))
    TransitionOnS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_TransitionOnS1)
    TransitionOnS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_TransitionOnS2)
    TypeLineCurve = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_TypeLineCurve)
    VPBounds = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_VPBounds)
    VPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_VPoint)
    WPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_LineInter_WPoint)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_LineInter

# Register TopOpeBRep_LineInter in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_LineInter_swigregister(TopOpeBRep_LineInter)

class TopOpeBRep_Point2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeTransition = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_ChangeTransition)
    Dump = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Dump)
    EdgesConfig = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_EdgesConfig)
    HasPint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_HasPint)
    Hctxee2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Hctxee2d)
    Hctxff2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Hctxff2d)
    Index = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Index)
    IsPointOfSegment = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_IsPointOfSegment)
    IsVertex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_IsVertex)
    Keep = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Keep)
    Parameter = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Parameter)
    Pint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Pint)
    SegmentAncestors = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SegmentAncestors)
    SetEdgesConfig = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetEdgesConfig)
    SetHctxee2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetHctxee2d)
    SetHctxff2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetHctxff2d)
    SetIndex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetIndex)
    SetIsPointOfSegment = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetIsPointOfSegment)
    SetIsVertex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetIsVertex)
    SetKeep = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetKeep)
    SetParameter = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetParameter)
    SetPint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetPint)
    SetSegmentAncestors = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetSegmentAncestors)
    SetStatus = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetStatus)
    SetTolerance = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetTolerance)
    SetTransition = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetTransition)
    SetValue = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetValue)
    SetValue2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetValue2d)
    SetVertex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_SetVertex)
    Status = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Status)
    Tolerance = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Tolerance)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_Point2d_swiginit(self, _TopOpeBRep.new_TopOpeBRep_Point2d(*args))
    Transition = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Transition)
    Value = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Value)
    Value2d = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Value2d)
    Vertex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_Point2d_Vertex)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_Point2d

# Register TopOpeBRep_Point2d in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_Point2d_swigregister(TopOpeBRep_Point2d)

class TopOpeBRep_PointClassifier(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Classify = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_PointClassifier_Classify)
    Init = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_PointClassifier_Init)
    Load = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_PointClassifier_Load)
    State = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_PointClassifier_State)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_PointClassifier_swiginit(self, _TopOpeBRep.new_TopOpeBRep_PointClassifier(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_PointClassifier

# Register TopOpeBRep_PointClassifier in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_PointClassifier_swigregister(TopOpeBRep_PointClassifier)

class TopOpeBRep_PointGeomTool(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    IsEqual = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_PointGeomTool_IsEqual)
    MakePoint = _swig_new_static_method(_TopOpeBRep.TopOpeBRep_PointGeomTool_MakePoint)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRep.TopOpeBRep_PointGeomTool_swiginit(self, _TopOpeBRep.new_TopOpeBRep_PointGeomTool())
    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_PointGeomTool

# Register TopOpeBRep_PointGeomTool in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_PointGeomTool_swigregister(TopOpeBRep_PointGeomTool)
TopOpeBRep_PointGeomTool_IsEqual = _TopOpeBRep.TopOpeBRep_PointGeomTool_IsEqual
TopOpeBRep_PointGeomTool_MakePoint = _TopOpeBRep.TopOpeBRep_PointGeomTool_MakePoint

class TopOpeBRep_ShapeIntersector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeEdgesIntersector = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_ChangeEdgesIntersector)
    ChangeFaceEdgeIntersector = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_ChangeFaceEdgeIntersector)
    ChangeFacesIntersector = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_ChangeFacesIntersector)
    CurrentGeomShape = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_CurrentGeomShape)
    DumpCurrent = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_DumpCurrent)
    GetTolerances = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_GetTolerances)
    Index = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_Index)
    InitIntersection = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_InitIntersection)
    MoreIntersection = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_MoreIntersection)
    NextIntersection = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_NextIntersection)
    RejectedFaces = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_RejectedFaces)
    Shape = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector_Shape)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_ShapeIntersector_swiginit(self, _TopOpeBRep.new_TopOpeBRep_ShapeIntersector(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_ShapeIntersector

# Register TopOpeBRep_ShapeIntersector in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_ShapeIntersector_swigregister(TopOpeBRep_ShapeIntersector)

class TopOpeBRep_ShapeIntersector2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeEdgesIntersector = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector2d_ChangeEdgesIntersector)
    CurrentGeomShape = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector2d_CurrentGeomShape)
    DumpCurrent = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector2d_DumpCurrent)
    Index = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector2d_Index)
    InitIntersection = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector2d_InitIntersection)
    MoreIntersection = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector2d_MoreIntersection)
    NextIntersection = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector2d_NextIntersection)
    Shape = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeIntersector2d_Shape)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_ShapeIntersector2d_swiginit(self, _TopOpeBRep.new_TopOpeBRep_ShapeIntersector2d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_ShapeIntersector2d

# Register TopOpeBRep_ShapeIntersector2d in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_ShapeIntersector2d_swigregister(TopOpeBRep_ShapeIntersector2d)

class TopOpeBRep_ShapeScanner(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddBoxesMakeCOB = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_AddBoxesMakeCOB)
    BoxSort = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_BoxSort)
    ChangeBoxSort = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_ChangeBoxSort)
    Clear = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_Clear)
    Current = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_Current)
    DumpCurrentToString = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_DumpCurrentToString)
    Index = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_Index)
    Init = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_Init)
    More = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_More)
    Next = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_ShapeScanner_Next)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_ShapeScanner_swiginit(self, _TopOpeBRep.new_TopOpeBRep_ShapeScanner(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_ShapeScanner

# Register TopOpeBRep_ShapeScanner in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_ShapeScanner_swigregister(TopOpeBRep_ShapeScanner)

class TopOpeBRep_VPointInter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ArcOnS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ArcOnS1)
    ArcOnS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ArcOnS2)
    ChangeKeep = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ChangeKeep)
    Dump = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_Dump)
    Edge = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_Edge)
    EdgeON = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_EdgeON)
    EdgeONParameter = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_EdgeONParameter)
    EdgeParameter = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_EdgeParameter)
    EqualpP = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_EqualpP)
    GetShapes = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_GetShapes)
    Index = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_Index)
    IsInternal = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_IsInternal)
    IsMultiple = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_IsMultiple)
    IsOnDomS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_IsOnDomS1)
    IsOnDomS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_IsOnDomS2)
    IsVertex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_IsVertex)
    IsVertexOnS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_IsVertexOnS1)
    IsVertexOnS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_IsVertexOnS2)
    Keep = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_Keep)
    PThePointOfIntersectionDummy = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_PThePointOfIntersectionDummy)
    ParameterOnArc1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ParameterOnArc1)
    ParameterOnArc2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ParameterOnArc2)
    ParameterOnLine = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ParameterOnLine)
    ParametersOnS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ParametersOnS1)
    ParametersOnS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ParametersOnS2)
    ParonE = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ParonE)
    SetPoint = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_SetPoint)
    SetShapes = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_SetShapes)
    ShapeIndex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_ShapeIndex)
    State = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_State)
    SurfaceParameters = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_SurfaceParameters)
    Tolerance = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_Tolerance)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_VPointInter_swiginit(self, _TopOpeBRep.new_TopOpeBRep_VPointInter(*args))
    TransitionLineArc1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_TransitionLineArc1)
    TransitionLineArc2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_TransitionLineArc2)
    TransitionOnS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_TransitionOnS1)
    TransitionOnS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_TransitionOnS2)
    UpdateKeep = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_UpdateKeep)
    Value = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_Value)
    Vertex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_Vertex)
    VertexOnS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_VertexOnS1)
    VertexOnS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInter_VertexOnS2)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_VPointInter

# Register TopOpeBRep_VPointInter in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_VPointInter_swigregister(TopOpeBRep_VPointInter)

class TopOpeBRep_VPointInterClassifier(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Edge = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterClassifier_Edge)
    EdgeParameter = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterClassifier_EdgeParameter)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_VPointInterClassifier_swiginit(self, _TopOpeBRep.new_TopOpeBRep_VPointInterClassifier(*args))
    VPointPosition = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterClassifier_VPointPosition)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_VPointInterClassifier

# Register TopOpeBRep_VPointInterClassifier in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_VPointInterClassifier_swigregister(TopOpeBRep_VPointInterClassifier)

class TopOpeBRep_VPointInterIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeCurrentVP = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterIterator_ChangeCurrentVP)
    CurrentVP = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterIterator_CurrentVP)
    CurrentVPIndex = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterIterator_CurrentVPIndex)
    Init = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterIterator_Init)
    More = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterIterator_More)
    Next = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterIterator_Next)
    PLineInterDummy = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_VPointInterIterator_PLineInterDummy)

    def __init__(self, *args):
        r"""
        :rtype: None:param LI:
        	:type LI: TopOpeBRep_LineInter
        	:rtype: None
        """
        _TopOpeBRep.TopOpeBRep_VPointInterIterator_swiginit(self, _TopOpeBRep.new_TopOpeBRep_VPointInterIterator(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_VPointInterIterator

# Register TopOpeBRep_VPointInterIterator in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_VPointInterIterator_swigregister(TopOpeBRep_VPointInterIterator)

class TopOpeBRep_WPointInter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PPntOn2SDummy = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInter_PPntOn2SDummy)
    Parameters = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInter_Parameters)
    ParametersOnS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInter_ParametersOnS1)
    ParametersOnS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInter_ParametersOnS2)
    Set = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInter_Set)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRep.TopOpeBRep_WPointInter_swiginit(self, _TopOpeBRep.new_TopOpeBRep_WPointInter(*args))
    Value = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInter_Value)
    ValueOnS1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInter_ValueOnS1)
    ValueOnS2 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInter_ValueOnS2)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_WPointInter

# Register TopOpeBRep_WPointInter in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_WPointInter_swigregister(TopOpeBRep_WPointInter)

class TopOpeBRep_WPointInterIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CurrentWP = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInterIterator_CurrentWP)
    Init = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInterIterator_Init)
    More = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInterIterator_More)
    Next = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInterIterator_Next)
    PLineInterDummy = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_WPointInterIterator_PLineInterDummy)

    def __init__(self, *args):
        r"""
        :rtype: None:param LI:
        	:type LI: TopOpeBRep_LineInter
        	:rtype: None
        """
        _TopOpeBRep.TopOpeBRep_WPointInterIterator_swiginit(self, _TopOpeBRep.new_TopOpeBRep_WPointInterIterator(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_WPointInterIterator

# Register TopOpeBRep_WPointInterIterator in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_WPointInterIterator_swigregister(TopOpeBRep_WPointInterIterator)

class TopOpeBRep_HArray1OfVPointInter(TopOpeBRep_Array1OfVPointInter, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRep.TopOpeBRep_HArray1OfVPointInter_swiginit(self, _TopOpeBRep.new_TopOpeBRep_HArray1OfVPointInter(*args))
    Array1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_HArray1OfVPointInter_Array1)
    ChangeArray1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_HArray1OfVPointInter_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRep_HArray1OfVPointInter_DownCast(t)

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_HArray1OfVPointInter

# Register TopOpeBRep_HArray1OfVPointInter in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_HArray1OfVPointInter_swigregister(TopOpeBRep_HArray1OfVPointInter)

class TopOpeBRep_HArray1OfLineInter(TopOpeBRep_Array1OfLineInter, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRep.TopOpeBRep_HArray1OfLineInter_swiginit(self, _TopOpeBRep.new_TopOpeBRep_HArray1OfLineInter(*args))
    Array1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_HArray1OfLineInter_Array1)
    ChangeArray1 = _swig_new_instance_method(_TopOpeBRep.TopOpeBRep_HArray1OfLineInter_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRep_HArray1OfLineInter_DownCast(t)

    __swig_destroy__ = _TopOpeBRep.delete_TopOpeBRep_HArray1OfLineInter

# Register TopOpeBRep_HArray1OfLineInter in _TopOpeBRep:
_TopOpeBRep.TopOpeBRep_HArray1OfLineInter_swigregister(TopOpeBRep_HArray1OfLineInter)



