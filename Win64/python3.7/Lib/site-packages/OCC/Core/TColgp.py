# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TColgp module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_tcolgp.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _TColgp
else:
    import _TColgp

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _TColgp.SWIG_PyInstanceMethod_New
_swig_new_static_method = _TColgp.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TColgp.delete_SwigPyIterator
    value = _swig_new_instance_method(_TColgp.SwigPyIterator_value)
    incr = _swig_new_instance_method(_TColgp.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_TColgp.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_TColgp.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_TColgp.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_TColgp.SwigPyIterator_copy)
    next = _swig_new_instance_method(_TColgp.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_TColgp.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_TColgp.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_TColgp.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_TColgp.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_TColgp.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_TColgp.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_TColgp.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_TColgp.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_TColgp.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _TColgp:
_TColgp.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
Handle_TColgp_HArray1OfVec_Create = _TColgp.Handle_TColgp_HArray1OfVec_Create
Handle_TColgp_HArray1OfVec_DownCast = _TColgp.Handle_TColgp_HArray1OfVec_DownCast
Handle_TColgp_HArray1OfVec_IsNull = _TColgp.Handle_TColgp_HArray1OfVec_IsNull
Handle_TColgp_HArray1OfXY_Create = _TColgp.Handle_TColgp_HArray1OfXY_Create
Handle_TColgp_HArray1OfXY_DownCast = _TColgp.Handle_TColgp_HArray1OfXY_DownCast
Handle_TColgp_HArray1OfXY_IsNull = _TColgp.Handle_TColgp_HArray1OfXY_IsNull
Handle_TColgp_HArray1OfCirc2d_Create = _TColgp.Handle_TColgp_HArray1OfCirc2d_Create
Handle_TColgp_HArray1OfCirc2d_DownCast = _TColgp.Handle_TColgp_HArray1OfCirc2d_DownCast
Handle_TColgp_HArray1OfCirc2d_IsNull = _TColgp.Handle_TColgp_HArray1OfCirc2d_IsNull
Handle_TColgp_HArray1OfPnt2d_Create = _TColgp.Handle_TColgp_HArray1OfPnt2d_Create
Handle_TColgp_HArray1OfPnt2d_DownCast = _TColgp.Handle_TColgp_HArray1OfPnt2d_DownCast
Handle_TColgp_HArray1OfPnt2d_IsNull = _TColgp.Handle_TColgp_HArray1OfPnt2d_IsNull
Handle_TColgp_HArray1OfDir_Create = _TColgp.Handle_TColgp_HArray1OfDir_Create
Handle_TColgp_HArray1OfDir_DownCast = _TColgp.Handle_TColgp_HArray1OfDir_DownCast
Handle_TColgp_HArray1OfDir_IsNull = _TColgp.Handle_TColgp_HArray1OfDir_IsNull
Handle_TColgp_HArray1OfLin2d_Create = _TColgp.Handle_TColgp_HArray1OfLin2d_Create
Handle_TColgp_HArray1OfLin2d_DownCast = _TColgp.Handle_TColgp_HArray1OfLin2d_DownCast
Handle_TColgp_HArray1OfLin2d_IsNull = _TColgp.Handle_TColgp_HArray1OfLin2d_IsNull
Handle_TColgp_HArray1OfPnt_Create = _TColgp.Handle_TColgp_HArray1OfPnt_Create
Handle_TColgp_HArray1OfPnt_DownCast = _TColgp.Handle_TColgp_HArray1OfPnt_DownCast
Handle_TColgp_HArray1OfPnt_IsNull = _TColgp.Handle_TColgp_HArray1OfPnt_IsNull
Handle_TColgp_HArray1OfXYZ_Create = _TColgp.Handle_TColgp_HArray1OfXYZ_Create
Handle_TColgp_HArray1OfXYZ_DownCast = _TColgp.Handle_TColgp_HArray1OfXYZ_DownCast
Handle_TColgp_HArray1OfXYZ_IsNull = _TColgp.Handle_TColgp_HArray1OfXYZ_IsNull
Handle_TColgp_HArray1OfVec2d_Create = _TColgp.Handle_TColgp_HArray1OfVec2d_Create
Handle_TColgp_HArray1OfVec2d_DownCast = _TColgp.Handle_TColgp_HArray1OfVec2d_DownCast
Handle_TColgp_HArray1OfVec2d_IsNull = _TColgp.Handle_TColgp_HArray1OfVec2d_IsNull
Handle_TColgp_HArray1OfDir2d_Create = _TColgp.Handle_TColgp_HArray1OfDir2d_Create
Handle_TColgp_HArray1OfDir2d_DownCast = _TColgp.Handle_TColgp_HArray1OfDir2d_DownCast
Handle_TColgp_HArray1OfDir2d_IsNull = _TColgp.Handle_TColgp_HArray1OfDir2d_IsNull
Handle_TColgp_HArray2OfLin2d_Create = _TColgp.Handle_TColgp_HArray2OfLin2d_Create
Handle_TColgp_HArray2OfLin2d_DownCast = _TColgp.Handle_TColgp_HArray2OfLin2d_DownCast
Handle_TColgp_HArray2OfLin2d_IsNull = _TColgp.Handle_TColgp_HArray2OfLin2d_IsNull
Handle_TColgp_HArray2OfVec_Create = _TColgp.Handle_TColgp_HArray2OfVec_Create
Handle_TColgp_HArray2OfVec_DownCast = _TColgp.Handle_TColgp_HArray2OfVec_DownCast
Handle_TColgp_HArray2OfVec_IsNull = _TColgp.Handle_TColgp_HArray2OfVec_IsNull
Handle_TColgp_HArray2OfCirc2d_Create = _TColgp.Handle_TColgp_HArray2OfCirc2d_Create
Handle_TColgp_HArray2OfCirc2d_DownCast = _TColgp.Handle_TColgp_HArray2OfCirc2d_DownCast
Handle_TColgp_HArray2OfCirc2d_IsNull = _TColgp.Handle_TColgp_HArray2OfCirc2d_IsNull
Handle_TColgp_HArray2OfPnt2d_Create = _TColgp.Handle_TColgp_HArray2OfPnt2d_Create
Handle_TColgp_HArray2OfPnt2d_DownCast = _TColgp.Handle_TColgp_HArray2OfPnt2d_DownCast
Handle_TColgp_HArray2OfPnt2d_IsNull = _TColgp.Handle_TColgp_HArray2OfPnt2d_IsNull
Handle_TColgp_HArray2OfDir2d_Create = _TColgp.Handle_TColgp_HArray2OfDir2d_Create
Handle_TColgp_HArray2OfDir2d_DownCast = _TColgp.Handle_TColgp_HArray2OfDir2d_DownCast
Handle_TColgp_HArray2OfDir2d_IsNull = _TColgp.Handle_TColgp_HArray2OfDir2d_IsNull
Handle_TColgp_HArray2OfDir_Create = _TColgp.Handle_TColgp_HArray2OfDir_Create
Handle_TColgp_HArray2OfDir_DownCast = _TColgp.Handle_TColgp_HArray2OfDir_DownCast
Handle_TColgp_HArray2OfDir_IsNull = _TColgp.Handle_TColgp_HArray2OfDir_IsNull
Handle_TColgp_HArray2OfPnt_Create = _TColgp.Handle_TColgp_HArray2OfPnt_Create
Handle_TColgp_HArray2OfPnt_DownCast = _TColgp.Handle_TColgp_HArray2OfPnt_DownCast
Handle_TColgp_HArray2OfPnt_IsNull = _TColgp.Handle_TColgp_HArray2OfPnt_IsNull
Handle_TColgp_HArray2OfVec2d_Create = _TColgp.Handle_TColgp_HArray2OfVec2d_Create
Handle_TColgp_HArray2OfVec2d_DownCast = _TColgp.Handle_TColgp_HArray2OfVec2d_DownCast
Handle_TColgp_HArray2OfVec2d_IsNull = _TColgp.Handle_TColgp_HArray2OfVec2d_IsNull
Handle_TColgp_HArray2OfXYZ_Create = _TColgp.Handle_TColgp_HArray2OfXYZ_Create
Handle_TColgp_HArray2OfXYZ_DownCast = _TColgp.Handle_TColgp_HArray2OfXYZ_DownCast
Handle_TColgp_HArray2OfXYZ_IsNull = _TColgp.Handle_TColgp_HArray2OfXYZ_IsNull
Handle_TColgp_HArray2OfXY_Create = _TColgp.Handle_TColgp_HArray2OfXY_Create
Handle_TColgp_HArray2OfXY_DownCast = _TColgp.Handle_TColgp_HArray2OfXY_DownCast
Handle_TColgp_HArray2OfXY_IsNull = _TColgp.Handle_TColgp_HArray2OfXY_IsNull
Handle_TColgp_HSequenceOfXY_Create = _TColgp.Handle_TColgp_HSequenceOfXY_Create
Handle_TColgp_HSequenceOfXY_DownCast = _TColgp.Handle_TColgp_HSequenceOfXY_DownCast
Handle_TColgp_HSequenceOfXY_IsNull = _TColgp.Handle_TColgp_HSequenceOfXY_IsNull
Handle_TColgp_HSequenceOfPnt2d_Create = _TColgp.Handle_TColgp_HSequenceOfPnt2d_Create
Handle_TColgp_HSequenceOfPnt2d_DownCast = _TColgp.Handle_TColgp_HSequenceOfPnt2d_DownCast
Handle_TColgp_HSequenceOfPnt2d_IsNull = _TColgp.Handle_TColgp_HSequenceOfPnt2d_IsNull
Handle_TColgp_HSequenceOfPnt_Create = _TColgp.Handle_TColgp_HSequenceOfPnt_Create
Handle_TColgp_HSequenceOfPnt_DownCast = _TColgp.Handle_TColgp_HSequenceOfPnt_DownCast
Handle_TColgp_HSequenceOfPnt_IsNull = _TColgp.Handle_TColgp_HSequenceOfPnt_IsNull
Handle_TColgp_HSequenceOfXYZ_Create = _TColgp.Handle_TColgp_HSequenceOfXYZ_Create
Handle_TColgp_HSequenceOfXYZ_DownCast = _TColgp.Handle_TColgp_HSequenceOfXYZ_DownCast
Handle_TColgp_HSequenceOfXYZ_IsNull = _TColgp.Handle_TColgp_HSequenceOfXYZ_IsNull
Handle_TColgp_HSequenceOfVec2d_Create = _TColgp.Handle_TColgp_HSequenceOfVec2d_Create
Handle_TColgp_HSequenceOfVec2d_DownCast = _TColgp.Handle_TColgp_HSequenceOfVec2d_DownCast
Handle_TColgp_HSequenceOfVec2d_IsNull = _TColgp.Handle_TColgp_HSequenceOfVec2d_IsNull
Handle_TColgp_HSequenceOfDir2d_Create = _TColgp.Handle_TColgp_HSequenceOfDir2d_Create
Handle_TColgp_HSequenceOfDir2d_DownCast = _TColgp.Handle_TColgp_HSequenceOfDir2d_DownCast
Handle_TColgp_HSequenceOfDir2d_IsNull = _TColgp.Handle_TColgp_HSequenceOfDir2d_IsNull
Handle_TColgp_HSequenceOfVec_Create = _TColgp.Handle_TColgp_HSequenceOfVec_Create
Handle_TColgp_HSequenceOfVec_DownCast = _TColgp.Handle_TColgp_HSequenceOfVec_DownCast
Handle_TColgp_HSequenceOfVec_IsNull = _TColgp.Handle_TColgp_HSequenceOfVec_IsNull
Handle_TColgp_HSequenceOfDir_Create = _TColgp.Handle_TColgp_HSequenceOfDir_Create
Handle_TColgp_HSequenceOfDir_DownCast = _TColgp.Handle_TColgp_HSequenceOfDir_DownCast
Handle_TColgp_HSequenceOfDir_IsNull = _TColgp.Handle_TColgp_HSequenceOfDir_IsNull
class TColgp_Array2OfXYZ(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfXYZ_swiginit(self, _TColgp.new_TColgp_Array2OfXYZ(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfXYZ_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfXYZ

# Register TColgp_Array2OfXYZ in _TColgp:
_TColgp.TColgp_Array2OfXYZ_swigregister(TColgp_Array2OfXYZ)

class TColgp_SequenceOfVec(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfVec_swiginit(self, _TColgp.new_TColgp_SequenceOfVec(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfVec_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfVec

# Register TColgp_SequenceOfVec in _TColgp:
_TColgp.TColgp_SequenceOfVec_swigregister(TColgp_SequenceOfVec)
TColgp_SequenceOfVec_delNode = _TColgp.TColgp_SequenceOfVec_delNode

class TColgp_Array1OfCirc2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfCirc2d_swiginit(self, _TColgp.new_TColgp_Array1OfCirc2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfCirc2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfCirc2d

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfCirc2d in _TColgp:
_TColgp.TColgp_Array1OfCirc2d_swigregister(TColgp_Array1OfCirc2d)

class TColgp_Array1OfLin2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfLin2d_swiginit(self, _TColgp.new_TColgp_Array1OfLin2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfLin2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfLin2d

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfLin2d in _TColgp:
_TColgp.TColgp_Array1OfLin2d_swigregister(TColgp_Array1OfLin2d)

class TColgp_SequenceOfPnt2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfPnt2d_swiginit(self, _TColgp.new_TColgp_SequenceOfPnt2d(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfPnt2d_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt2d_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfPnt2d

# Register TColgp_SequenceOfPnt2d in _TColgp:
_TColgp.TColgp_SequenceOfPnt2d_swigregister(TColgp_SequenceOfPnt2d)
TColgp_SequenceOfPnt2d_delNode = _TColgp.TColgp_SequenceOfPnt2d_delNode

class TColgp_SequenceOfVec2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfVec2d_swiginit(self, _TColgp.new_TColgp_SequenceOfVec2d(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfVec2d_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfVec2d_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfVec2d

# Register TColgp_SequenceOfVec2d in _TColgp:
_TColgp.TColgp_SequenceOfVec2d_swigregister(TColgp_SequenceOfVec2d)
TColgp_SequenceOfVec2d_delNode = _TColgp.TColgp_SequenceOfVec2d_delNode

class TColgp_Array1OfDir(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfDir_swiginit(self, _TColgp.new_TColgp_Array1OfDir(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfDir

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfDir in _TColgp:
_TColgp.TColgp_Array1OfDir_swigregister(TColgp_Array1OfDir)

class TColgp_SequenceOfPnt(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfPnt_swiginit(self, _TColgp.new_TColgp_SequenceOfPnt(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfPnt_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfPnt_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfPnt

# Register TColgp_SequenceOfPnt in _TColgp:
_TColgp.TColgp_SequenceOfPnt_swigregister(TColgp_SequenceOfPnt)
TColgp_SequenceOfPnt_delNode = _TColgp.TColgp_SequenceOfPnt_delNode

class TColgp_Array1OfPnt2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfPnt2d_swiginit(self, _TColgp.new_TColgp_Array1OfPnt2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfPnt2d

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfPnt2d in _TColgp:
_TColgp.TColgp_Array1OfPnt2d_swigregister(TColgp_Array1OfPnt2d)

class TColgp_Array1OfDir2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfDir2d_swiginit(self, _TColgp.new_TColgp_Array1OfDir2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfDir2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfDir2d

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfDir2d in _TColgp:
_TColgp.TColgp_Array1OfDir2d_swigregister(TColgp_Array1OfDir2d)

class TColgp_SequenceOfDir2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfDir2d_swiginit(self, _TColgp.new_TColgp_SequenceOfDir2d(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfDir2d_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir2d_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfDir2d

# Register TColgp_SequenceOfDir2d in _TColgp:
_TColgp.TColgp_SequenceOfDir2d_swigregister(TColgp_SequenceOfDir2d)
TColgp_SequenceOfDir2d_delNode = _TColgp.TColgp_SequenceOfDir2d_delNode

class TColgp_Array2OfVec2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfVec2d_swiginit(self, _TColgp.new_TColgp_Array2OfVec2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfVec2d

# Register TColgp_Array2OfVec2d in _TColgp:
_TColgp.TColgp_Array2OfVec2d_swigregister(TColgp_Array2OfVec2d)

class TColgp_Array2OfXY(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfXY_swiginit(self, _TColgp.new_TColgp_Array2OfXY(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfXY_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfXY

# Register TColgp_Array2OfXY in _TColgp:
_TColgp.TColgp_Array2OfXY_swigregister(TColgp_Array2OfXY)

class TColgp_Array2OfLin2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfLin2d_swiginit(self, _TColgp.new_TColgp_Array2OfLin2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfLin2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfLin2d

# Register TColgp_Array2OfLin2d in _TColgp:
_TColgp.TColgp_Array2OfLin2d_swigregister(TColgp_Array2OfLin2d)

class TColgp_SequenceOfXY(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfXY_swiginit(self, _TColgp.new_TColgp_SequenceOfXY(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfXY_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXY_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfXY

# Register TColgp_SequenceOfXY in _TColgp:
_TColgp.TColgp_SequenceOfXY_swigregister(TColgp_SequenceOfXY)
TColgp_SequenceOfXY_delNode = _TColgp.TColgp_SequenceOfXY_delNode

class TColgp_Array1OfXYZ(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfXYZ_swiginit(self, _TColgp.new_TColgp_Array1OfXYZ(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfXYZ_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfXYZ

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfXYZ in _TColgp:
_TColgp.TColgp_Array1OfXYZ_swigregister(TColgp_Array1OfXYZ)

class TColgp_Array2OfPnt2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfPnt2d_swiginit(self, _TColgp.new_TColgp_Array2OfPnt2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfPnt2d

# Register TColgp_Array2OfPnt2d in _TColgp:
_TColgp.TColgp_Array2OfPnt2d_swigregister(TColgp_Array2OfPnt2d)

class TColgp_Array1OfVec2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfVec2d_swiginit(self, _TColgp.new_TColgp_Array1OfVec2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfVec2d

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfVec2d in _TColgp:
_TColgp.TColgp_Array1OfVec2d_swigregister(TColgp_Array1OfVec2d)

class TColgp_SequenceOfAx1(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfAx1_swiginit(self, _TColgp.new_TColgp_SequenceOfAx1(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfAx1_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfAx1_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfAx1

# Register TColgp_SequenceOfAx1 in _TColgp:
_TColgp.TColgp_SequenceOfAx1_swigregister(TColgp_SequenceOfAx1)
TColgp_SequenceOfAx1_delNode = _TColgp.TColgp_SequenceOfAx1_delNode

class TColgp_SequenceOfDir(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfDir_swiginit(self, _TColgp.new_TColgp_SequenceOfDir(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfDir_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfDir_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfDir

# Register TColgp_SequenceOfDir in _TColgp:
_TColgp.TColgp_SequenceOfDir_swigregister(TColgp_SequenceOfDir)
TColgp_SequenceOfDir_delNode = _TColgp.TColgp_SequenceOfDir_delNode

class TColgp_SequenceOfArray1OfPnt2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfArray1OfPnt2d_swiginit(self, _TColgp.new_TColgp_SequenceOfArray1OfPnt2d(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfArray1OfPnt2d_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfArray1OfPnt2d

# Register TColgp_SequenceOfArray1OfPnt2d in _TColgp:
_TColgp.TColgp_SequenceOfArray1OfPnt2d_swigregister(TColgp_SequenceOfArray1OfPnt2d)
TColgp_SequenceOfArray1OfPnt2d_delNode = _TColgp.TColgp_SequenceOfArray1OfPnt2d_delNode

class TColgp_Array1OfVec(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfVec_swiginit(self, _TColgp.new_TColgp_Array1OfVec(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfVec_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfVec

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfVec in _TColgp:
_TColgp.TColgp_Array1OfVec_swigregister(TColgp_Array1OfVec)

class TColgp_Array2OfPnt(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfPnt_swiginit(self, _TColgp.new_TColgp_Array2OfPnt(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfPnt_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfPnt

# Register TColgp_Array2OfPnt in _TColgp:
_TColgp.TColgp_Array2OfPnt_swigregister(TColgp_Array2OfPnt)

class TColgp_Array2OfVec(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfVec_swiginit(self, _TColgp.new_TColgp_Array2OfVec(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfVec_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfVec

# Register TColgp_Array2OfVec in _TColgp:
_TColgp.TColgp_Array2OfVec_swigregister(TColgp_Array2OfVec)

class TColgp_Array2OfCirc2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfCirc2d_swiginit(self, _TColgp.new_TColgp_Array2OfCirc2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfCirc2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfCirc2d

# Register TColgp_Array2OfCirc2d in _TColgp:
_TColgp.TColgp_Array2OfCirc2d_swigregister(TColgp_Array2OfCirc2d)

class TColgp_Array1OfXY(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfXY_swiginit(self, _TColgp.new_TColgp_Array1OfXY(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfXY_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfXY

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfXY in _TColgp:
_TColgp.TColgp_Array1OfXY_swigregister(TColgp_Array1OfXY)

class TColgp_Array2OfDir2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfDir2d_swiginit(self, _TColgp.new_TColgp_Array2OfDir2d(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir2d_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfDir2d

# Register TColgp_Array2OfDir2d in _TColgp:
_TColgp.TColgp_Array2OfDir2d_swigregister(TColgp_Array2OfDir2d)

class TColgp_Array1OfPnt(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_cend)

    def __init__(self, *args):
        _TColgp.TColgp_Array1OfPnt_swiginit(self, _TColgp.new_TColgp_Array1OfPnt(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Length)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_IsEmpty)
    Lower = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Upper)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_IsAllocated)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Set)
    First = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array1OfPnt_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array1OfPnt

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColgp_Array1OfPnt in _TColgp:
_TColgp.TColgp_Array1OfPnt_swigregister(TColgp_Array1OfPnt)

class TColgp_SequenceOfXYZ(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_begin)
    end = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_end)
    cbegin = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_cbegin)
    cend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_cend)

    def __init__(self, *args):
        _TColgp.TColgp_SequenceOfXYZ_swiginit(self, _TColgp.new_TColgp_SequenceOfXYZ(*args))
    Size = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Length)
    Lower = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Lower)
    Upper = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Upper)
    IsEmpty = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_IsEmpty)
    Reverse = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Reverse)
    Exchange = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Exchange)
    delNode = _swig_new_static_method(_TColgp.TColgp_SequenceOfXYZ_delNode)
    Clear = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Clear)
    Assign = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Assign)
    Set = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Set)
    Remove = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Remove)
    Append = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Append)
    Prepend = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Prepend)
    InsertBefore = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_InsertAfter)
    Split = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Split)
    First = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_First)
    ChangeFirst = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_ChangeFirst)
    Last = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Last)
    ChangeLast = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_ChangeLast)
    Value = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_SequenceOfXYZ_SetValue)
    __swig_destroy__ = _TColgp.delete_TColgp_SequenceOfXYZ

# Register TColgp_SequenceOfXYZ in _TColgp:
_TColgp.TColgp_SequenceOfXYZ_swigregister(TColgp_SequenceOfXYZ)
TColgp_SequenceOfXYZ_delNode = _TColgp.TColgp_SequenceOfXYZ_delNode

class TColgp_Array2OfDir(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_Array2OfDir_swiginit(self, _TColgp.new_TColgp_Array2OfDir(*args))
    Init = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_Init)
    Size = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_Size)
    Length = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_Length)
    NbRows = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_NbRows)
    NbColumns = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_NbColumns)
    RowLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_RowLength)
    ColLength = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_ColLength)
    LowerRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_LowerRow)
    UpperRow = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_UpperRow)
    LowerCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_LowerCol)
    UpperCol = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_IsDeletable)
    Assign = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_Assign)
    Move = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_Move)
    Set = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_Set)
    Value = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_Value)
    ChangeValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_ChangeValue)
    __call__ = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir___call__)
    SetValue = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_SetValue)
    Resize = _swig_new_instance_method(_TColgp.TColgp_Array2OfDir_Resize)
    __swig_destroy__ = _TColgp.delete_TColgp_Array2OfDir

# Register TColgp_Array2OfDir in _TColgp:
_TColgp.TColgp_Array2OfDir_swigregister(TColgp_Array2OfDir)

class TColgp_HArray1OfVec(TColgp_Array1OfVec, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfVec_swiginit(self, _TColgp.new_TColgp_HArray1OfVec(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfVec_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfVec_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfVec_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfVec

# Register TColgp_HArray1OfVec in _TColgp:
_TColgp.TColgp_HArray1OfVec_swigregister(TColgp_HArray1OfVec)

class TColgp_HArray1OfXY(TColgp_Array1OfXY, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfXY_swiginit(self, _TColgp.new_TColgp_HArray1OfXY(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfXY_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfXY_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfXY_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfXY

# Register TColgp_HArray1OfXY in _TColgp:
_TColgp.TColgp_HArray1OfXY_swigregister(TColgp_HArray1OfXY)

class TColgp_HArray1OfCirc2d(TColgp_Array1OfCirc2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfCirc2d_swiginit(self, _TColgp.new_TColgp_HArray1OfCirc2d(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfCirc2d_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfCirc2d_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfCirc2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfCirc2d

# Register TColgp_HArray1OfCirc2d in _TColgp:
_TColgp.TColgp_HArray1OfCirc2d_swigregister(TColgp_HArray1OfCirc2d)

class TColgp_HArray1OfPnt2d(TColgp_Array1OfPnt2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfPnt2d_swiginit(self, _TColgp.new_TColgp_HArray1OfPnt2d(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfPnt2d_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfPnt2d_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfPnt2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfPnt2d

# Register TColgp_HArray1OfPnt2d in _TColgp:
_TColgp.TColgp_HArray1OfPnt2d_swigregister(TColgp_HArray1OfPnt2d)

class TColgp_HArray1OfDir(TColgp_Array1OfDir, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfDir_swiginit(self, _TColgp.new_TColgp_HArray1OfDir(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfDir_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfDir_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfDir_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfDir

# Register TColgp_HArray1OfDir in _TColgp:
_TColgp.TColgp_HArray1OfDir_swigregister(TColgp_HArray1OfDir)

class TColgp_HArray1OfLin2d(TColgp_Array1OfLin2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfLin2d_swiginit(self, _TColgp.new_TColgp_HArray1OfLin2d(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfLin2d_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfLin2d_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfLin2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfLin2d

# Register TColgp_HArray1OfLin2d in _TColgp:
_TColgp.TColgp_HArray1OfLin2d_swigregister(TColgp_HArray1OfLin2d)

class TColgp_HArray1OfPnt(TColgp_Array1OfPnt, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfPnt_swiginit(self, _TColgp.new_TColgp_HArray1OfPnt(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfPnt_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfPnt_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfPnt_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfPnt

# Register TColgp_HArray1OfPnt in _TColgp:
_TColgp.TColgp_HArray1OfPnt_swigregister(TColgp_HArray1OfPnt)

class TColgp_HArray1OfXYZ(TColgp_Array1OfXYZ, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfXYZ_swiginit(self, _TColgp.new_TColgp_HArray1OfXYZ(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfXYZ_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfXYZ_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfXYZ_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfXYZ

# Register TColgp_HArray1OfXYZ in _TColgp:
_TColgp.TColgp_HArray1OfXYZ_swigregister(TColgp_HArray1OfXYZ)

class TColgp_HArray1OfVec2d(TColgp_Array1OfVec2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfVec2d_swiginit(self, _TColgp.new_TColgp_HArray1OfVec2d(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfVec2d_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfVec2d_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfVec2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfVec2d

# Register TColgp_HArray1OfVec2d in _TColgp:
_TColgp.TColgp_HArray1OfVec2d_swigregister(TColgp_HArray1OfVec2d)

class TColgp_HArray1OfDir2d(TColgp_Array1OfDir2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray1OfDir2d_swiginit(self, _TColgp.new_TColgp_HArray1OfDir2d(*args))
    Array1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfDir2d_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColgp.TColgp_HArray1OfDir2d_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray1OfDir2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray1OfDir2d

# Register TColgp_HArray1OfDir2d in _TColgp:
_TColgp.TColgp_HArray1OfDir2d_swigregister(TColgp_HArray1OfDir2d)

class TColgp_HArray2OfLin2d(TColgp_Array2OfLin2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfLin2d_swiginit(self, _TColgp.new_TColgp_HArray2OfLin2d(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfLin2d_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfLin2d_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfLin2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfLin2d

# Register TColgp_HArray2OfLin2d in _TColgp:
_TColgp.TColgp_HArray2OfLin2d_swigregister(TColgp_HArray2OfLin2d)

class TColgp_HArray2OfVec(TColgp_Array2OfVec, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfVec_swiginit(self, _TColgp.new_TColgp_HArray2OfVec(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfVec_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfVec_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfVec_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfVec

# Register TColgp_HArray2OfVec in _TColgp:
_TColgp.TColgp_HArray2OfVec_swigregister(TColgp_HArray2OfVec)

class TColgp_HArray2OfCirc2d(TColgp_Array2OfCirc2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfCirc2d_swiginit(self, _TColgp.new_TColgp_HArray2OfCirc2d(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfCirc2d_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfCirc2d_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfCirc2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfCirc2d

# Register TColgp_HArray2OfCirc2d in _TColgp:
_TColgp.TColgp_HArray2OfCirc2d_swigregister(TColgp_HArray2OfCirc2d)

class TColgp_HArray2OfPnt2d(TColgp_Array2OfPnt2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfPnt2d_swiginit(self, _TColgp.new_TColgp_HArray2OfPnt2d(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfPnt2d_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfPnt2d_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfPnt2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfPnt2d

# Register TColgp_HArray2OfPnt2d in _TColgp:
_TColgp.TColgp_HArray2OfPnt2d_swigregister(TColgp_HArray2OfPnt2d)

class TColgp_HArray2OfDir2d(TColgp_Array2OfDir2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfDir2d_swiginit(self, _TColgp.new_TColgp_HArray2OfDir2d(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfDir2d_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfDir2d_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfDir2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfDir2d

# Register TColgp_HArray2OfDir2d in _TColgp:
_TColgp.TColgp_HArray2OfDir2d_swigregister(TColgp_HArray2OfDir2d)

class TColgp_HArray2OfDir(TColgp_Array2OfDir, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfDir_swiginit(self, _TColgp.new_TColgp_HArray2OfDir(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfDir_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfDir_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfDir_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfDir

# Register TColgp_HArray2OfDir in _TColgp:
_TColgp.TColgp_HArray2OfDir_swigregister(TColgp_HArray2OfDir)

class TColgp_HArray2OfPnt(TColgp_Array2OfPnt, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfPnt_swiginit(self, _TColgp.new_TColgp_HArray2OfPnt(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfPnt_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfPnt_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfPnt_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfPnt

# Register TColgp_HArray2OfPnt in _TColgp:
_TColgp.TColgp_HArray2OfPnt_swigregister(TColgp_HArray2OfPnt)

class TColgp_HArray2OfVec2d(TColgp_Array2OfVec2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfVec2d_swiginit(self, _TColgp.new_TColgp_HArray2OfVec2d(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfVec2d_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfVec2d_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfVec2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfVec2d

# Register TColgp_HArray2OfVec2d in _TColgp:
_TColgp.TColgp_HArray2OfVec2d_swigregister(TColgp_HArray2OfVec2d)

class TColgp_HArray2OfXYZ(TColgp_Array2OfXYZ, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfXYZ_swiginit(self, _TColgp.new_TColgp_HArray2OfXYZ(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfXYZ_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfXYZ_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfXYZ_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfXYZ

# Register TColgp_HArray2OfXYZ in _TColgp:
_TColgp.TColgp_HArray2OfXYZ_swigregister(TColgp_HArray2OfXYZ)

class TColgp_HArray2OfXY(TColgp_Array2OfXY, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HArray2OfXY_swiginit(self, _TColgp.new_TColgp_HArray2OfXY(*args))
    Array2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfXY_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColgp.TColgp_HArray2OfXY_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HArray2OfXY_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HArray2OfXY

# Register TColgp_HArray2OfXY in _TColgp:
_TColgp.TColgp_HArray2OfXY_swigregister(TColgp_HArray2OfXY)

class TColgp_HSequenceOfXY(TColgp_SequenceOfXY, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HSequenceOfXY_swiginit(self, _TColgp.new_TColgp_HSequenceOfXY(*args))
    Sequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfXY_Sequence)
    Append = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfXY_Append)
    ChangeSequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfXY_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HSequenceOfXY_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HSequenceOfXY

# Register TColgp_HSequenceOfXY in _TColgp:
_TColgp.TColgp_HSequenceOfXY_swigregister(TColgp_HSequenceOfXY)

class TColgp_HSequenceOfPnt2d(TColgp_SequenceOfPnt2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HSequenceOfPnt2d_swiginit(self, _TColgp.new_TColgp_HSequenceOfPnt2d(*args))
    Sequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfPnt2d_Sequence)
    Append = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfPnt2d_Append)
    ChangeSequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfPnt2d_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HSequenceOfPnt2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HSequenceOfPnt2d

# Register TColgp_HSequenceOfPnt2d in _TColgp:
_TColgp.TColgp_HSequenceOfPnt2d_swigregister(TColgp_HSequenceOfPnt2d)

class TColgp_HSequenceOfPnt(TColgp_SequenceOfPnt, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HSequenceOfPnt_swiginit(self, _TColgp.new_TColgp_HSequenceOfPnt(*args))
    Sequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfPnt_Sequence)
    Append = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfPnt_Append)
    ChangeSequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfPnt_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HSequenceOfPnt_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HSequenceOfPnt

# Register TColgp_HSequenceOfPnt in _TColgp:
_TColgp.TColgp_HSequenceOfPnt_swigregister(TColgp_HSequenceOfPnt)

class TColgp_HSequenceOfXYZ(TColgp_SequenceOfXYZ, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HSequenceOfXYZ_swiginit(self, _TColgp.new_TColgp_HSequenceOfXYZ(*args))
    Sequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfXYZ_Sequence)
    Append = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfXYZ_Append)
    ChangeSequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfXYZ_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HSequenceOfXYZ_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HSequenceOfXYZ

# Register TColgp_HSequenceOfXYZ in _TColgp:
_TColgp.TColgp_HSequenceOfXYZ_swigregister(TColgp_HSequenceOfXYZ)

class TColgp_HSequenceOfVec2d(TColgp_SequenceOfVec2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HSequenceOfVec2d_swiginit(self, _TColgp.new_TColgp_HSequenceOfVec2d(*args))
    Sequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfVec2d_Sequence)
    Append = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfVec2d_Append)
    ChangeSequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfVec2d_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HSequenceOfVec2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HSequenceOfVec2d

# Register TColgp_HSequenceOfVec2d in _TColgp:
_TColgp.TColgp_HSequenceOfVec2d_swigregister(TColgp_HSequenceOfVec2d)

class TColgp_HSequenceOfDir2d(TColgp_SequenceOfDir2d, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HSequenceOfDir2d_swiginit(self, _TColgp.new_TColgp_HSequenceOfDir2d(*args))
    Sequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfDir2d_Sequence)
    Append = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfDir2d_Append)
    ChangeSequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfDir2d_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HSequenceOfDir2d_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HSequenceOfDir2d

# Register TColgp_HSequenceOfDir2d in _TColgp:
_TColgp.TColgp_HSequenceOfDir2d_swigregister(TColgp_HSequenceOfDir2d)

class TColgp_HSequenceOfVec(TColgp_SequenceOfVec, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HSequenceOfVec_swiginit(self, _TColgp.new_TColgp_HSequenceOfVec(*args))
    Sequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfVec_Sequence)
    Append = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfVec_Append)
    ChangeSequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfVec_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HSequenceOfVec_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HSequenceOfVec

# Register TColgp_HSequenceOfVec in _TColgp:
_TColgp.TColgp_HSequenceOfVec_swigregister(TColgp_HSequenceOfVec)

class TColgp_HSequenceOfDir(TColgp_SequenceOfDir, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColgp.TColgp_HSequenceOfDir_swiginit(self, _TColgp.new_TColgp_HSequenceOfDir(*args))
    Sequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfDir_Sequence)
    Append = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfDir_Append)
    ChangeSequence = _swig_new_instance_method(_TColgp.TColgp_HSequenceOfDir_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColgp_HSequenceOfDir_DownCast(t)

    __swig_destroy__ = _TColgp.delete_TColgp_HSequenceOfDir

# Register TColgp_HSequenceOfDir in _TColgp:
_TColgp.TColgp_HSequenceOfDir_swigregister(TColgp_HSequenceOfDir)



