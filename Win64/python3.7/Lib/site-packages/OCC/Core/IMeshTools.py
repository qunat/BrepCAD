# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
IMeshTools module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_imeshtools.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _IMeshTools
else:
    import _IMeshTools

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _IMeshTools.SWIG_PyInstanceMethod_New
_swig_new_static_method = _IMeshTools.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _IMeshTools.delete_SwigPyIterator
    value = _swig_new_instance_method(_IMeshTools.SwigPyIterator_value)
    incr = _swig_new_instance_method(_IMeshTools.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_IMeshTools.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_IMeshTools.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_IMeshTools.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_IMeshTools.SwigPyIterator_copy)
    next = _swig_new_instance_method(_IMeshTools.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_IMeshTools.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_IMeshTools.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_IMeshTools.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_IMeshTools.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_IMeshTools.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_IMeshTools.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_IMeshTools.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_IMeshTools.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_IMeshTools.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _IMeshTools:
_IMeshTools.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.IMeshData
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.BRepAdaptor
import OCC.Core.Adaptor3d
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.Adaptor2d
import OCC.Core.Geom2d
import OCC.Core.math
import OCC.Core.GeomAdaptor
import OCC.Core.Geom2dAdaptor
Handle_IMeshTools_Context_Create = _IMeshTools.Handle_IMeshTools_Context_Create
Handle_IMeshTools_Context_DownCast = _IMeshTools.Handle_IMeshTools_Context_DownCast
Handle_IMeshTools_Context_IsNull = _IMeshTools.Handle_IMeshTools_Context_IsNull
Handle_IMeshTools_CurveTessellator_Create = _IMeshTools.Handle_IMeshTools_CurveTessellator_Create
Handle_IMeshTools_CurveTessellator_DownCast = _IMeshTools.Handle_IMeshTools_CurveTessellator_DownCast
Handle_IMeshTools_CurveTessellator_IsNull = _IMeshTools.Handle_IMeshTools_CurveTessellator_IsNull
Handle_IMeshTools_MeshAlgo_Create = _IMeshTools.Handle_IMeshTools_MeshAlgo_Create
Handle_IMeshTools_MeshAlgo_DownCast = _IMeshTools.Handle_IMeshTools_MeshAlgo_DownCast
Handle_IMeshTools_MeshAlgo_IsNull = _IMeshTools.Handle_IMeshTools_MeshAlgo_IsNull
Handle_IMeshTools_MeshAlgoFactory_Create = _IMeshTools.Handle_IMeshTools_MeshAlgoFactory_Create
Handle_IMeshTools_MeshAlgoFactory_DownCast = _IMeshTools.Handle_IMeshTools_MeshAlgoFactory_DownCast
Handle_IMeshTools_MeshAlgoFactory_IsNull = _IMeshTools.Handle_IMeshTools_MeshAlgoFactory_IsNull
Handle_IMeshTools_ModelAlgo_Create = _IMeshTools.Handle_IMeshTools_ModelAlgo_Create
Handle_IMeshTools_ModelAlgo_DownCast = _IMeshTools.Handle_IMeshTools_ModelAlgo_DownCast
Handle_IMeshTools_ModelAlgo_IsNull = _IMeshTools.Handle_IMeshTools_ModelAlgo_IsNull
Handle_IMeshTools_ShapeExplorer_Create = _IMeshTools.Handle_IMeshTools_ShapeExplorer_Create
Handle_IMeshTools_ShapeExplorer_DownCast = _IMeshTools.Handle_IMeshTools_ShapeExplorer_DownCast
Handle_IMeshTools_ShapeExplorer_IsNull = _IMeshTools.Handle_IMeshTools_ShapeExplorer_IsNull
Handle_IMeshTools_ShapeVisitor_Create = _IMeshTools.Handle_IMeshTools_ShapeVisitor_Create
Handle_IMeshTools_ShapeVisitor_DownCast = _IMeshTools.Handle_IMeshTools_ShapeVisitor_DownCast
Handle_IMeshTools_ShapeVisitor_IsNull = _IMeshTools.Handle_IMeshTools_ShapeVisitor_IsNull
class IMeshTools_Context(OCC.Core.IMeshData.IMeshData_Shape):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BuildModel = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_BuildModel)
    ChangeParameters = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_ChangeParameters)
    Clean = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_Clean)
    DiscretizeEdges = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_DiscretizeEdges)
    DiscretizeFaces = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_DiscretizeFaces)
    GetEdgeDiscret = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_GetEdgeDiscret)
    GetFaceDiscret = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_GetFaceDiscret)
    GetModel = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_GetModel)
    GetModelBuilder = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_GetModelBuilder)
    GetModelHealer = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_GetModelHealer)
    GetParameters = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_GetParameters)
    GetPostProcessor = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_GetPostProcessor)
    GetPreProcessor = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_GetPreProcessor)
    HealModel = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_HealModel)

    def __init__(self, *args):
        r"""
        * Constructor.
        	:rtype: None
        """
        _IMeshTools.IMeshTools_Context_swiginit(self, _IMeshTools.new_IMeshTools_Context(*args))
    PostProcessModel = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_PostProcessModel)
    PreProcessModel = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_PreProcessModel)
    SetEdgeDiscret = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_SetEdgeDiscret)
    SetFaceDiscret = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_SetFaceDiscret)
    SetModelBuilder = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_SetModelBuilder)
    SetModelHealer = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_SetModelHealer)
    SetPostProcessor = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_SetPostProcessor)
    SetPreProcessor = _swig_new_instance_method(_IMeshTools.IMeshTools_Context_SetPreProcessor)


    @staticmethod
    def DownCast(t):
      return Handle_IMeshTools_Context_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_Context

# Register IMeshTools_Context in _IMeshTools:
_IMeshTools.IMeshTools_Context_swigregister(IMeshTools_Context)

class IMeshTools_CurveTessellator(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PointsNb = _swig_new_instance_method(_IMeshTools.IMeshTools_CurveTessellator_PointsNb)
    Value = _swig_new_instance_method(_IMeshTools.IMeshTools_CurveTessellator_Value)


    @staticmethod
    def DownCast(t):
      return Handle_IMeshTools_CurveTessellator_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_CurveTessellator

# Register IMeshTools_CurveTessellator in _IMeshTools:
_IMeshTools.IMeshTools_CurveTessellator_swigregister(IMeshTools_CurveTessellator)

class IMeshTools_MeshAlgo(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Perform = _swig_new_instance_method(_IMeshTools.IMeshTools_MeshAlgo_Perform)


    @staticmethod
    def DownCast(t):
      return Handle_IMeshTools_MeshAlgo_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_MeshAlgo

# Register IMeshTools_MeshAlgo in _IMeshTools:
_IMeshTools.IMeshTools_MeshAlgo_swigregister(IMeshTools_MeshAlgo)

class IMeshTools_MeshAlgoFactory(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetAlgo = _swig_new_instance_method(_IMeshTools.IMeshTools_MeshAlgoFactory_GetAlgo)


    @staticmethod
    def DownCast(t):
      return Handle_IMeshTools_MeshAlgoFactory_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_MeshAlgoFactory

# Register IMeshTools_MeshAlgoFactory in _IMeshTools:
_IMeshTools.IMeshTools_MeshAlgoFactory_swigregister(IMeshTools_MeshAlgoFactory)

class IMeshTools_MeshBuilder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetContext = _swig_new_instance_method(_IMeshTools.IMeshTools_MeshBuilder_GetContext)

    def __init__(self, *args):
        r"""
        * Constructor.
        	:rtype: None* Constructor.
        	:param theContext:
        	:type theContext: IMeshTools_Context
        	:rtype: None
        """
        _IMeshTools.IMeshTools_MeshBuilder_swiginit(self, _IMeshTools.new_IMeshTools_MeshBuilder(*args))
    Perform = _swig_new_instance_method(_IMeshTools.IMeshTools_MeshBuilder_Perform)
    SetContext = _swig_new_instance_method(_IMeshTools.IMeshTools_MeshBuilder_SetContext)

    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_MeshBuilder

# Register IMeshTools_MeshBuilder in _IMeshTools:
_IMeshTools.IMeshTools_MeshBuilder_swigregister(IMeshTools_MeshBuilder)

class IMeshTools_ModelAlgo(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Perform = _swig_new_instance_method(_IMeshTools.IMeshTools_ModelAlgo_Perform)


    @staticmethod
    def DownCast(t):
      return Handle_IMeshTools_ModelAlgo_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_ModelAlgo

# Register IMeshTools_ModelAlgo in _IMeshTools:
_IMeshTools.IMeshTools_ModelAlgo_swigregister(IMeshTools_ModelAlgo)

class IMeshTools_ModelBuilder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Perform = _swig_new_instance_method(_IMeshTools.IMeshTools_ModelBuilder_Perform)

    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_ModelBuilder

# Register IMeshTools_ModelBuilder in _IMeshTools:
_IMeshTools.IMeshTools_ModelBuilder_swigregister(IMeshTools_ModelBuilder)

class IMeshTools_Parameters(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Angle = property(_IMeshTools.IMeshTools_Parameters_Angle_get, _IMeshTools.IMeshTools_Parameters_Angle_set)
    Deflection = property(_IMeshTools.IMeshTools_Parameters_Deflection_get, _IMeshTools.IMeshTools_Parameters_Deflection_set)
    AngleInterior = property(_IMeshTools.IMeshTools_Parameters_AngleInterior_get, _IMeshTools.IMeshTools_Parameters_AngleInterior_set)
    DeflectionInterior = property(_IMeshTools.IMeshTools_Parameters_DeflectionInterior_get, _IMeshTools.IMeshTools_Parameters_DeflectionInterior_set)
    MinSize = property(_IMeshTools.IMeshTools_Parameters_MinSize_get, _IMeshTools.IMeshTools_Parameters_MinSize_set)
    InParallel = property(_IMeshTools.IMeshTools_Parameters_InParallel_get, _IMeshTools.IMeshTools_Parameters_InParallel_set)
    Relative = property(_IMeshTools.IMeshTools_Parameters_Relative_get, _IMeshTools.IMeshTools_Parameters_Relative_set)
    InternalVerticesMode = property(_IMeshTools.IMeshTools_Parameters_InternalVerticesMode_get, _IMeshTools.IMeshTools_Parameters_InternalVerticesMode_set)
    ControlSurfaceDeflection = property(_IMeshTools.IMeshTools_Parameters_ControlSurfaceDeflection_get, _IMeshTools.IMeshTools_Parameters_ControlSurfaceDeflection_set)
    CleanModel = property(_IMeshTools.IMeshTools_Parameters_CleanModel_get, _IMeshTools.IMeshTools_Parameters_CleanModel_set)
    AdjustMinSize = property(_IMeshTools.IMeshTools_Parameters_AdjustMinSize_get, _IMeshTools.IMeshTools_Parameters_AdjustMinSize_set)

    def __init__(self, *args):
        r"""
        * Default constructor
        	:rtype: None
        """
        _IMeshTools.IMeshTools_Parameters_swiginit(self, _IMeshTools.new_IMeshTools_Parameters(*args))
    RelMinSize = _swig_new_static_method(_IMeshTools.IMeshTools_Parameters_RelMinSize)

    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_Parameters

# Register IMeshTools_Parameters in _IMeshTools:
_IMeshTools.IMeshTools_Parameters_swigregister(IMeshTools_Parameters)
IMeshTools_Parameters_RelMinSize = _IMeshTools.IMeshTools_Parameters_RelMinSize

class IMeshTools_ShapeExplorer(OCC.Core.IMeshData.IMeshData_Shape):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_IMeshTools.IMeshTools_ShapeExplorer_Accept)

    def __init__(self, *args):
        r"""
        * Constructor.
        	:param theShape:
        	:type theShape: TopoDS_Shape
        	:rtype: None
        """
        _IMeshTools.IMeshTools_ShapeExplorer_swiginit(self, _IMeshTools.new_IMeshTools_ShapeExplorer(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IMeshTools_ShapeExplorer_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_ShapeExplorer

# Register IMeshTools_ShapeExplorer in _IMeshTools:
_IMeshTools.IMeshTools_ShapeExplorer_swigregister(IMeshTools_ShapeExplorer)

class IMeshTools_ShapeVisitor(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Visit = _swig_new_instance_method(_IMeshTools.IMeshTools_ShapeVisitor_Visit)


    @staticmethod
    def DownCast(t):
      return Handle_IMeshTools_ShapeVisitor_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IMeshTools.delete_IMeshTools_ShapeVisitor

# Register IMeshTools_ShapeVisitor in _IMeshTools:
_IMeshTools.IMeshTools_ShapeVisitor_swigregister(IMeshTools_ShapeVisitor)



