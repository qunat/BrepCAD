# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepShape module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepshape.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _StepShape
else:
    import _StepShape

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _StepShape.SWIG_PyInstanceMethod_New
_swig_new_static_method = _StepShape.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepShape.delete_SwigPyIterator
    value = _swig_new_instance_method(_StepShape.SwigPyIterator_value)
    incr = _swig_new_instance_method(_StepShape.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_StepShape.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_StepShape.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_StepShape.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_StepShape.SwigPyIterator_copy)
    next = _swig_new_instance_method(_StepShape.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_StepShape.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_StepShape.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_StepShape.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_StepShape.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_StepShape.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_StepShape.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_StepShape.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_StepShape.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_StepShape.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _StepShape:
_StepShape.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.StepGeom
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepRepr
import OCC.Core.StepBasic
StepShape_Equal = _StepShape.StepShape_Equal
StepShape_Large = _StepShape.StepShape_Large
StepShape_Small = _StepShape.StepShape_Small
StepShape_boDifference = _StepShape.StepShape_boDifference
StepShape_boIntersection = _StepShape.StepShape_boIntersection
StepShape_boUnion = _StepShape.StepShape_boUnion
Handle_StepShape_Block_Create = _StepShape.Handle_StepShape_Block_Create
Handle_StepShape_Block_DownCast = _StepShape.Handle_StepShape_Block_DownCast
Handle_StepShape_Block_IsNull = _StepShape.Handle_StepShape_Block_IsNull
Handle_StepShape_BooleanResult_Create = _StepShape.Handle_StepShape_BooleanResult_Create
Handle_StepShape_BooleanResult_DownCast = _StepShape.Handle_StepShape_BooleanResult_DownCast
Handle_StepShape_BooleanResult_IsNull = _StepShape.Handle_StepShape_BooleanResult_IsNull
Handle_StepShape_BoxDomain_Create = _StepShape.Handle_StepShape_BoxDomain_Create
Handle_StepShape_BoxDomain_DownCast = _StepShape.Handle_StepShape_BoxDomain_DownCast
Handle_StepShape_BoxDomain_IsNull = _StepShape.Handle_StepShape_BoxDomain_IsNull
Handle_StepShape_ConnectedFaceShapeRepresentation_Create = _StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation_Create
Handle_StepShape_ConnectedFaceShapeRepresentation_DownCast = _StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation_DownCast
Handle_StepShape_ConnectedFaceShapeRepresentation_IsNull = _StepShape.Handle_StepShape_ConnectedFaceShapeRepresentation_IsNull
Handle_StepShape_ContextDependentShapeRepresentation_Create = _StepShape.Handle_StepShape_ContextDependentShapeRepresentation_Create
Handle_StepShape_ContextDependentShapeRepresentation_DownCast = _StepShape.Handle_StepShape_ContextDependentShapeRepresentation_DownCast
Handle_StepShape_ContextDependentShapeRepresentation_IsNull = _StepShape.Handle_StepShape_ContextDependentShapeRepresentation_IsNull
Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_Create = _StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_Create
Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_DownCast = _StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_DownCast
Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_IsNull = _StepShape.Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_IsNull
Handle_StepShape_DimensionalCharacteristicRepresentation_Create = _StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation_Create
Handle_StepShape_DimensionalCharacteristicRepresentation_DownCast = _StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation_DownCast
Handle_StepShape_DimensionalCharacteristicRepresentation_IsNull = _StepShape.Handle_StepShape_DimensionalCharacteristicRepresentation_IsNull
Handle_StepShape_DimensionalLocation_Create = _StepShape.Handle_StepShape_DimensionalLocation_Create
Handle_StepShape_DimensionalLocation_DownCast = _StepShape.Handle_StepShape_DimensionalLocation_DownCast
Handle_StepShape_DimensionalLocation_IsNull = _StepShape.Handle_StepShape_DimensionalLocation_IsNull
Handle_StepShape_DimensionalSize_Create = _StepShape.Handle_StepShape_DimensionalSize_Create
Handle_StepShape_DimensionalSize_DownCast = _StepShape.Handle_StepShape_DimensionalSize_DownCast
Handle_StepShape_DimensionalSize_IsNull = _StepShape.Handle_StepShape_DimensionalSize_IsNull
Handle_StepShape_EdgeBasedWireframeModel_Create = _StepShape.Handle_StepShape_EdgeBasedWireframeModel_Create
Handle_StepShape_EdgeBasedWireframeModel_DownCast = _StepShape.Handle_StepShape_EdgeBasedWireframeModel_DownCast
Handle_StepShape_EdgeBasedWireframeModel_IsNull = _StepShape.Handle_StepShape_EdgeBasedWireframeModel_IsNull
Handle_StepShape_FaceBasedSurfaceModel_Create = _StepShape.Handle_StepShape_FaceBasedSurfaceModel_Create
Handle_StepShape_FaceBasedSurfaceModel_DownCast = _StepShape.Handle_StepShape_FaceBasedSurfaceModel_DownCast
Handle_StepShape_FaceBasedSurfaceModel_IsNull = _StepShape.Handle_StepShape_FaceBasedSurfaceModel_IsNull
Handle_StepShape_GeometricSet_Create = _StepShape.Handle_StepShape_GeometricSet_Create
Handle_StepShape_GeometricSet_DownCast = _StepShape.Handle_StepShape_GeometricSet_DownCast
Handle_StepShape_GeometricSet_IsNull = _StepShape.Handle_StepShape_GeometricSet_IsNull
Handle_StepShape_HalfSpaceSolid_Create = _StepShape.Handle_StepShape_HalfSpaceSolid_Create
Handle_StepShape_HalfSpaceSolid_DownCast = _StepShape.Handle_StepShape_HalfSpaceSolid_DownCast
Handle_StepShape_HalfSpaceSolid_IsNull = _StepShape.Handle_StepShape_HalfSpaceSolid_IsNull
Handle_StepShape_LimitsAndFits_Create = _StepShape.Handle_StepShape_LimitsAndFits_Create
Handle_StepShape_LimitsAndFits_DownCast = _StepShape.Handle_StepShape_LimitsAndFits_DownCast
Handle_StepShape_LimitsAndFits_IsNull = _StepShape.Handle_StepShape_LimitsAndFits_IsNull
Handle_StepShape_MeasureQualification_Create = _StepShape.Handle_StepShape_MeasureQualification_Create
Handle_StepShape_MeasureQualification_DownCast = _StepShape.Handle_StepShape_MeasureQualification_DownCast
Handle_StepShape_MeasureQualification_IsNull = _StepShape.Handle_StepShape_MeasureQualification_IsNull
Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Create = _StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Create
Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_DownCast = _StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_DownCast
Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_IsNull = _StepShape.Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_IsNull
Handle_StepShape_PlusMinusTolerance_Create = _StepShape.Handle_StepShape_PlusMinusTolerance_Create
Handle_StepShape_PlusMinusTolerance_DownCast = _StepShape.Handle_StepShape_PlusMinusTolerance_DownCast
Handle_StepShape_PlusMinusTolerance_IsNull = _StepShape.Handle_StepShape_PlusMinusTolerance_IsNull
Handle_StepShape_PrecisionQualifier_Create = _StepShape.Handle_StepShape_PrecisionQualifier_Create
Handle_StepShape_PrecisionQualifier_DownCast = _StepShape.Handle_StepShape_PrecisionQualifier_DownCast
Handle_StepShape_PrecisionQualifier_IsNull = _StepShape.Handle_StepShape_PrecisionQualifier_IsNull
Handle_StepShape_QualifiedRepresentationItem_Create = _StepShape.Handle_StepShape_QualifiedRepresentationItem_Create
Handle_StepShape_QualifiedRepresentationItem_DownCast = _StepShape.Handle_StepShape_QualifiedRepresentationItem_DownCast
Handle_StepShape_QualifiedRepresentationItem_IsNull = _StepShape.Handle_StepShape_QualifiedRepresentationItem_IsNull
Handle_StepShape_RightAngularWedge_Create = _StepShape.Handle_StepShape_RightAngularWedge_Create
Handle_StepShape_RightAngularWedge_DownCast = _StepShape.Handle_StepShape_RightAngularWedge_DownCast
Handle_StepShape_RightAngularWedge_IsNull = _StepShape.Handle_StepShape_RightAngularWedge_IsNull
Handle_StepShape_RightCircularCone_Create = _StepShape.Handle_StepShape_RightCircularCone_Create
Handle_StepShape_RightCircularCone_DownCast = _StepShape.Handle_StepShape_RightCircularCone_DownCast
Handle_StepShape_RightCircularCone_IsNull = _StepShape.Handle_StepShape_RightCircularCone_IsNull
Handle_StepShape_RightCircularCylinder_Create = _StepShape.Handle_StepShape_RightCircularCylinder_Create
Handle_StepShape_RightCircularCylinder_DownCast = _StepShape.Handle_StepShape_RightCircularCylinder_DownCast
Handle_StepShape_RightCircularCylinder_IsNull = _StepShape.Handle_StepShape_RightCircularCylinder_IsNull
Handle_StepShape_ShapeDefinitionRepresentation_Create = _StepShape.Handle_StepShape_ShapeDefinitionRepresentation_Create
Handle_StepShape_ShapeDefinitionRepresentation_DownCast = _StepShape.Handle_StepShape_ShapeDefinitionRepresentation_DownCast
Handle_StepShape_ShapeDefinitionRepresentation_IsNull = _StepShape.Handle_StepShape_ShapeDefinitionRepresentation_IsNull
Handle_StepShape_ShapeRepresentation_Create = _StepShape.Handle_StepShape_ShapeRepresentation_Create
Handle_StepShape_ShapeRepresentation_DownCast = _StepShape.Handle_StepShape_ShapeRepresentation_DownCast
Handle_StepShape_ShapeRepresentation_IsNull = _StepShape.Handle_StepShape_ShapeRepresentation_IsNull
Handle_StepShape_ShellBasedSurfaceModel_Create = _StepShape.Handle_StepShape_ShellBasedSurfaceModel_Create
Handle_StepShape_ShellBasedSurfaceModel_DownCast = _StepShape.Handle_StepShape_ShellBasedSurfaceModel_DownCast
Handle_StepShape_ShellBasedSurfaceModel_IsNull = _StepShape.Handle_StepShape_ShellBasedSurfaceModel_IsNull
Handle_StepShape_SolidModel_Create = _StepShape.Handle_StepShape_SolidModel_Create
Handle_StepShape_SolidModel_DownCast = _StepShape.Handle_StepShape_SolidModel_DownCast
Handle_StepShape_SolidModel_IsNull = _StepShape.Handle_StepShape_SolidModel_IsNull
Handle_StepShape_Sphere_Create = _StepShape.Handle_StepShape_Sphere_Create
Handle_StepShape_Sphere_DownCast = _StepShape.Handle_StepShape_Sphere_DownCast
Handle_StepShape_Sphere_IsNull = _StepShape.Handle_StepShape_Sphere_IsNull
Handle_StepShape_ToleranceValue_Create = _StepShape.Handle_StepShape_ToleranceValue_Create
Handle_StepShape_ToleranceValue_DownCast = _StepShape.Handle_StepShape_ToleranceValue_DownCast
Handle_StepShape_ToleranceValue_IsNull = _StepShape.Handle_StepShape_ToleranceValue_IsNull
Handle_StepShape_TopologicalRepresentationItem_Create = _StepShape.Handle_StepShape_TopologicalRepresentationItem_Create
Handle_StepShape_TopologicalRepresentationItem_DownCast = _StepShape.Handle_StepShape_TopologicalRepresentationItem_DownCast
Handle_StepShape_TopologicalRepresentationItem_IsNull = _StepShape.Handle_StepShape_TopologicalRepresentationItem_IsNull
Handle_StepShape_Torus_Create = _StepShape.Handle_StepShape_Torus_Create
Handle_StepShape_Torus_DownCast = _StepShape.Handle_StepShape_Torus_DownCast
Handle_StepShape_Torus_IsNull = _StepShape.Handle_StepShape_Torus_IsNull
Handle_StepShape_TypeQualifier_Create = _StepShape.Handle_StepShape_TypeQualifier_Create
Handle_StepShape_TypeQualifier_DownCast = _StepShape.Handle_StepShape_TypeQualifier_DownCast
Handle_StepShape_TypeQualifier_IsNull = _StepShape.Handle_StepShape_TypeQualifier_IsNull
Handle_StepShape_ValueFormatTypeQualifier_Create = _StepShape.Handle_StepShape_ValueFormatTypeQualifier_Create
Handle_StepShape_ValueFormatTypeQualifier_DownCast = _StepShape.Handle_StepShape_ValueFormatTypeQualifier_DownCast
Handle_StepShape_ValueFormatTypeQualifier_IsNull = _StepShape.Handle_StepShape_ValueFormatTypeQualifier_IsNull
Handle_StepShape_AdvancedBrepShapeRepresentation_Create = _StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation_Create
Handle_StepShape_AdvancedBrepShapeRepresentation_DownCast = _StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation_DownCast
Handle_StepShape_AdvancedBrepShapeRepresentation_IsNull = _StepShape.Handle_StepShape_AdvancedBrepShapeRepresentation_IsNull
Handle_StepShape_AngularLocation_Create = _StepShape.Handle_StepShape_AngularLocation_Create
Handle_StepShape_AngularLocation_DownCast = _StepShape.Handle_StepShape_AngularLocation_DownCast
Handle_StepShape_AngularLocation_IsNull = _StepShape.Handle_StepShape_AngularLocation_IsNull
Handle_StepShape_AngularSize_Create = _StepShape.Handle_StepShape_AngularSize_Create
Handle_StepShape_AngularSize_DownCast = _StepShape.Handle_StepShape_AngularSize_DownCast
Handle_StepShape_AngularSize_IsNull = _StepShape.Handle_StepShape_AngularSize_IsNull
Handle_StepShape_BoxedHalfSpace_Create = _StepShape.Handle_StepShape_BoxedHalfSpace_Create
Handle_StepShape_BoxedHalfSpace_DownCast = _StepShape.Handle_StepShape_BoxedHalfSpace_DownCast
Handle_StepShape_BoxedHalfSpace_IsNull = _StepShape.Handle_StepShape_BoxedHalfSpace_IsNull
Handle_StepShape_CompoundShapeRepresentation_Create = _StepShape.Handle_StepShape_CompoundShapeRepresentation_Create
Handle_StepShape_CompoundShapeRepresentation_DownCast = _StepShape.Handle_StepShape_CompoundShapeRepresentation_DownCast
Handle_StepShape_CompoundShapeRepresentation_IsNull = _StepShape.Handle_StepShape_CompoundShapeRepresentation_IsNull
Handle_StepShape_ConnectedEdgeSet_Create = _StepShape.Handle_StepShape_ConnectedEdgeSet_Create
Handle_StepShape_ConnectedEdgeSet_DownCast = _StepShape.Handle_StepShape_ConnectedEdgeSet_DownCast
Handle_StepShape_ConnectedEdgeSet_IsNull = _StepShape.Handle_StepShape_ConnectedEdgeSet_IsNull
Handle_StepShape_ConnectedFaceSet_Create = _StepShape.Handle_StepShape_ConnectedFaceSet_Create
Handle_StepShape_ConnectedFaceSet_DownCast = _StepShape.Handle_StepShape_ConnectedFaceSet_DownCast
Handle_StepShape_ConnectedFaceSet_IsNull = _StepShape.Handle_StepShape_ConnectedFaceSet_IsNull
Handle_StepShape_CsgShapeRepresentation_Create = _StepShape.Handle_StepShape_CsgShapeRepresentation_Create
Handle_StepShape_CsgShapeRepresentation_DownCast = _StepShape.Handle_StepShape_CsgShapeRepresentation_DownCast
Handle_StepShape_CsgShapeRepresentation_IsNull = _StepShape.Handle_StepShape_CsgShapeRepresentation_IsNull
Handle_StepShape_CsgSolid_Create = _StepShape.Handle_StepShape_CsgSolid_Create
Handle_StepShape_CsgSolid_DownCast = _StepShape.Handle_StepShape_CsgSolid_DownCast
Handle_StepShape_CsgSolid_IsNull = _StepShape.Handle_StepShape_CsgSolid_IsNull
Handle_StepShape_DimensionalLocationWithPath_Create = _StepShape.Handle_StepShape_DimensionalLocationWithPath_Create
Handle_StepShape_DimensionalLocationWithPath_DownCast = _StepShape.Handle_StepShape_DimensionalLocationWithPath_DownCast
Handle_StepShape_DimensionalLocationWithPath_IsNull = _StepShape.Handle_StepShape_DimensionalLocationWithPath_IsNull
Handle_StepShape_DimensionalSizeWithPath_Create = _StepShape.Handle_StepShape_DimensionalSizeWithPath_Create
Handle_StepShape_DimensionalSizeWithPath_DownCast = _StepShape.Handle_StepShape_DimensionalSizeWithPath_DownCast
Handle_StepShape_DimensionalSizeWithPath_IsNull = _StepShape.Handle_StepShape_DimensionalSizeWithPath_IsNull
Handle_StepShape_DirectedDimensionalLocation_Create = _StepShape.Handle_StepShape_DirectedDimensionalLocation_Create
Handle_StepShape_DirectedDimensionalLocation_DownCast = _StepShape.Handle_StepShape_DirectedDimensionalLocation_DownCast
Handle_StepShape_DirectedDimensionalLocation_IsNull = _StepShape.Handle_StepShape_DirectedDimensionalLocation_IsNull
Handle_StepShape_Edge_Create = _StepShape.Handle_StepShape_Edge_Create
Handle_StepShape_Edge_DownCast = _StepShape.Handle_StepShape_Edge_DownCast
Handle_StepShape_Edge_IsNull = _StepShape.Handle_StepShape_Edge_IsNull
Handle_StepShape_EdgeBasedWireframeShapeRepresentation_Create = _StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation_Create
Handle_StepShape_EdgeBasedWireframeShapeRepresentation_DownCast = _StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation_DownCast
Handle_StepShape_EdgeBasedWireframeShapeRepresentation_IsNull = _StepShape.Handle_StepShape_EdgeBasedWireframeShapeRepresentation_IsNull
Handle_StepShape_Face_Create = _StepShape.Handle_StepShape_Face_Create
Handle_StepShape_Face_DownCast = _StepShape.Handle_StepShape_Face_DownCast
Handle_StepShape_Face_IsNull = _StepShape.Handle_StepShape_Face_IsNull
Handle_StepShape_FaceBound_Create = _StepShape.Handle_StepShape_FaceBound_Create
Handle_StepShape_FaceBound_DownCast = _StepShape.Handle_StepShape_FaceBound_DownCast
Handle_StepShape_FaceBound_IsNull = _StepShape.Handle_StepShape_FaceBound_IsNull
Handle_StepShape_FacetedBrepShapeRepresentation_Create = _StepShape.Handle_StepShape_FacetedBrepShapeRepresentation_Create
Handle_StepShape_FacetedBrepShapeRepresentation_DownCast = _StepShape.Handle_StepShape_FacetedBrepShapeRepresentation_DownCast
Handle_StepShape_FacetedBrepShapeRepresentation_IsNull = _StepShape.Handle_StepShape_FacetedBrepShapeRepresentation_IsNull
Handle_StepShape_GeometricCurveSet_Create = _StepShape.Handle_StepShape_GeometricCurveSet_Create
Handle_StepShape_GeometricCurveSet_DownCast = _StepShape.Handle_StepShape_GeometricCurveSet_DownCast
Handle_StepShape_GeometricCurveSet_IsNull = _StepShape.Handle_StepShape_GeometricCurveSet_IsNull
Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_Create = _StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_Create
Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_DownCast = _StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_DownCast
Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_IsNull = _StepShape.Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_IsNull
Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_Create = _StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_Create
Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_DownCast = _StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_DownCast
Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_IsNull = _StepShape.Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_IsNull
Handle_StepShape_Loop_Create = _StepShape.Handle_StepShape_Loop_Create
Handle_StepShape_Loop_DownCast = _StepShape.Handle_StepShape_Loop_DownCast
Handle_StepShape_Loop_IsNull = _StepShape.Handle_StepShape_Loop_IsNull
Handle_StepShape_LoopAndPath_Create = _StepShape.Handle_StepShape_LoopAndPath_Create
Handle_StepShape_LoopAndPath_DownCast = _StepShape.Handle_StepShape_LoopAndPath_DownCast
Handle_StepShape_LoopAndPath_IsNull = _StepShape.Handle_StepShape_LoopAndPath_IsNull
Handle_StepShape_ManifoldSolidBrep_Create = _StepShape.Handle_StepShape_ManifoldSolidBrep_Create
Handle_StepShape_ManifoldSolidBrep_DownCast = _StepShape.Handle_StepShape_ManifoldSolidBrep_DownCast
Handle_StepShape_ManifoldSolidBrep_IsNull = _StepShape.Handle_StepShape_ManifoldSolidBrep_IsNull
Handle_StepShape_ManifoldSurfaceShapeRepresentation_Create = _StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation_Create
Handle_StepShape_ManifoldSurfaceShapeRepresentation_DownCast = _StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation_DownCast
Handle_StepShape_ManifoldSurfaceShapeRepresentation_IsNull = _StepShape.Handle_StepShape_ManifoldSurfaceShapeRepresentation_IsNull
Handle_StepShape_NonManifoldSurfaceShapeRepresentation_Create = _StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation_Create
Handle_StepShape_NonManifoldSurfaceShapeRepresentation_DownCast = _StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation_DownCast
Handle_StepShape_NonManifoldSurfaceShapeRepresentation_IsNull = _StepShape.Handle_StepShape_NonManifoldSurfaceShapeRepresentation_IsNull
Handle_StepShape_Path_Create = _StepShape.Handle_StepShape_Path_Create
Handle_StepShape_Path_DownCast = _StepShape.Handle_StepShape_Path_DownCast
Handle_StepShape_Path_IsNull = _StepShape.Handle_StepShape_Path_IsNull
Handle_StepShape_PointRepresentation_Create = _StepShape.Handle_StepShape_PointRepresentation_Create
Handle_StepShape_PointRepresentation_DownCast = _StepShape.Handle_StepShape_PointRepresentation_DownCast
Handle_StepShape_PointRepresentation_IsNull = _StepShape.Handle_StepShape_PointRepresentation_IsNull
Handle_StepShape_ShapeDimensionRepresentation_Create = _StepShape.Handle_StepShape_ShapeDimensionRepresentation_Create
Handle_StepShape_ShapeDimensionRepresentation_DownCast = _StepShape.Handle_StepShape_ShapeDimensionRepresentation_DownCast
Handle_StepShape_ShapeDimensionRepresentation_IsNull = _StepShape.Handle_StepShape_ShapeDimensionRepresentation_IsNull
Handle_StepShape_ShapeRepresentationWithParameters_Create = _StepShape.Handle_StepShape_ShapeRepresentationWithParameters_Create
Handle_StepShape_ShapeRepresentationWithParameters_DownCast = _StepShape.Handle_StepShape_ShapeRepresentationWithParameters_DownCast
Handle_StepShape_ShapeRepresentationWithParameters_IsNull = _StepShape.Handle_StepShape_ShapeRepresentationWithParameters_IsNull
Handle_StepShape_SolidReplica_Create = _StepShape.Handle_StepShape_SolidReplica_Create
Handle_StepShape_SolidReplica_DownCast = _StepShape.Handle_StepShape_SolidReplica_DownCast
Handle_StepShape_SolidReplica_IsNull = _StepShape.Handle_StepShape_SolidReplica_IsNull
Handle_StepShape_SweptAreaSolid_Create = _StepShape.Handle_StepShape_SweptAreaSolid_Create
Handle_StepShape_SweptAreaSolid_DownCast = _StepShape.Handle_StepShape_SweptAreaSolid_DownCast
Handle_StepShape_SweptAreaSolid_IsNull = _StepShape.Handle_StepShape_SweptAreaSolid_IsNull
Handle_StepShape_SweptFaceSolid_Create = _StepShape.Handle_StepShape_SweptFaceSolid_Create
Handle_StepShape_SweptFaceSolid_DownCast = _StepShape.Handle_StepShape_SweptFaceSolid_DownCast
Handle_StepShape_SweptFaceSolid_IsNull = _StepShape.Handle_StepShape_SweptFaceSolid_IsNull
Handle_StepShape_TransitionalShapeRepresentation_Create = _StepShape.Handle_StepShape_TransitionalShapeRepresentation_Create
Handle_StepShape_TransitionalShapeRepresentation_DownCast = _StepShape.Handle_StepShape_TransitionalShapeRepresentation_DownCast
Handle_StepShape_TransitionalShapeRepresentation_IsNull = _StepShape.Handle_StepShape_TransitionalShapeRepresentation_IsNull
Handle_StepShape_Vertex_Create = _StepShape.Handle_StepShape_Vertex_Create
Handle_StepShape_Vertex_DownCast = _StepShape.Handle_StepShape_Vertex_DownCast
Handle_StepShape_Vertex_IsNull = _StepShape.Handle_StepShape_Vertex_IsNull
Handle_StepShape_BrepWithVoids_Create = _StepShape.Handle_StepShape_BrepWithVoids_Create
Handle_StepShape_BrepWithVoids_DownCast = _StepShape.Handle_StepShape_BrepWithVoids_DownCast
Handle_StepShape_BrepWithVoids_IsNull = _StepShape.Handle_StepShape_BrepWithVoids_IsNull
Handle_StepShape_ClosedShell_Create = _StepShape.Handle_StepShape_ClosedShell_Create
Handle_StepShape_ClosedShell_DownCast = _StepShape.Handle_StepShape_ClosedShell_DownCast
Handle_StepShape_ClosedShell_IsNull = _StepShape.Handle_StepShape_ClosedShell_IsNull
Handle_StepShape_ConnectedFaceSubSet_Create = _StepShape.Handle_StepShape_ConnectedFaceSubSet_Create
Handle_StepShape_ConnectedFaceSubSet_DownCast = _StepShape.Handle_StepShape_ConnectedFaceSubSet_DownCast
Handle_StepShape_ConnectedFaceSubSet_IsNull = _StepShape.Handle_StepShape_ConnectedFaceSubSet_IsNull
Handle_StepShape_EdgeCurve_Create = _StepShape.Handle_StepShape_EdgeCurve_Create
Handle_StepShape_EdgeCurve_DownCast = _StepShape.Handle_StepShape_EdgeCurve_DownCast
Handle_StepShape_EdgeCurve_IsNull = _StepShape.Handle_StepShape_EdgeCurve_IsNull
Handle_StepShape_EdgeLoop_Create = _StepShape.Handle_StepShape_EdgeLoop_Create
Handle_StepShape_EdgeLoop_DownCast = _StepShape.Handle_StepShape_EdgeLoop_DownCast
Handle_StepShape_EdgeLoop_IsNull = _StepShape.Handle_StepShape_EdgeLoop_IsNull
Handle_StepShape_ExtrudedAreaSolid_Create = _StepShape.Handle_StepShape_ExtrudedAreaSolid_Create
Handle_StepShape_ExtrudedAreaSolid_DownCast = _StepShape.Handle_StepShape_ExtrudedAreaSolid_DownCast
Handle_StepShape_ExtrudedAreaSolid_IsNull = _StepShape.Handle_StepShape_ExtrudedAreaSolid_IsNull
Handle_StepShape_ExtrudedFaceSolid_Create = _StepShape.Handle_StepShape_ExtrudedFaceSolid_Create
Handle_StepShape_ExtrudedFaceSolid_DownCast = _StepShape.Handle_StepShape_ExtrudedFaceSolid_DownCast
Handle_StepShape_ExtrudedFaceSolid_IsNull = _StepShape.Handle_StepShape_ExtrudedFaceSolid_IsNull
Handle_StepShape_FaceOuterBound_Create = _StepShape.Handle_StepShape_FaceOuterBound_Create
Handle_StepShape_FaceOuterBound_DownCast = _StepShape.Handle_StepShape_FaceOuterBound_DownCast
Handle_StepShape_FaceOuterBound_IsNull = _StepShape.Handle_StepShape_FaceOuterBound_IsNull
Handle_StepShape_FaceSurface_Create = _StepShape.Handle_StepShape_FaceSurface_Create
Handle_StepShape_FaceSurface_DownCast = _StepShape.Handle_StepShape_FaceSurface_DownCast
Handle_StepShape_FaceSurface_IsNull = _StepShape.Handle_StepShape_FaceSurface_IsNull
Handle_StepShape_FacetedBrep_Create = _StepShape.Handle_StepShape_FacetedBrep_Create
Handle_StepShape_FacetedBrep_DownCast = _StepShape.Handle_StepShape_FacetedBrep_DownCast
Handle_StepShape_FacetedBrep_IsNull = _StepShape.Handle_StepShape_FacetedBrep_IsNull
Handle_StepShape_FacetedBrepAndBrepWithVoids_Create = _StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids_Create
Handle_StepShape_FacetedBrepAndBrepWithVoids_DownCast = _StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids_DownCast
Handle_StepShape_FacetedBrepAndBrepWithVoids_IsNull = _StepShape.Handle_StepShape_FacetedBrepAndBrepWithVoids_IsNull
Handle_StepShape_OpenShell_Create = _StepShape.Handle_StepShape_OpenShell_Create
Handle_StepShape_OpenShell_DownCast = _StepShape.Handle_StepShape_OpenShell_DownCast
Handle_StepShape_OpenShell_IsNull = _StepShape.Handle_StepShape_OpenShell_IsNull
Handle_StepShape_OrientedEdge_Create = _StepShape.Handle_StepShape_OrientedEdge_Create
Handle_StepShape_OrientedEdge_DownCast = _StepShape.Handle_StepShape_OrientedEdge_DownCast
Handle_StepShape_OrientedEdge_IsNull = _StepShape.Handle_StepShape_OrientedEdge_IsNull
Handle_StepShape_OrientedFace_Create = _StepShape.Handle_StepShape_OrientedFace_Create
Handle_StepShape_OrientedFace_DownCast = _StepShape.Handle_StepShape_OrientedFace_DownCast
Handle_StepShape_OrientedFace_IsNull = _StepShape.Handle_StepShape_OrientedFace_IsNull
Handle_StepShape_OrientedPath_Create = _StepShape.Handle_StepShape_OrientedPath_Create
Handle_StepShape_OrientedPath_DownCast = _StepShape.Handle_StepShape_OrientedPath_DownCast
Handle_StepShape_OrientedPath_IsNull = _StepShape.Handle_StepShape_OrientedPath_IsNull
Handle_StepShape_PolyLoop_Create = _StepShape.Handle_StepShape_PolyLoop_Create
Handle_StepShape_PolyLoop_DownCast = _StepShape.Handle_StepShape_PolyLoop_DownCast
Handle_StepShape_PolyLoop_IsNull = _StepShape.Handle_StepShape_PolyLoop_IsNull
Handle_StepShape_RevolvedAreaSolid_Create = _StepShape.Handle_StepShape_RevolvedAreaSolid_Create
Handle_StepShape_RevolvedAreaSolid_DownCast = _StepShape.Handle_StepShape_RevolvedAreaSolid_DownCast
Handle_StepShape_RevolvedAreaSolid_IsNull = _StepShape.Handle_StepShape_RevolvedAreaSolid_IsNull
Handle_StepShape_RevolvedFaceSolid_Create = _StepShape.Handle_StepShape_RevolvedFaceSolid_Create
Handle_StepShape_RevolvedFaceSolid_DownCast = _StepShape.Handle_StepShape_RevolvedFaceSolid_DownCast
Handle_StepShape_RevolvedFaceSolid_IsNull = _StepShape.Handle_StepShape_RevolvedFaceSolid_IsNull
Handle_StepShape_Subedge_Create = _StepShape.Handle_StepShape_Subedge_Create
Handle_StepShape_Subedge_DownCast = _StepShape.Handle_StepShape_Subedge_DownCast
Handle_StepShape_Subedge_IsNull = _StepShape.Handle_StepShape_Subedge_IsNull
Handle_StepShape_Subface_Create = _StepShape.Handle_StepShape_Subface_Create
Handle_StepShape_Subface_DownCast = _StepShape.Handle_StepShape_Subface_DownCast
Handle_StepShape_Subface_IsNull = _StepShape.Handle_StepShape_Subface_IsNull
Handle_StepShape_VertexLoop_Create = _StepShape.Handle_StepShape_VertexLoop_Create
Handle_StepShape_VertexLoop_DownCast = _StepShape.Handle_StepShape_VertexLoop_DownCast
Handle_StepShape_VertexLoop_IsNull = _StepShape.Handle_StepShape_VertexLoop_IsNull
Handle_StepShape_VertexPoint_Create = _StepShape.Handle_StepShape_VertexPoint_Create
Handle_StepShape_VertexPoint_DownCast = _StepShape.Handle_StepShape_VertexPoint_DownCast
Handle_StepShape_VertexPoint_IsNull = _StepShape.Handle_StepShape_VertexPoint_IsNull
Handle_StepShape_AdvancedFace_Create = _StepShape.Handle_StepShape_AdvancedFace_Create
Handle_StepShape_AdvancedFace_DownCast = _StepShape.Handle_StepShape_AdvancedFace_DownCast
Handle_StepShape_AdvancedFace_IsNull = _StepShape.Handle_StepShape_AdvancedFace_IsNull
Handle_StepShape_OrientedClosedShell_Create = _StepShape.Handle_StepShape_OrientedClosedShell_Create
Handle_StepShape_OrientedClosedShell_DownCast = _StepShape.Handle_StepShape_OrientedClosedShell_DownCast
Handle_StepShape_OrientedClosedShell_IsNull = _StepShape.Handle_StepShape_OrientedClosedShell_IsNull
Handle_StepShape_OrientedOpenShell_Create = _StepShape.Handle_StepShape_OrientedOpenShell_Create
Handle_StepShape_OrientedOpenShell_DownCast = _StepShape.Handle_StepShape_OrientedOpenShell_DownCast
Handle_StepShape_OrientedOpenShell_IsNull = _StepShape.Handle_StepShape_OrientedOpenShell_IsNull
Handle_StepShape_SeamEdge_Create = _StepShape.Handle_StepShape_SeamEdge_Create
Handle_StepShape_SeamEdge_DownCast = _StepShape.Handle_StepShape_SeamEdge_DownCast
Handle_StepShape_SeamEdge_IsNull = _StepShape.Handle_StepShape_SeamEdge_IsNull
Handle_StepShape_HArray1OfConnectedEdgeSet_Create = _StepShape.Handle_StepShape_HArray1OfConnectedEdgeSet_Create
Handle_StepShape_HArray1OfConnectedEdgeSet_DownCast = _StepShape.Handle_StepShape_HArray1OfConnectedEdgeSet_DownCast
Handle_StepShape_HArray1OfConnectedEdgeSet_IsNull = _StepShape.Handle_StepShape_HArray1OfConnectedEdgeSet_IsNull
Handle_StepShape_HArray1OfFaceBound_Create = _StepShape.Handle_StepShape_HArray1OfFaceBound_Create
Handle_StepShape_HArray1OfFaceBound_DownCast = _StepShape.Handle_StepShape_HArray1OfFaceBound_DownCast
Handle_StepShape_HArray1OfFaceBound_IsNull = _StepShape.Handle_StepShape_HArray1OfFaceBound_IsNull
Handle_StepShape_HArray1OfGeometricSetSelect_Create = _StepShape.Handle_StepShape_HArray1OfGeometricSetSelect_Create
Handle_StepShape_HArray1OfGeometricSetSelect_DownCast = _StepShape.Handle_StepShape_HArray1OfGeometricSetSelect_DownCast
Handle_StepShape_HArray1OfGeometricSetSelect_IsNull = _StepShape.Handle_StepShape_HArray1OfGeometricSetSelect_IsNull
Handle_StepShape_HArray1OfConnectedFaceSet_Create = _StepShape.Handle_StepShape_HArray1OfConnectedFaceSet_Create
Handle_StepShape_HArray1OfConnectedFaceSet_DownCast = _StepShape.Handle_StepShape_HArray1OfConnectedFaceSet_DownCast
Handle_StepShape_HArray1OfConnectedFaceSet_IsNull = _StepShape.Handle_StepShape_HArray1OfConnectedFaceSet_IsNull
Handle_StepShape_HArray1OfEdge_Create = _StepShape.Handle_StepShape_HArray1OfEdge_Create
Handle_StepShape_HArray1OfEdge_DownCast = _StepShape.Handle_StepShape_HArray1OfEdge_DownCast
Handle_StepShape_HArray1OfEdge_IsNull = _StepShape.Handle_StepShape_HArray1OfEdge_IsNull
Handle_StepShape_HArray1OfFace_Create = _StepShape.Handle_StepShape_HArray1OfFace_Create
Handle_StepShape_HArray1OfFace_DownCast = _StepShape.Handle_StepShape_HArray1OfFace_DownCast
Handle_StepShape_HArray1OfFace_IsNull = _StepShape.Handle_StepShape_HArray1OfFace_IsNull
Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_Create = _StepShape.Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_Create
Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_DownCast = _StepShape.Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_DownCast
Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_IsNull = _StepShape.Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_IsNull
Handle_StepShape_HArray1OfValueQualifier_Create = _StepShape.Handle_StepShape_HArray1OfValueQualifier_Create
Handle_StepShape_HArray1OfValueQualifier_DownCast = _StepShape.Handle_StepShape_HArray1OfValueQualifier_DownCast
Handle_StepShape_HArray1OfValueQualifier_IsNull = _StepShape.Handle_StepShape_HArray1OfValueQualifier_IsNull
Handle_StepShape_HArray1OfShell_Create = _StepShape.Handle_StepShape_HArray1OfShell_Create
Handle_StepShape_HArray1OfShell_DownCast = _StepShape.Handle_StepShape_HArray1OfShell_DownCast
Handle_StepShape_HArray1OfShell_IsNull = _StepShape.Handle_StepShape_HArray1OfShell_IsNull
Handle_StepShape_HArray1OfOrientedClosedShell_Create = _StepShape.Handle_StepShape_HArray1OfOrientedClosedShell_Create
Handle_StepShape_HArray1OfOrientedClosedShell_DownCast = _StepShape.Handle_StepShape_HArray1OfOrientedClosedShell_DownCast
Handle_StepShape_HArray1OfOrientedClosedShell_IsNull = _StepShape.Handle_StepShape_HArray1OfOrientedClosedShell_IsNull
Handle_StepShape_HArray1OfOrientedEdge_Create = _StepShape.Handle_StepShape_HArray1OfOrientedEdge_Create
Handle_StepShape_HArray1OfOrientedEdge_DownCast = _StepShape.Handle_StepShape_HArray1OfOrientedEdge_DownCast
Handle_StepShape_HArray1OfOrientedEdge_IsNull = _StepShape.Handle_StepShape_HArray1OfOrientedEdge_IsNull
class StepShape_Array1OfConnectedFaceSet(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfConnectedFaceSet_swiginit(self, _StepShape.new_StepShape_Array1OfConnectedFaceSet(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedFaceSet_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfConnectedFaceSet

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfConnectedFaceSet in _StepShape:
_StepShape.StepShape_Array1OfConnectedFaceSet_swigregister(StepShape_Array1OfConnectedFaceSet)

class StepShape_Array1OfValueQualifier(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfValueQualifier_swiginit(self, _StepShape.new_StepShape_Array1OfValueQualifier(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfValueQualifier_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfValueQualifier

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfValueQualifier in _StepShape:
_StepShape.StepShape_Array1OfValueQualifier_swigregister(StepShape_Array1OfValueQualifier)

class StepShape_Array1OfShapeDimensionRepresentationItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_swiginit(self, _StepShape.new_StepShape_Array1OfShapeDimensionRepresentationItem(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfShapeDimensionRepresentationItem

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfShapeDimensionRepresentationItem in _StepShape:
_StepShape.StepShape_Array1OfShapeDimensionRepresentationItem_swigregister(StepShape_Array1OfShapeDimensionRepresentationItem)

class StepShape_Array1OfConnectedEdgeSet(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfConnectedEdgeSet_swiginit(self, _StepShape.new_StepShape_Array1OfConnectedEdgeSet(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfConnectedEdgeSet_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfConnectedEdgeSet

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfConnectedEdgeSet in _StepShape:
_StepShape.StepShape_Array1OfConnectedEdgeSet_swigregister(StepShape_Array1OfConnectedEdgeSet)

class StepShape_Array1OfFace(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfFace_swiginit(self, _StepShape.new_StepShape_Array1OfFace(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfFace_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfFace

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfFace in _StepShape:
_StepShape.StepShape_Array1OfFace_swigregister(StepShape_Array1OfFace)

class StepShape_Array1OfFaceBound(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfFaceBound_swiginit(self, _StepShape.new_StepShape_Array1OfFaceBound(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfFaceBound_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfFaceBound

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfFaceBound in _StepShape:
_StepShape.StepShape_Array1OfFaceBound_swigregister(StepShape_Array1OfFaceBound)

class StepShape_Array1OfShell(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfShell_swiginit(self, _StepShape.new_StepShape_Array1OfShell(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfShell_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfShell

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfShell in _StepShape:
_StepShape.StepShape_Array1OfShell_swigregister(StepShape_Array1OfShell)

class StepShape_Array1OfOrientedEdge(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfOrientedEdge_swiginit(self, _StepShape.new_StepShape_Array1OfOrientedEdge(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedEdge_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfOrientedEdge

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfOrientedEdge in _StepShape:
_StepShape.StepShape_Array1OfOrientedEdge_swigregister(StepShape_Array1OfOrientedEdge)

class StepShape_Array1OfGeometricSetSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfGeometricSetSelect_swiginit(self, _StepShape.new_StepShape_Array1OfGeometricSetSelect(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfGeometricSetSelect_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfGeometricSetSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfGeometricSetSelect in _StepShape:
_StepShape.StepShape_Array1OfGeometricSetSelect_swigregister(StepShape_Array1OfGeometricSetSelect)

class StepShape_Array1OfOrientedClosedShell(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfOrientedClosedShell_swiginit(self, _StepShape.new_StepShape_Array1OfOrientedClosedShell(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfOrientedClosedShell_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfOrientedClosedShell

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfOrientedClosedShell in _StepShape:
_StepShape.StepShape_Array1OfOrientedClosedShell_swigregister(StepShape_Array1OfOrientedClosedShell)

class StepShape_Array1OfEdge(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_begin)
    end = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_end)
    cbegin = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_cbegin)
    cend = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_cend)

    def __init__(self, *args):
        _StepShape.StepShape_Array1OfEdge_swiginit(self, _StepShape.new_StepShape_Array1OfEdge(*args))
    Init = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Init)
    Size = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Size)
    Length = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Length)
    IsEmpty = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_IsEmpty)
    Lower = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Lower)
    Upper = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Upper)
    IsDeletable = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_IsAllocated)
    Assign = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Assign)
    Move = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Move)
    Set = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Set)
    First = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_First)
    ChangeFirst = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_ChangeFirst)
    Last = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Last)
    ChangeLast = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_ChangeLast)
    Value = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Value)
    ChangeValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_ChangeValue)
    __call__ = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge___call__)
    SetValue = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_SetValue)
    Resize = _swig_new_instance_method(_StepShape.StepShape_Array1OfEdge_Resize)
    __swig_destroy__ = _StepShape.delete_StepShape_Array1OfEdge

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepShape_Array1OfEdge in _StepShape:
_StepShape.StepShape_Array1OfEdge_swigregister(StepShape_Array1OfEdge)

class StepShape_Block(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_Block_Init)
    Position = _swig_new_instance_method(_StepShape.StepShape_Block_Position)
    SetPosition = _swig_new_instance_method(_StepShape.StepShape_Block_SetPosition)
    SetX = _swig_new_instance_method(_StepShape.StepShape_Block_SetX)
    SetY = _swig_new_instance_method(_StepShape.StepShape_Block_SetY)
    SetZ = _swig_new_instance_method(_StepShape.StepShape_Block_SetZ)

    def __init__(self, *args):
        r"""
        * Returns a Block
        	:rtype: None
        """
        _StepShape.StepShape_Block_swiginit(self, _StepShape.new_StepShape_Block(*args))
    X = _swig_new_instance_method(_StepShape.StepShape_Block_X)
    Y = _swig_new_instance_method(_StepShape.StepShape_Block_Y)
    Z = _swig_new_instance_method(_StepShape.StepShape_Block_Z)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Block_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Block

# Register StepShape_Block in _StepShape:
_StepShape.StepShape_Block_swigregister(StepShape_Block)

class StepShape_BooleanOperand(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BooleanResult = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_BooleanResult)
    CsgPrimitive = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_CsgPrimitive)
    HalfSpaceSolid = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_HalfSpaceSolid)
    SetBooleanResult = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_SetBooleanResult)
    SetCsgPrimitive = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_SetCsgPrimitive)
    SetHalfSpaceSolid = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_SetHalfSpaceSolid)
    SetSolidModel = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_SetSolidModel)
    SetTypeOfContent = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_SetTypeOfContent)
    SolidModel = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_SolidModel)

    def __init__(self, *args):
        r"""
        * Returns a BooleanOperand SelectType
        	:rtype: None
        """
        _StepShape.StepShape_BooleanOperand_swiginit(self, _StepShape.new_StepShape_BooleanOperand(*args))
    TypeOfContent = _swig_new_instance_method(_StepShape.StepShape_BooleanOperand_TypeOfContent)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BooleanOperand

# Register StepShape_BooleanOperand in _StepShape:
_StepShape.StepShape_BooleanOperand_swigregister(StepShape_BooleanOperand)

class StepShape_BooleanResult(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FirstOperand = _swig_new_instance_method(_StepShape.StepShape_BooleanResult_FirstOperand)
    Init = _swig_new_instance_method(_StepShape.StepShape_BooleanResult_Init)
    Operator = _swig_new_instance_method(_StepShape.StepShape_BooleanResult_Operator)
    SecondOperand = _swig_new_instance_method(_StepShape.StepShape_BooleanResult_SecondOperand)
    SetFirstOperand = _swig_new_instance_method(_StepShape.StepShape_BooleanResult_SetFirstOperand)
    SetOperator = _swig_new_instance_method(_StepShape.StepShape_BooleanResult_SetOperator)
    SetSecondOperand = _swig_new_instance_method(_StepShape.StepShape_BooleanResult_SetSecondOperand)

    def __init__(self, *args):
        r"""
        * Returns a BooleanResult
        	:rtype: None
        """
        _StepShape.StepShape_BooleanResult_swiginit(self, _StepShape.new_StepShape_BooleanResult(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_BooleanResult_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BooleanResult

# Register StepShape_BooleanResult in _StepShape:
_StepShape.StepShape_BooleanResult_swigregister(StepShape_BooleanResult)

class StepShape_BoxDomain(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Corner = _swig_new_instance_method(_StepShape.StepShape_BoxDomain_Corner)
    Init = _swig_new_instance_method(_StepShape.StepShape_BoxDomain_Init)
    SetCorner = _swig_new_instance_method(_StepShape.StepShape_BoxDomain_SetCorner)
    SetXlength = _swig_new_instance_method(_StepShape.StepShape_BoxDomain_SetXlength)
    SetYlength = _swig_new_instance_method(_StepShape.StepShape_BoxDomain_SetYlength)
    SetZlength = _swig_new_instance_method(_StepShape.StepShape_BoxDomain_SetZlength)

    def __init__(self, *args):
        r"""
        * Returns a BoxDomain
        	:rtype: None
        """
        _StepShape.StepShape_BoxDomain_swiginit(self, _StepShape.new_StepShape_BoxDomain(*args))
    Xlength = _swig_new_instance_method(_StepShape.StepShape_BoxDomain_Xlength)
    Ylength = _swig_new_instance_method(_StepShape.StepShape_BoxDomain_Ylength)
    Zlength = _swig_new_instance_method(_StepShape.StepShape_BoxDomain_Zlength)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_BoxDomain_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BoxDomain

# Register StepShape_BoxDomain in _StepShape:
_StepShape.StepShape_BoxDomain_swigregister(StepShape_BoxDomain)

class StepShape_ConnectedFaceShapeRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ConnectedFaceShapeRepresentation_swiginit(self, _StepShape.new_StepShape_ConnectedFaceShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ConnectedFaceShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ConnectedFaceShapeRepresentation

# Register StepShape_ConnectedFaceShapeRepresentation in _StepShape:
_StepShape.StepShape_ConnectedFaceShapeRepresentation_swigregister(StepShape_ConnectedFaceShapeRepresentation)

class StepShape_ContextDependentShapeRepresentation(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_ContextDependentShapeRepresentation_Init)
    RepresentationRelation = _swig_new_instance_method(_StepShape.StepShape_ContextDependentShapeRepresentation_RepresentationRelation)
    RepresentedProductRelation = _swig_new_instance_method(_StepShape.StepShape_ContextDependentShapeRepresentation_RepresentedProductRelation)
    SetRepresentationRelation = _swig_new_instance_method(_StepShape.StepShape_ContextDependentShapeRepresentation_SetRepresentationRelation)
    SetRepresentedProductRelation = _swig_new_instance_method(_StepShape.StepShape_ContextDependentShapeRepresentation_SetRepresentedProductRelation)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_ContextDependentShapeRepresentation_swiginit(self, _StepShape.new_StepShape_ContextDependentShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ContextDependentShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ContextDependentShapeRepresentation

# Register StepShape_ContextDependentShapeRepresentation in _StepShape:
_StepShape.StepShape_ContextDependentShapeRepresentation_swigregister(StepShape_ContextDependentShapeRepresentation)

class StepShape_CsgPrimitive(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Block = _swig_new_instance_method(_StepShape.StepShape_CsgPrimitive_Block)
    RightAngularWedge = _swig_new_instance_method(_StepShape.StepShape_CsgPrimitive_RightAngularWedge)
    RightCircularCone = _swig_new_instance_method(_StepShape.StepShape_CsgPrimitive_RightCircularCone)
    RightCircularCylinder = _swig_new_instance_method(_StepShape.StepShape_CsgPrimitive_RightCircularCylinder)
    Sphere = _swig_new_instance_method(_StepShape.StepShape_CsgPrimitive_Sphere)

    def __init__(self, *args):
        r"""
        * Returns a CsgPrimitive SelectType
        	:rtype: None
        """
        _StepShape.StepShape_CsgPrimitive_swiginit(self, _StepShape.new_StepShape_CsgPrimitive(*args))
    Torus = _swig_new_instance_method(_StepShape.StepShape_CsgPrimitive_Torus)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CsgPrimitive

# Register StepShape_CsgPrimitive in _StepShape:
_StepShape.StepShape_CsgPrimitive_swigregister(StepShape_CsgPrimitive)

class StepShape_CsgSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BooleanResult = _swig_new_instance_method(_StepShape.StepShape_CsgSelect_BooleanResult)
    CsgPrimitive = _swig_new_instance_method(_StepShape.StepShape_CsgSelect_CsgPrimitive)
    SetBooleanResult = _swig_new_instance_method(_StepShape.StepShape_CsgSelect_SetBooleanResult)
    SetCsgPrimitive = _swig_new_instance_method(_StepShape.StepShape_CsgSelect_SetCsgPrimitive)
    SetTypeOfContent = _swig_new_instance_method(_StepShape.StepShape_CsgSelect_SetTypeOfContent)

    def __init__(self, *args):
        r"""
        * Returns a CsgSelect SelectType
        	:rtype: None
        """
        _StepShape.StepShape_CsgSelect_swiginit(self, _StepShape.new_StepShape_CsgSelect(*args))
    TypeOfContent = _swig_new_instance_method(_StepShape.StepShape_CsgSelect_TypeOfContent)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CsgSelect

# Register StepShape_CsgSelect in _StepShape:
_StepShape.StepShape_CsgSelect_swigregister(StepShape_CsgSelect)

class StepShape_DefinitionalRepresentationAndShapeRepresentation(OCC.Core.StepRepr.StepRepr_DefinitionalRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_DefinitionalRepresentationAndShapeRepresentation_swiginit(self, _StepShape.new_StepShape_DefinitionalRepresentationAndShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DefinitionalRepresentationAndShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DefinitionalRepresentationAndShapeRepresentation

# Register StepShape_DefinitionalRepresentationAndShapeRepresentation in _StepShape:
_StepShape.StepShape_DefinitionalRepresentationAndShapeRepresentation_swigregister(StepShape_DefinitionalRepresentationAndShapeRepresentation)

class StepShape_DimensionalCharacteristic(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DimensionalLocation = _swig_new_instance_method(_StepShape.StepShape_DimensionalCharacteristic_DimensionalLocation)
    DimensionalSize = _swig_new_instance_method(_StepShape.StepShape_DimensionalCharacteristic_DimensionalSize)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalCharacteristic_swiginit(self, _StepShape.new_StepShape_DimensionalCharacteristic(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalCharacteristic

# Register StepShape_DimensionalCharacteristic in _StepShape:
_StepShape.StepShape_DimensionalCharacteristic_swigregister(StepShape_DimensionalCharacteristic)

class StepShape_DimensionalCharacteristicRepresentation(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Dimension = _swig_new_instance_method(_StepShape.StepShape_DimensionalCharacteristicRepresentation_Dimension)
    Init = _swig_new_instance_method(_StepShape.StepShape_DimensionalCharacteristicRepresentation_Init)
    Representation = _swig_new_instance_method(_StepShape.StepShape_DimensionalCharacteristicRepresentation_Representation)
    SetDimension = _swig_new_instance_method(_StepShape.StepShape_DimensionalCharacteristicRepresentation_SetDimension)
    SetRepresentation = _swig_new_instance_method(_StepShape.StepShape_DimensionalCharacteristicRepresentation_SetRepresentation)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalCharacteristicRepresentation_swiginit(self, _StepShape.new_StepShape_DimensionalCharacteristicRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalCharacteristicRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalCharacteristicRepresentation

# Register StepShape_DimensionalCharacteristicRepresentation in _StepShape:
_StepShape.StepShape_DimensionalCharacteristicRepresentation_swigregister(StepShape_DimensionalCharacteristicRepresentation)

class StepShape_DimensionalLocation(OCC.Core.StepRepr.StepRepr_ShapeAspectRelationship):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalLocation_swiginit(self, _StepShape.new_StepShape_DimensionalLocation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalLocation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalLocation

# Register StepShape_DimensionalLocation in _StepShape:
_StepShape.StepShape_DimensionalLocation_swigregister(StepShape_DimensionalLocation)

class StepShape_DimensionalSize(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AppliesTo = _swig_new_instance_method(_StepShape.StepShape_DimensionalSize_AppliesTo)
    Init = _swig_new_instance_method(_StepShape.StepShape_DimensionalSize_Init)
    Name = _swig_new_instance_method(_StepShape.StepShape_DimensionalSize_Name)
    SetAppliesTo = _swig_new_instance_method(_StepShape.StepShape_DimensionalSize_SetAppliesTo)
    SetName = _swig_new_instance_method(_StepShape.StepShape_DimensionalSize_SetName)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalSize_swiginit(self, _StepShape.new_StepShape_DimensionalSize(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalSize_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalSize

# Register StepShape_DimensionalSize in _StepShape:
_StepShape.StepShape_DimensionalSize_swigregister(StepShape_DimensionalSize)

class StepShape_EdgeBasedWireframeModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EbwmBoundary = _swig_new_instance_method(_StepShape.StepShape_EdgeBasedWireframeModel_EbwmBoundary)
    Init = _swig_new_instance_method(_StepShape.StepShape_EdgeBasedWireframeModel_Init)
    SetEbwmBoundary = _swig_new_instance_method(_StepShape.StepShape_EdgeBasedWireframeModel_SetEbwmBoundary)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_EdgeBasedWireframeModel_swiginit(self, _StepShape.new_StepShape_EdgeBasedWireframeModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_EdgeBasedWireframeModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_EdgeBasedWireframeModel

# Register StepShape_EdgeBasedWireframeModel in _StepShape:
_StepShape.StepShape_EdgeBasedWireframeModel_swigregister(StepShape_EdgeBasedWireframeModel)

class StepShape_FaceBasedSurfaceModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FbsmFaces = _swig_new_instance_method(_StepShape.StepShape_FaceBasedSurfaceModel_FbsmFaces)
    Init = _swig_new_instance_method(_StepShape.StepShape_FaceBasedSurfaceModel_Init)
    SetFbsmFaces = _swig_new_instance_method(_StepShape.StepShape_FaceBasedSurfaceModel_SetFbsmFaces)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_FaceBasedSurfaceModel_swiginit(self, _StepShape.new_StepShape_FaceBasedSurfaceModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FaceBasedSurfaceModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FaceBasedSurfaceModel

# Register StepShape_FaceBasedSurfaceModel in _StepShape:
_StepShape.StepShape_FaceBasedSurfaceModel_swigregister(StepShape_FaceBasedSurfaceModel)

class StepShape_GeometricSet(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Elements = _swig_new_instance_method(_StepShape.StepShape_GeometricSet_Elements)
    ElementsValue = _swig_new_instance_method(_StepShape.StepShape_GeometricSet_ElementsValue)
    Init = _swig_new_instance_method(_StepShape.StepShape_GeometricSet_Init)
    NbElements = _swig_new_instance_method(_StepShape.StepShape_GeometricSet_NbElements)
    SetElements = _swig_new_instance_method(_StepShape.StepShape_GeometricSet_SetElements)

    def __init__(self, *args):
        r"""
        * Returns a GeometricSet
        	:rtype: None
        """
        _StepShape.StepShape_GeometricSet_swiginit(self, _StepShape.new_StepShape_GeometricSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_GeometricSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricSet

# Register StepShape_GeometricSet in _StepShape:
_StepShape.StepShape_GeometricSet_swigregister(StepShape_GeometricSet)

class StepShape_GeometricSetSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Curve = _swig_new_instance_method(_StepShape.StepShape_GeometricSetSelect_Curve)
    Point = _swig_new_instance_method(_StepShape.StepShape_GeometricSetSelect_Point)

    def __init__(self, *args):
        r"""
        * Returns a GeometricSetSelect SelectType
        	:rtype: None
        """
        _StepShape.StepShape_GeometricSetSelect_swiginit(self, _StepShape.new_StepShape_GeometricSetSelect(*args))
    Surface = _swig_new_instance_method(_StepShape.StepShape_GeometricSetSelect_Surface)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricSetSelect

# Register StepShape_GeometricSetSelect in _StepShape:
_StepShape.StepShape_GeometricSetSelect_swigregister(StepShape_GeometricSetSelect)

class StepShape_HalfSpaceSolid(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AgreementFlag = _swig_new_instance_method(_StepShape.StepShape_HalfSpaceSolid_AgreementFlag)
    BaseSurface = _swig_new_instance_method(_StepShape.StepShape_HalfSpaceSolid_BaseSurface)
    Init = _swig_new_instance_method(_StepShape.StepShape_HalfSpaceSolid_Init)
    SetAgreementFlag = _swig_new_instance_method(_StepShape.StepShape_HalfSpaceSolid_SetAgreementFlag)
    SetBaseSurface = _swig_new_instance_method(_StepShape.StepShape_HalfSpaceSolid_SetBaseSurface)

    def __init__(self, *args):
        r"""
        * Returns a HalfSpaceSolid
        	:rtype: None
        """
        _StepShape.StepShape_HalfSpaceSolid_swiginit(self, _StepShape.new_StepShape_HalfSpaceSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HalfSpaceSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_HalfSpaceSolid

# Register StepShape_HalfSpaceSolid in _StepShape:
_StepShape.StepShape_HalfSpaceSolid_swigregister(StepShape_HalfSpaceSolid)

class StepShape_LimitsAndFits(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FormVariance = _swig_new_instance_method(_StepShape.StepShape_LimitsAndFits_FormVariance)
    Grade = _swig_new_instance_method(_StepShape.StepShape_LimitsAndFits_Grade)
    Init = _swig_new_instance_method(_StepShape.StepShape_LimitsAndFits_Init)
    SetFormVariance = _swig_new_instance_method(_StepShape.StepShape_LimitsAndFits_SetFormVariance)
    SetGrade = _swig_new_instance_method(_StepShape.StepShape_LimitsAndFits_SetGrade)
    SetSource = _swig_new_instance_method(_StepShape.StepShape_LimitsAndFits_SetSource)
    SetZoneVariance = _swig_new_instance_method(_StepShape.StepShape_LimitsAndFits_SetZoneVariance)
    Source = _swig_new_instance_method(_StepShape.StepShape_LimitsAndFits_Source)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_LimitsAndFits_swiginit(self, _StepShape.new_StepShape_LimitsAndFits(*args))
    ZoneVariance = _swig_new_instance_method(_StepShape.StepShape_LimitsAndFits_ZoneVariance)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_LimitsAndFits_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_LimitsAndFits

# Register StepShape_LimitsAndFits in _StepShape:
_StepShape.StepShape_LimitsAndFits_swigregister(StepShape_LimitsAndFits)

class StepShape_MeasureQualification(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Description = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_Description)
    Init = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_Init)
    Name = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_Name)
    NbQualifiers = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_NbQualifiers)
    QualifiedMeasure = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_QualifiedMeasure)
    Qualifiers = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_Qualifiers)
    QualifiersValue = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_QualifiersValue)
    SetDescription = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_SetDescription)
    SetName = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_SetName)
    SetQualifiedMeasure = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_SetQualifiedMeasure)
    SetQualifiers = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_SetQualifiers)
    SetQualifiersValue = _swig_new_instance_method(_StepShape.StepShape_MeasureQualification_SetQualifiersValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_MeasureQualification_swiginit(self, _StepShape.new_StepShape_MeasureQualification(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_MeasureQualification_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_MeasureQualification

# Register StepShape_MeasureQualification in _StepShape:
_StepShape.StepShape_MeasureQualification_swigregister(StepShape_MeasureQualification)

class StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Init)
    Measure = _swig_new_instance_method(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Measure)
    NbQualifiers = _swig_new_instance_method(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_NbQualifiers)
    Qualifiers = _swig_new_instance_method(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_Qualifiers)
    QualifiersValue = _swig_new_instance_method(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_QualifiersValue)
    SetMeasure = _swig_new_instance_method(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_SetMeasure)
    SetQualifiers = _swig_new_instance_method(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_SetQualifiers)
    SetQualifiersValue = _swig_new_instance_method(_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_SetQualifiersValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_swiginit(self, _StepShape.new_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem

# Register StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem in _StepShape:
_StepShape.StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_swigregister(StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)

class StepShape_PlusMinusTolerance(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_PlusMinusTolerance_Init)
    Range = _swig_new_instance_method(_StepShape.StepShape_PlusMinusTolerance_Range)
    SetRange = _swig_new_instance_method(_StepShape.StepShape_PlusMinusTolerance_SetRange)
    SetTolerancedDimension = _swig_new_instance_method(_StepShape.StepShape_PlusMinusTolerance_SetTolerancedDimension)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_PlusMinusTolerance_swiginit(self, _StepShape.new_StepShape_PlusMinusTolerance(*args))
    TolerancedDimension = _swig_new_instance_method(_StepShape.StepShape_PlusMinusTolerance_TolerancedDimension)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_PlusMinusTolerance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_PlusMinusTolerance

# Register StepShape_PlusMinusTolerance in _StepShape:
_StepShape.StepShape_PlusMinusTolerance_swigregister(StepShape_PlusMinusTolerance)

class StepShape_PrecisionQualifier(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_PrecisionQualifier_Init)
    PrecisionValue = _swig_new_instance_method(_StepShape.StepShape_PrecisionQualifier_PrecisionValue)
    SetPrecisionValue = _swig_new_instance_method(_StepShape.StepShape_PrecisionQualifier_SetPrecisionValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_PrecisionQualifier_swiginit(self, _StepShape.new_StepShape_PrecisionQualifier(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_PrecisionQualifier_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_PrecisionQualifier

# Register StepShape_PrecisionQualifier in _StepShape:
_StepShape.StepShape_PrecisionQualifier_swigregister(StepShape_PrecisionQualifier)

class StepShape_QualifiedRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_QualifiedRepresentationItem_Init)
    NbQualifiers = _swig_new_instance_method(_StepShape.StepShape_QualifiedRepresentationItem_NbQualifiers)
    Qualifiers = _swig_new_instance_method(_StepShape.StepShape_QualifiedRepresentationItem_Qualifiers)
    QualifiersValue = _swig_new_instance_method(_StepShape.StepShape_QualifiedRepresentationItem_QualifiersValue)
    SetQualifiers = _swig_new_instance_method(_StepShape.StepShape_QualifiedRepresentationItem_SetQualifiers)
    SetQualifiersValue = _swig_new_instance_method(_StepShape.StepShape_QualifiedRepresentationItem_SetQualifiersValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_QualifiedRepresentationItem_swiginit(self, _StepShape.new_StepShape_QualifiedRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_QualifiedRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_QualifiedRepresentationItem

# Register StepShape_QualifiedRepresentationItem in _StepShape:
_StepShape.StepShape_QualifiedRepresentationItem_swigregister(StepShape_QualifiedRepresentationItem)

class StepShape_ReversibleTopologyItem(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ClosedShell = _swig_new_instance_method(_StepShape.StepShape_ReversibleTopologyItem_ClosedShell)
    Edge = _swig_new_instance_method(_StepShape.StepShape_ReversibleTopologyItem_Edge)
    Face = _swig_new_instance_method(_StepShape.StepShape_ReversibleTopologyItem_Face)
    FaceBound = _swig_new_instance_method(_StepShape.StepShape_ReversibleTopologyItem_FaceBound)
    OpenShell = _swig_new_instance_method(_StepShape.StepShape_ReversibleTopologyItem_OpenShell)
    Path = _swig_new_instance_method(_StepShape.StepShape_ReversibleTopologyItem_Path)

    def __init__(self, *args):
        r"""
        * Returns a ReversibleTopologyItem SelectType
        	:rtype: None
        """
        _StepShape.StepShape_ReversibleTopologyItem_swiginit(self, _StepShape.new_StepShape_ReversibleTopologyItem(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ReversibleTopologyItem

# Register StepShape_ReversibleTopologyItem in _StepShape:
_StepShape.StepShape_ReversibleTopologyItem_swigregister(StepShape_ReversibleTopologyItem)

class StepShape_RightAngularWedge(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_Init)
    Ltx = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_Ltx)
    Position = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_Position)
    SetLtx = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_SetLtx)
    SetPosition = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_SetPosition)
    SetX = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_SetX)
    SetY = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_SetY)
    SetZ = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_SetZ)

    def __init__(self, *args):
        r"""
        * Returns a RightAngularWedge
        	:rtype: None
        """
        _StepShape.StepShape_RightAngularWedge_swiginit(self, _StepShape.new_StepShape_RightAngularWedge(*args))
    X = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_X)
    Y = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_Y)
    Z = _swig_new_instance_method(_StepShape.StepShape_RightAngularWedge_Z)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RightAngularWedge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RightAngularWedge

# Register StepShape_RightAngularWedge in _StepShape:
_StepShape.StepShape_RightAngularWedge_swigregister(StepShape_RightAngularWedge)

class StepShape_RightCircularCone(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Height = _swig_new_instance_method(_StepShape.StepShape_RightCircularCone_Height)
    Init = _swig_new_instance_method(_StepShape.StepShape_RightCircularCone_Init)
    Position = _swig_new_instance_method(_StepShape.StepShape_RightCircularCone_Position)
    Radius = _swig_new_instance_method(_StepShape.StepShape_RightCircularCone_Radius)
    SemiAngle = _swig_new_instance_method(_StepShape.StepShape_RightCircularCone_SemiAngle)
    SetHeight = _swig_new_instance_method(_StepShape.StepShape_RightCircularCone_SetHeight)
    SetPosition = _swig_new_instance_method(_StepShape.StepShape_RightCircularCone_SetPosition)
    SetRadius = _swig_new_instance_method(_StepShape.StepShape_RightCircularCone_SetRadius)
    SetSemiAngle = _swig_new_instance_method(_StepShape.StepShape_RightCircularCone_SetSemiAngle)

    def __init__(self, *args):
        r"""
        * Returns a RightCircularCone
        	:rtype: None
        """
        _StepShape.StepShape_RightCircularCone_swiginit(self, _StepShape.new_StepShape_RightCircularCone(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RightCircularCone_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RightCircularCone

# Register StepShape_RightCircularCone in _StepShape:
_StepShape.StepShape_RightCircularCone_swigregister(StepShape_RightCircularCone)

class StepShape_RightCircularCylinder(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Height = _swig_new_instance_method(_StepShape.StepShape_RightCircularCylinder_Height)
    Init = _swig_new_instance_method(_StepShape.StepShape_RightCircularCylinder_Init)
    Position = _swig_new_instance_method(_StepShape.StepShape_RightCircularCylinder_Position)
    Radius = _swig_new_instance_method(_StepShape.StepShape_RightCircularCylinder_Radius)
    SetHeight = _swig_new_instance_method(_StepShape.StepShape_RightCircularCylinder_SetHeight)
    SetPosition = _swig_new_instance_method(_StepShape.StepShape_RightCircularCylinder_SetPosition)
    SetRadius = _swig_new_instance_method(_StepShape.StepShape_RightCircularCylinder_SetRadius)

    def __init__(self, *args):
        r"""
        * Returns a RightCircularCylinder
        	:rtype: None
        """
        _StepShape.StepShape_RightCircularCylinder_swiginit(self, _StepShape.new_StepShape_RightCircularCylinder(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RightCircularCylinder_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RightCircularCylinder

# Register StepShape_RightCircularCylinder in _StepShape:
_StepShape.StepShape_RightCircularCylinder_swigregister(StepShape_RightCircularCylinder)

class StepShape_ShapeDefinitionRepresentation(OCC.Core.StepRepr.StepRepr_PropertyDefinitionRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ShapeDefinitionRepresentation_swiginit(self, _StepShape.new_StepShape_ShapeDefinitionRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShapeDefinitionRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeDefinitionRepresentation

# Register StepShape_ShapeDefinitionRepresentation in _StepShape:
_StepShape.StepShape_ShapeDefinitionRepresentation_swigregister(StepShape_ShapeDefinitionRepresentation)

class StepShape_ShapeDimensionRepresentationItem(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CompoundRepresentationItem = _swig_new_instance_method(_StepShape.StepShape_ShapeDimensionRepresentationItem_CompoundRepresentationItem)
    DescriptiveRepresentationItem = _swig_new_instance_method(_StepShape.StepShape_ShapeDimensionRepresentationItem_DescriptiveRepresentationItem)
    MeasureRepresentationItem = _swig_new_instance_method(_StepShape.StepShape_ShapeDimensionRepresentationItem_MeasureRepresentationItem)
    Placement = _swig_new_instance_method(_StepShape.StepShape_ShapeDimensionRepresentationItem_Placement)

    def __init__(self, *args):
        r"""
        * Returns a ShapeDimensionRepresentationItem select type
        	:rtype: None
        """
        _StepShape.StepShape_ShapeDimensionRepresentationItem_swiginit(self, _StepShape.new_StepShape_ShapeDimensionRepresentationItem(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeDimensionRepresentationItem

# Register StepShape_ShapeDimensionRepresentationItem in _StepShape:
_StepShape.StepShape_ShapeDimensionRepresentationItem_swigregister(StepShape_ShapeDimensionRepresentationItem)

class StepShape_ShapeRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a ShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_ShapeRepresentation_swiginit(self, _StepShape.new_StepShape_ShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeRepresentation

# Register StepShape_ShapeRepresentation in _StepShape:
_StepShape.StepShape_ShapeRepresentation_swigregister(StepShape_ShapeRepresentation)

class StepShape_Shell(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ClosedShell = _swig_new_instance_method(_StepShape.StepShape_Shell_ClosedShell)
    OpenShell = _swig_new_instance_method(_StepShape.StepShape_Shell_OpenShell)

    def __init__(self, *args):
        r"""
        * Returns a Shell SelectType
        	:rtype: None
        """
        _StepShape.StepShape_Shell_swiginit(self, _StepShape.new_StepShape_Shell(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Shell

# Register StepShape_Shell in _StepShape:
_StepShape.StepShape_Shell_swigregister(StepShape_Shell)

class StepShape_ShellBasedSurfaceModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_ShellBasedSurfaceModel_Init)
    NbSbsmBoundary = _swig_new_instance_method(_StepShape.StepShape_ShellBasedSurfaceModel_NbSbsmBoundary)
    SbsmBoundary = _swig_new_instance_method(_StepShape.StepShape_ShellBasedSurfaceModel_SbsmBoundary)
    SbsmBoundaryValue = _swig_new_instance_method(_StepShape.StepShape_ShellBasedSurfaceModel_SbsmBoundaryValue)
    SetSbsmBoundary = _swig_new_instance_method(_StepShape.StepShape_ShellBasedSurfaceModel_SetSbsmBoundary)

    def __init__(self, *args):
        r"""
        * Returns a ShellBasedSurfaceModel
        	:rtype: None
        """
        _StepShape.StepShape_ShellBasedSurfaceModel_swiginit(self, _StepShape.new_StepShape_ShellBasedSurfaceModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShellBasedSurfaceModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShellBasedSurfaceModel

# Register StepShape_ShellBasedSurfaceModel in _StepShape:
_StepShape.StepShape_ShellBasedSurfaceModel_swigregister(StepShape_ShellBasedSurfaceModel)

class StepShape_SolidModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a SolidModel
        	:rtype: None
        """
        _StepShape.StepShape_SolidModel_swiginit(self, _StepShape.new_StepShape_SolidModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SolidModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SolidModel

# Register StepShape_SolidModel in _StepShape:
_StepShape.StepShape_SolidModel_swigregister(StepShape_SolidModel)

class StepShape_Sphere(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Centre = _swig_new_instance_method(_StepShape.StepShape_Sphere_Centre)
    Init = _swig_new_instance_method(_StepShape.StepShape_Sphere_Init)
    Radius = _swig_new_instance_method(_StepShape.StepShape_Sphere_Radius)
    SetCentre = _swig_new_instance_method(_StepShape.StepShape_Sphere_SetCentre)
    SetRadius = _swig_new_instance_method(_StepShape.StepShape_Sphere_SetRadius)

    def __init__(self, *args):
        r"""
        * Returns a Sphere
        	:rtype: None
        """
        _StepShape.StepShape_Sphere_swiginit(self, _StepShape.new_StepShape_Sphere(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Sphere_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Sphere

# Register StepShape_Sphere in _StepShape:
_StepShape.StepShape_Sphere_swigregister(StepShape_Sphere)

class StepShape_SurfaceModel(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ShellBasedSurfaceModel = _swig_new_instance_method(_StepShape.StepShape_SurfaceModel_ShellBasedSurfaceModel)

    def __init__(self, *args):
        r"""
        * Returns a SurfaceModel SelectType
        	:rtype: None
        """
        _StepShape.StepShape_SurfaceModel_swiginit(self, _StepShape.new_StepShape_SurfaceModel(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SurfaceModel

# Register StepShape_SurfaceModel in _StepShape:
_StepShape.StepShape_SurfaceModel_swigregister(StepShape_SurfaceModel)

class StepShape_ToleranceMethodDefinition(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    LimitsAndFits = _swig_new_instance_method(_StepShape.StepShape_ToleranceMethodDefinition_LimitsAndFits)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_ToleranceMethodDefinition_swiginit(self, _StepShape.new_StepShape_ToleranceMethodDefinition(*args))
    ToleranceValue = _swig_new_instance_method(_StepShape.StepShape_ToleranceMethodDefinition_ToleranceValue)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ToleranceMethodDefinition

# Register StepShape_ToleranceMethodDefinition in _StepShape:
_StepShape.StepShape_ToleranceMethodDefinition_swigregister(StepShape_ToleranceMethodDefinition)

class StepShape_ToleranceValue(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_ToleranceValue_Init)
    LowerBound = _swig_new_instance_method(_StepShape.StepShape_ToleranceValue_LowerBound)
    SetLowerBound = _swig_new_instance_method(_StepShape.StepShape_ToleranceValue_SetLowerBound)
    SetUpperBound = _swig_new_instance_method(_StepShape.StepShape_ToleranceValue_SetUpperBound)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_ToleranceValue_swiginit(self, _StepShape.new_StepShape_ToleranceValue(*args))
    UpperBound = _swig_new_instance_method(_StepShape.StepShape_ToleranceValue_UpperBound)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ToleranceValue_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ToleranceValue

# Register StepShape_ToleranceValue in _StepShape:
_StepShape.StepShape_ToleranceValue_swigregister(StepShape_ToleranceValue)

class StepShape_TopologicalRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a TopologicalRepresentationItem
        	:rtype: None
        """
        _StepShape.StepShape_TopologicalRepresentationItem_swiginit(self, _StepShape.new_StepShape_TopologicalRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_TopologicalRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_TopologicalRepresentationItem

# Register StepShape_TopologicalRepresentationItem in _StepShape:
_StepShape.StepShape_TopologicalRepresentationItem_swigregister(StepShape_TopologicalRepresentationItem)

class StepShape_Torus(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_Torus_Init)
    MajorRadius = _swig_new_instance_method(_StepShape.StepShape_Torus_MajorRadius)
    MinorRadius = _swig_new_instance_method(_StepShape.StepShape_Torus_MinorRadius)
    Position = _swig_new_instance_method(_StepShape.StepShape_Torus_Position)
    SetMajorRadius = _swig_new_instance_method(_StepShape.StepShape_Torus_SetMajorRadius)
    SetMinorRadius = _swig_new_instance_method(_StepShape.StepShape_Torus_SetMinorRadius)
    SetPosition = _swig_new_instance_method(_StepShape.StepShape_Torus_SetPosition)

    def __init__(self, *args):
        r"""
        * Returns a Torus
        	:rtype: None
        """
        _StepShape.StepShape_Torus_swiginit(self, _StepShape.new_StepShape_Torus(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Torus_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Torus

# Register StepShape_Torus in _StepShape:
_StepShape.StepShape_Torus_swigregister(StepShape_Torus)

class StepShape_TypeQualifier(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_TypeQualifier_Init)
    Name = _swig_new_instance_method(_StepShape.StepShape_TypeQualifier_Name)
    SetName = _swig_new_instance_method(_StepShape.StepShape_TypeQualifier_SetName)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_TypeQualifier_swiginit(self, _StepShape.new_StepShape_TypeQualifier(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_TypeQualifier_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_TypeQualifier

# Register StepShape_TypeQualifier in _StepShape:
_StepShape.StepShape_TypeQualifier_swigregister(StepShape_TypeQualifier)

class StepShape_ValueFormatTypeQualifier(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FormatType = _swig_new_instance_method(_StepShape.StepShape_ValueFormatTypeQualifier_FormatType)
    Init = _swig_new_instance_method(_StepShape.StepShape_ValueFormatTypeQualifier_Init)
    SetFormatType = _swig_new_instance_method(_StepShape.StepShape_ValueFormatTypeQualifier_SetFormatType)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_ValueFormatTypeQualifier_swiginit(self, _StepShape.new_StepShape_ValueFormatTypeQualifier(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ValueFormatTypeQualifier_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ValueFormatTypeQualifier

# Register StepShape_ValueFormatTypeQualifier in _StepShape:
_StepShape.StepShape_ValueFormatTypeQualifier_swigregister(StepShape_ValueFormatTypeQualifier)

class StepShape_ValueQualifier(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PrecisionQualifier = _swig_new_instance_method(_StepShape.StepShape_ValueQualifier_PrecisionQualifier)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepShape.StepShape_ValueQualifier_swiginit(self, _StepShape.new_StepShape_ValueQualifier(*args))
    TypeQualifier = _swig_new_instance_method(_StepShape.StepShape_ValueQualifier_TypeQualifier)
    ValueFormatTypeQualifier = _swig_new_instance_method(_StepShape.StepShape_ValueQualifier_ValueFormatTypeQualifier)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ValueQualifier

# Register StepShape_ValueQualifier in _StepShape:
_StepShape.StepShape_ValueQualifier_swigregister(StepShape_ValueQualifier)

class StepShape_AdvancedBrepShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a AdvancedBrepShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_AdvancedBrepShapeRepresentation_swiginit(self, _StepShape.new_StepShape_AdvancedBrepShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_AdvancedBrepShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_AdvancedBrepShapeRepresentation

# Register StepShape_AdvancedBrepShapeRepresentation in _StepShape:
_StepShape.StepShape_AdvancedBrepShapeRepresentation_swigregister(StepShape_AdvancedBrepShapeRepresentation)

class StepShape_AngularLocation(StepShape_DimensionalLocation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AngleSelection = _swig_new_instance_method(_StepShape.StepShape_AngularLocation_AngleSelection)
    Init = _swig_new_instance_method(_StepShape.StepShape_AngularLocation_Init)
    SetAngleSelection = _swig_new_instance_method(_StepShape.StepShape_AngularLocation_SetAngleSelection)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_AngularLocation_swiginit(self, _StepShape.new_StepShape_AngularLocation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_AngularLocation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_AngularLocation

# Register StepShape_AngularLocation in _StepShape:
_StepShape.StepShape_AngularLocation_swigregister(StepShape_AngularLocation)

class StepShape_AngularSize(StepShape_DimensionalSize):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AngleSelection = _swig_new_instance_method(_StepShape.StepShape_AngularSize_AngleSelection)
    Init = _swig_new_instance_method(_StepShape.StepShape_AngularSize_Init)
    SetAngleSelection = _swig_new_instance_method(_StepShape.StepShape_AngularSize_SetAngleSelection)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_AngularSize_swiginit(self, _StepShape.new_StepShape_AngularSize(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_AngularSize_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_AngularSize

# Register StepShape_AngularSize in _StepShape:
_StepShape.StepShape_AngularSize_swigregister(StepShape_AngularSize)

class StepShape_BoxedHalfSpace(StepShape_HalfSpaceSolid):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Enclosure = _swig_new_instance_method(_StepShape.StepShape_BoxedHalfSpace_Enclosure)
    Init = _swig_new_instance_method(_StepShape.StepShape_BoxedHalfSpace_Init)
    SetEnclosure = _swig_new_instance_method(_StepShape.StepShape_BoxedHalfSpace_SetEnclosure)

    def __init__(self, *args):
        r"""
        * Returns a BoxedHalfSpace
        	:rtype: None
        """
        _StepShape.StepShape_BoxedHalfSpace_swiginit(self, _StepShape.new_StepShape_BoxedHalfSpace(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_BoxedHalfSpace_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BoxedHalfSpace

# Register StepShape_BoxedHalfSpace in _StepShape:
_StepShape.StepShape_BoxedHalfSpace_swigregister(StepShape_BoxedHalfSpace)

class StepShape_CompoundShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_CompoundShapeRepresentation_swiginit(self, _StepShape.new_StepShape_CompoundShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_CompoundShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CompoundShapeRepresentation

# Register StepShape_CompoundShapeRepresentation in _StepShape:
_StepShape.StepShape_CompoundShapeRepresentation_swigregister(StepShape_CompoundShapeRepresentation)

class StepShape_ConnectedEdgeSet(StepShape_TopologicalRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CesEdges = _swig_new_instance_method(_StepShape.StepShape_ConnectedEdgeSet_CesEdges)
    Init = _swig_new_instance_method(_StepShape.StepShape_ConnectedEdgeSet_Init)
    SetCesEdges = _swig_new_instance_method(_StepShape.StepShape_ConnectedEdgeSet_SetCesEdges)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ConnectedEdgeSet_swiginit(self, _StepShape.new_StepShape_ConnectedEdgeSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ConnectedEdgeSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ConnectedEdgeSet

# Register StepShape_ConnectedEdgeSet in _StepShape:
_StepShape.StepShape_ConnectedEdgeSet_swigregister(StepShape_ConnectedEdgeSet)

class StepShape_ConnectedFaceSet(StepShape_TopologicalRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CfsFaces = _swig_new_instance_method(_StepShape.StepShape_ConnectedFaceSet_CfsFaces)
    CfsFacesValue = _swig_new_instance_method(_StepShape.StepShape_ConnectedFaceSet_CfsFacesValue)
    Init = _swig_new_instance_method(_StepShape.StepShape_ConnectedFaceSet_Init)
    NbCfsFaces = _swig_new_instance_method(_StepShape.StepShape_ConnectedFaceSet_NbCfsFaces)
    SetCfsFaces = _swig_new_instance_method(_StepShape.StepShape_ConnectedFaceSet_SetCfsFaces)

    def __init__(self, *args):
        r"""
        * Returns a ConnectedFaceSet
        	:rtype: None
        """
        _StepShape.StepShape_ConnectedFaceSet_swiginit(self, _StepShape.new_StepShape_ConnectedFaceSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ConnectedFaceSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ConnectedFaceSet

# Register StepShape_ConnectedFaceSet in _StepShape:
_StepShape.StepShape_ConnectedFaceSet_swigregister(StepShape_ConnectedFaceSet)

class StepShape_CsgShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a CsgShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_CsgShapeRepresentation_swiginit(self, _StepShape.new_StepShape_CsgShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_CsgShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CsgShapeRepresentation

# Register StepShape_CsgShapeRepresentation in _StepShape:
_StepShape.StepShape_CsgShapeRepresentation_swigregister(StepShape_CsgShapeRepresentation)

class StepShape_CsgSolid(StepShape_SolidModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_CsgSolid_Init)
    SetTreeRootExpression = _swig_new_instance_method(_StepShape.StepShape_CsgSolid_SetTreeRootExpression)

    def __init__(self, *args):
        r"""
        * Returns a CsgSolid
        	:rtype: None
        """
        _StepShape.StepShape_CsgSolid_swiginit(self, _StepShape.new_StepShape_CsgSolid(*args))
    TreeRootExpression = _swig_new_instance_method(_StepShape.StepShape_CsgSolid_TreeRootExpression)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_CsgSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_CsgSolid

# Register StepShape_CsgSolid in _StepShape:
_StepShape.StepShape_CsgSolid_swigregister(StepShape_CsgSolid)

class StepShape_DimensionalLocationWithPath(StepShape_DimensionalLocation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_DimensionalLocationWithPath_Init)
    Path = _swig_new_instance_method(_StepShape.StepShape_DimensionalLocationWithPath_Path)
    SetPath = _swig_new_instance_method(_StepShape.StepShape_DimensionalLocationWithPath_SetPath)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalLocationWithPath_swiginit(self, _StepShape.new_StepShape_DimensionalLocationWithPath(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalLocationWithPath_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalLocationWithPath

# Register StepShape_DimensionalLocationWithPath in _StepShape:
_StepShape.StepShape_DimensionalLocationWithPath_swigregister(StepShape_DimensionalLocationWithPath)

class StepShape_DimensionalSizeWithPath(StepShape_DimensionalSize):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_DimensionalSizeWithPath_Init)
    Path = _swig_new_instance_method(_StepShape.StepShape_DimensionalSizeWithPath_Path)
    SetPath = _swig_new_instance_method(_StepShape.StepShape_DimensionalSizeWithPath_SetPath)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DimensionalSizeWithPath_swiginit(self, _StepShape.new_StepShape_DimensionalSizeWithPath(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DimensionalSizeWithPath_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DimensionalSizeWithPath

# Register StepShape_DimensionalSizeWithPath in _StepShape:
_StepShape.StepShape_DimensionalSizeWithPath_swigregister(StepShape_DimensionalSizeWithPath)

class StepShape_DirectedDimensionalLocation(StepShape_DimensionalLocation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_DirectedDimensionalLocation_swiginit(self, _StepShape.new_StepShape_DirectedDimensionalLocation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_DirectedDimensionalLocation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_DirectedDimensionalLocation

# Register StepShape_DirectedDimensionalLocation in _StepShape:
_StepShape.StepShape_DirectedDimensionalLocation_swigregister(StepShape_DirectedDimensionalLocation)

class StepShape_Edge(StepShape_TopologicalRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EdgeEnd = _swig_new_instance_method(_StepShape.StepShape_Edge_EdgeEnd)
    EdgeStart = _swig_new_instance_method(_StepShape.StepShape_Edge_EdgeStart)
    Init = _swig_new_instance_method(_StepShape.StepShape_Edge_Init)
    SetEdgeEnd = _swig_new_instance_method(_StepShape.StepShape_Edge_SetEdgeEnd)
    SetEdgeStart = _swig_new_instance_method(_StepShape.StepShape_Edge_SetEdgeStart)

    def __init__(self, *args):
        r"""
        * Returns a Edge
        	:rtype: None
        """
        _StepShape.StepShape_Edge_swiginit(self, _StepShape.new_StepShape_Edge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Edge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Edge

# Register StepShape_Edge in _StepShape:
_StepShape.StepShape_Edge_swigregister(StepShape_Edge)

class StepShape_EdgeBasedWireframeShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_EdgeBasedWireframeShapeRepresentation_swiginit(self, _StepShape.new_StepShape_EdgeBasedWireframeShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_EdgeBasedWireframeShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_EdgeBasedWireframeShapeRepresentation

# Register StepShape_EdgeBasedWireframeShapeRepresentation in _StepShape:
_StepShape.StepShape_EdgeBasedWireframeShapeRepresentation_swigregister(StepShape_EdgeBasedWireframeShapeRepresentation)

class StepShape_Face(StepShape_TopologicalRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Bounds = _swig_new_instance_method(_StepShape.StepShape_Face_Bounds)
    BoundsValue = _swig_new_instance_method(_StepShape.StepShape_Face_BoundsValue)
    Init = _swig_new_instance_method(_StepShape.StepShape_Face_Init)
    NbBounds = _swig_new_instance_method(_StepShape.StepShape_Face_NbBounds)
    SetBounds = _swig_new_instance_method(_StepShape.StepShape_Face_SetBounds)

    def __init__(self, *args):
        r"""
        * Returns a Face
        	:rtype: None
        """
        _StepShape.StepShape_Face_swiginit(self, _StepShape.new_StepShape_Face(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Face_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Face

# Register StepShape_Face in _StepShape:
_StepShape.StepShape_Face_swigregister(StepShape_Face)

class StepShape_FaceBound(StepShape_TopologicalRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Bound = _swig_new_instance_method(_StepShape.StepShape_FaceBound_Bound)
    Init = _swig_new_instance_method(_StepShape.StepShape_FaceBound_Init)
    Orientation = _swig_new_instance_method(_StepShape.StepShape_FaceBound_Orientation)
    SetBound = _swig_new_instance_method(_StepShape.StepShape_FaceBound_SetBound)
    SetOrientation = _swig_new_instance_method(_StepShape.StepShape_FaceBound_SetOrientation)

    def __init__(self, *args):
        r"""
        * Returns a FaceBound
        	:rtype: None
        """
        _StepShape.StepShape_FaceBound_swiginit(self, _StepShape.new_StepShape_FaceBound(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FaceBound_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FaceBound

# Register StepShape_FaceBound in _StepShape:
_StepShape.StepShape_FaceBound_swigregister(StepShape_FaceBound)

class StepShape_FacetedBrepShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a FacetedBrepShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_FacetedBrepShapeRepresentation_swiginit(self, _StepShape.new_StepShape_FacetedBrepShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FacetedBrepShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FacetedBrepShapeRepresentation

# Register StepShape_FacetedBrepShapeRepresentation in _StepShape:
_StepShape.StepShape_FacetedBrepShapeRepresentation_swigregister(StepShape_FacetedBrepShapeRepresentation)

class StepShape_GeometricCurveSet(StepShape_GeometricSet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a GeometricCurveSet
        	:rtype: None
        """
        _StepShape.StepShape_GeometricCurveSet_swiginit(self, _StepShape.new_StepShape_GeometricCurveSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_GeometricCurveSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricCurveSet

# Register StepShape_GeometricCurveSet in _StepShape:
_StepShape.StepShape_GeometricCurveSet_swigregister(StepShape_GeometricCurveSet)

class StepShape_GeometricallyBoundedSurfaceShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a GeometricallyBoundedSurfaceShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_GeometricallyBoundedSurfaceShapeRepresentation_swiginit(self, _StepShape.new_StepShape_GeometricallyBoundedSurfaceShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_GeometricallyBoundedSurfaceShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricallyBoundedSurfaceShapeRepresentation

# Register StepShape_GeometricallyBoundedSurfaceShapeRepresentation in _StepShape:
_StepShape.StepShape_GeometricallyBoundedSurfaceShapeRepresentation_swigregister(StepShape_GeometricallyBoundedSurfaceShapeRepresentation)

class StepShape_GeometricallyBoundedWireframeShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a GeometricallyBoundedWireframeShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_GeometricallyBoundedWireframeShapeRepresentation_swiginit(self, _StepShape.new_StepShape_GeometricallyBoundedWireframeShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_GeometricallyBoundedWireframeShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_GeometricallyBoundedWireframeShapeRepresentation

# Register StepShape_GeometricallyBoundedWireframeShapeRepresentation in _StepShape:
_StepShape.StepShape_GeometricallyBoundedWireframeShapeRepresentation_swigregister(StepShape_GeometricallyBoundedWireframeShapeRepresentation)

class StepShape_Loop(StepShape_TopologicalRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a Loop
        	:rtype: None
        """
        _StepShape.StepShape_Loop_swiginit(self, _StepShape.new_StepShape_Loop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Loop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Loop

# Register StepShape_Loop in _StepShape:
_StepShape.StepShape_Loop_swigregister(StepShape_Loop)

class StepShape_LoopAndPath(StepShape_TopologicalRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EdgeList = _swig_new_instance_method(_StepShape.StepShape_LoopAndPath_EdgeList)
    EdgeListValue = _swig_new_instance_method(_StepShape.StepShape_LoopAndPath_EdgeListValue)
    Init = _swig_new_instance_method(_StepShape.StepShape_LoopAndPath_Init)
    Loop = _swig_new_instance_method(_StepShape.StepShape_LoopAndPath_Loop)
    NbEdgeList = _swig_new_instance_method(_StepShape.StepShape_LoopAndPath_NbEdgeList)
    Path = _swig_new_instance_method(_StepShape.StepShape_LoopAndPath_Path)
    SetEdgeList = _swig_new_instance_method(_StepShape.StepShape_LoopAndPath_SetEdgeList)
    SetLoop = _swig_new_instance_method(_StepShape.StepShape_LoopAndPath_SetLoop)
    SetPath = _swig_new_instance_method(_StepShape.StepShape_LoopAndPath_SetPath)

    def __init__(self, *args):
        r"""
        * Returns a LoopAndPath
        	:rtype: None
        """
        _StepShape.StepShape_LoopAndPath_swiginit(self, _StepShape.new_StepShape_LoopAndPath(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_LoopAndPath_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_LoopAndPath

# Register StepShape_LoopAndPath in _StepShape:
_StepShape.StepShape_LoopAndPath_swigregister(StepShape_LoopAndPath)

class StepShape_ManifoldSolidBrep(StepShape_SolidModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_ManifoldSolidBrep_Init)
    Outer = _swig_new_instance_method(_StepShape.StepShape_ManifoldSolidBrep_Outer)
    SetOuter = _swig_new_instance_method(_StepShape.StepShape_ManifoldSolidBrep_SetOuter)

    def __init__(self, *args):
        r"""
        * Returns a ManifoldSolidBrep
        	:rtype: None
        """
        _StepShape.StepShape_ManifoldSolidBrep_swiginit(self, _StepShape.new_StepShape_ManifoldSolidBrep(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ManifoldSolidBrep_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ManifoldSolidBrep

# Register StepShape_ManifoldSolidBrep in _StepShape:
_StepShape.StepShape_ManifoldSolidBrep_swigregister(StepShape_ManifoldSolidBrep)

class StepShape_ManifoldSurfaceShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a ManifoldSurfaceShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_ManifoldSurfaceShapeRepresentation_swiginit(self, _StepShape.new_StepShape_ManifoldSurfaceShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ManifoldSurfaceShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ManifoldSurfaceShapeRepresentation

# Register StepShape_ManifoldSurfaceShapeRepresentation in _StepShape:
_StepShape.StepShape_ManifoldSurfaceShapeRepresentation_swigregister(StepShape_ManifoldSurfaceShapeRepresentation)

class StepShape_NonManifoldSurfaceShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_NonManifoldSurfaceShapeRepresentation_swiginit(self, _StepShape.new_StepShape_NonManifoldSurfaceShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_NonManifoldSurfaceShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_NonManifoldSurfaceShapeRepresentation

# Register StepShape_NonManifoldSurfaceShapeRepresentation in _StepShape:
_StepShape.StepShape_NonManifoldSurfaceShapeRepresentation_swigregister(StepShape_NonManifoldSurfaceShapeRepresentation)

class StepShape_Path(StepShape_TopologicalRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EdgeList = _swig_new_instance_method(_StepShape.StepShape_Path_EdgeList)
    EdgeListValue = _swig_new_instance_method(_StepShape.StepShape_Path_EdgeListValue)
    Init = _swig_new_instance_method(_StepShape.StepShape_Path_Init)
    NbEdgeList = _swig_new_instance_method(_StepShape.StepShape_Path_NbEdgeList)
    SetEdgeList = _swig_new_instance_method(_StepShape.StepShape_Path_SetEdgeList)

    def __init__(self, *args):
        r"""
        * Returns a Path
        	:rtype: None
        """
        _StepShape.StepShape_Path_swiginit(self, _StepShape.new_StepShape_Path(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Path_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Path

# Register StepShape_Path in _StepShape:
_StepShape.StepShape_Path_swigregister(StepShape_Path)

class StepShape_PointRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_PointRepresentation_swiginit(self, _StepShape.new_StepShape_PointRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_PointRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_PointRepresentation

# Register StepShape_PointRepresentation in _StepShape:
_StepShape.StepShape_PointRepresentation_swigregister(StepShape_PointRepresentation)

class StepShape_ShapeDimensionRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_ShapeDimensionRepresentation_Init)
    ItemsAP242 = _swig_new_instance_method(_StepShape.StepShape_ShapeDimensionRepresentation_ItemsAP242)
    SetItemsAP242 = _swig_new_instance_method(_StepShape.StepShape_ShapeDimensionRepresentation_SetItemsAP242)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ShapeDimensionRepresentation_swiginit(self, _StepShape.new_StepShape_ShapeDimensionRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShapeDimensionRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeDimensionRepresentation

# Register StepShape_ShapeDimensionRepresentation in _StepShape:
_StepShape.StepShape_ShapeDimensionRepresentation_swigregister(StepShape_ShapeDimensionRepresentation)

class StepShape_ShapeRepresentationWithParameters(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ShapeRepresentationWithParameters_swiginit(self, _StepShape.new_StepShape_ShapeRepresentationWithParameters(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ShapeRepresentationWithParameters_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ShapeRepresentationWithParameters

# Register StepShape_ShapeRepresentationWithParameters in _StepShape:
_StepShape.StepShape_ShapeRepresentationWithParameters_swigregister(StepShape_ShapeRepresentationWithParameters)

class StepShape_SolidReplica(StepShape_SolidModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_SolidReplica_Init)
    ParentSolid = _swig_new_instance_method(_StepShape.StepShape_SolidReplica_ParentSolid)
    SetParentSolid = _swig_new_instance_method(_StepShape.StepShape_SolidReplica_SetParentSolid)
    SetTransformation = _swig_new_instance_method(_StepShape.StepShape_SolidReplica_SetTransformation)

    def __init__(self, *args):
        r"""
        * Returns a SolidReplica
        	:rtype: None
        """
        _StepShape.StepShape_SolidReplica_swiginit(self, _StepShape.new_StepShape_SolidReplica(*args))
    Transformation = _swig_new_instance_method(_StepShape.StepShape_SolidReplica_Transformation)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SolidReplica_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SolidReplica

# Register StepShape_SolidReplica in _StepShape:
_StepShape.StepShape_SolidReplica_swigregister(StepShape_SolidReplica)

class StepShape_SweptAreaSolid(StepShape_SolidModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_SweptAreaSolid_Init)
    SetSweptArea = _swig_new_instance_method(_StepShape.StepShape_SweptAreaSolid_SetSweptArea)

    def __init__(self, *args):
        r"""
        * Returns a SweptAreaSolid
        	:rtype: None
        """
        _StepShape.StepShape_SweptAreaSolid_swiginit(self, _StepShape.new_StepShape_SweptAreaSolid(*args))
    SweptArea = _swig_new_instance_method(_StepShape.StepShape_SweptAreaSolid_SweptArea)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SweptAreaSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SweptAreaSolid

# Register StepShape_SweptAreaSolid in _StepShape:
_StepShape.StepShape_SweptAreaSolid_swigregister(StepShape_SweptAreaSolid)

class StepShape_SweptFaceSolid(StepShape_SolidModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_SweptFaceSolid_Init)
    SetSweptFace = _swig_new_instance_method(_StepShape.StepShape_SweptFaceSolid_SetSweptFace)

    def __init__(self, *args):
        r"""
        * Returns a SweptFaceSolid
        	:rtype: None
        """
        _StepShape.StepShape_SweptFaceSolid_swiginit(self, _StepShape.new_StepShape_SweptFaceSolid(*args))
    SweptFace = _swig_new_instance_method(_StepShape.StepShape_SweptFaceSolid_SweptFace)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SweptFaceSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SweptFaceSolid

# Register StepShape_SweptFaceSolid in _StepShape:
_StepShape.StepShape_SweptFaceSolid_swigregister(StepShape_SweptFaceSolid)

class StepShape_TransitionalShapeRepresentation(StepShape_ShapeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a TransitionalShapeRepresentation
        	:rtype: None
        """
        _StepShape.StepShape_TransitionalShapeRepresentation_swiginit(self, _StepShape.new_StepShape_TransitionalShapeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_TransitionalShapeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_TransitionalShapeRepresentation

# Register StepShape_TransitionalShapeRepresentation in _StepShape:
_StepShape.StepShape_TransitionalShapeRepresentation_swigregister(StepShape_TransitionalShapeRepresentation)

class StepShape_Vertex(StepShape_TopologicalRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a Vertex
        	:rtype: None
        """
        _StepShape.StepShape_Vertex_swiginit(self, _StepShape.new_StepShape_Vertex(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Vertex_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Vertex

# Register StepShape_Vertex in _StepShape:
_StepShape.StepShape_Vertex_swigregister(StepShape_Vertex)

class StepShape_BrepWithVoids(StepShape_ManifoldSolidBrep):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_BrepWithVoids_Init)
    NbVoids = _swig_new_instance_method(_StepShape.StepShape_BrepWithVoids_NbVoids)
    SetVoids = _swig_new_instance_method(_StepShape.StepShape_BrepWithVoids_SetVoids)

    def __init__(self, *args):
        r"""
        * Returns a BrepWithVoids
        	:rtype: None
        """
        _StepShape.StepShape_BrepWithVoids_swiginit(self, _StepShape.new_StepShape_BrepWithVoids(*args))
    Voids = _swig_new_instance_method(_StepShape.StepShape_BrepWithVoids_Voids)
    VoidsValue = _swig_new_instance_method(_StepShape.StepShape_BrepWithVoids_VoidsValue)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_BrepWithVoids_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_BrepWithVoids

# Register StepShape_BrepWithVoids in _StepShape:
_StepShape.StepShape_BrepWithVoids_swigregister(StepShape_BrepWithVoids)

class StepShape_ClosedShell(StepShape_ConnectedFaceSet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a ClosedShell
        	:rtype: None
        """
        _StepShape.StepShape_ClosedShell_swiginit(self, _StepShape.new_StepShape_ClosedShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ClosedShell_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ClosedShell

# Register StepShape_ClosedShell in _StepShape:
_StepShape.StepShape_ClosedShell_swigregister(StepShape_ClosedShell)

class StepShape_ConnectedFaceSubSet(StepShape_ConnectedFaceSet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_ConnectedFaceSubSet_Init)
    ParentFaceSet = _swig_new_instance_method(_StepShape.StepShape_ConnectedFaceSubSet_ParentFaceSet)
    SetParentFaceSet = _swig_new_instance_method(_StepShape.StepShape_ConnectedFaceSubSet_SetParentFaceSet)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_ConnectedFaceSubSet_swiginit(self, _StepShape.new_StepShape_ConnectedFaceSubSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ConnectedFaceSubSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ConnectedFaceSubSet

# Register StepShape_ConnectedFaceSubSet in _StepShape:
_StepShape.StepShape_ConnectedFaceSubSet_swigregister(StepShape_ConnectedFaceSubSet)

class StepShape_EdgeCurve(StepShape_Edge):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EdgeGeometry = _swig_new_instance_method(_StepShape.StepShape_EdgeCurve_EdgeGeometry)
    Init = _swig_new_instance_method(_StepShape.StepShape_EdgeCurve_Init)
    SameSense = _swig_new_instance_method(_StepShape.StepShape_EdgeCurve_SameSense)
    SetEdgeGeometry = _swig_new_instance_method(_StepShape.StepShape_EdgeCurve_SetEdgeGeometry)
    SetSameSense = _swig_new_instance_method(_StepShape.StepShape_EdgeCurve_SetSameSense)

    def __init__(self, *args):
        r"""
        * Returns a EdgeCurve
        	:rtype: None
        """
        _StepShape.StepShape_EdgeCurve_swiginit(self, _StepShape.new_StepShape_EdgeCurve(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_EdgeCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_EdgeCurve

# Register StepShape_EdgeCurve in _StepShape:
_StepShape.StepShape_EdgeCurve_swigregister(StepShape_EdgeCurve)

class StepShape_EdgeLoop(StepShape_Loop):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EdgeList = _swig_new_instance_method(_StepShape.StepShape_EdgeLoop_EdgeList)
    EdgeListValue = _swig_new_instance_method(_StepShape.StepShape_EdgeLoop_EdgeListValue)
    Init = _swig_new_instance_method(_StepShape.StepShape_EdgeLoop_Init)
    NbEdgeList = _swig_new_instance_method(_StepShape.StepShape_EdgeLoop_NbEdgeList)
    SetEdgeList = _swig_new_instance_method(_StepShape.StepShape_EdgeLoop_SetEdgeList)

    def __init__(self, *args):
        r"""
        * Returns a EdgeLoop
        	:rtype: None
        """
        _StepShape.StepShape_EdgeLoop_swiginit(self, _StepShape.new_StepShape_EdgeLoop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_EdgeLoop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_EdgeLoop

# Register StepShape_EdgeLoop in _StepShape:
_StepShape.StepShape_EdgeLoop_swigregister(StepShape_EdgeLoop)

class StepShape_ExtrudedAreaSolid(StepShape_SweptAreaSolid):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Depth = _swig_new_instance_method(_StepShape.StepShape_ExtrudedAreaSolid_Depth)
    ExtrudedDirection = _swig_new_instance_method(_StepShape.StepShape_ExtrudedAreaSolid_ExtrudedDirection)
    Init = _swig_new_instance_method(_StepShape.StepShape_ExtrudedAreaSolid_Init)
    SetDepth = _swig_new_instance_method(_StepShape.StepShape_ExtrudedAreaSolid_SetDepth)
    SetExtrudedDirection = _swig_new_instance_method(_StepShape.StepShape_ExtrudedAreaSolid_SetExtrudedDirection)

    def __init__(self, *args):
        r"""
        * Returns a ExtrudedAreaSolid
        	:rtype: None
        """
        _StepShape.StepShape_ExtrudedAreaSolid_swiginit(self, _StepShape.new_StepShape_ExtrudedAreaSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ExtrudedAreaSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ExtrudedAreaSolid

# Register StepShape_ExtrudedAreaSolid in _StepShape:
_StepShape.StepShape_ExtrudedAreaSolid_swigregister(StepShape_ExtrudedAreaSolid)

class StepShape_ExtrudedFaceSolid(StepShape_SweptFaceSolid):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Depth = _swig_new_instance_method(_StepShape.StepShape_ExtrudedFaceSolid_Depth)
    ExtrudedDirection = _swig_new_instance_method(_StepShape.StepShape_ExtrudedFaceSolid_ExtrudedDirection)
    Init = _swig_new_instance_method(_StepShape.StepShape_ExtrudedFaceSolid_Init)
    SetDepth = _swig_new_instance_method(_StepShape.StepShape_ExtrudedFaceSolid_SetDepth)
    SetExtrudedDirection = _swig_new_instance_method(_StepShape.StepShape_ExtrudedFaceSolid_SetExtrudedDirection)

    def __init__(self, *args):
        r"""
        * Returns a ExtrudedFaceSolid
        	:rtype: None
        """
        _StepShape.StepShape_ExtrudedFaceSolid_swiginit(self, _StepShape.new_StepShape_ExtrudedFaceSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_ExtrudedFaceSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_ExtrudedFaceSolid

# Register StepShape_ExtrudedFaceSolid in _StepShape:
_StepShape.StepShape_ExtrudedFaceSolid_swigregister(StepShape_ExtrudedFaceSolid)

class StepShape_FaceOuterBound(StepShape_FaceBound):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a FaceOuterBound
        	:rtype: None
        """
        _StepShape.StepShape_FaceOuterBound_swiginit(self, _StepShape.new_StepShape_FaceOuterBound(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FaceOuterBound_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FaceOuterBound

# Register StepShape_FaceOuterBound in _StepShape:
_StepShape.StepShape_FaceOuterBound_swigregister(StepShape_FaceOuterBound)

class StepShape_FaceSurface(StepShape_Face):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FaceGeometry = _swig_new_instance_method(_StepShape.StepShape_FaceSurface_FaceGeometry)
    Init = _swig_new_instance_method(_StepShape.StepShape_FaceSurface_Init)
    SameSense = _swig_new_instance_method(_StepShape.StepShape_FaceSurface_SameSense)
    SetFaceGeometry = _swig_new_instance_method(_StepShape.StepShape_FaceSurface_SetFaceGeometry)
    SetSameSense = _swig_new_instance_method(_StepShape.StepShape_FaceSurface_SetSameSense)

    def __init__(self, *args):
        r"""
        * Returns a FaceSurface
        	:rtype: None
        """
        _StepShape.StepShape_FaceSurface_swiginit(self, _StepShape.new_StepShape_FaceSurface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FaceSurface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FaceSurface

# Register StepShape_FaceSurface in _StepShape:
_StepShape.StepShape_FaceSurface_swigregister(StepShape_FaceSurface)

class StepShape_FacetedBrep(StepShape_ManifoldSolidBrep):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a FacetedBrep
        	:rtype: None
        """
        _StepShape.StepShape_FacetedBrep_swiginit(self, _StepShape.new_StepShape_FacetedBrep(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FacetedBrep_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FacetedBrep

# Register StepShape_FacetedBrep in _StepShape:
_StepShape.StepShape_FacetedBrep_swigregister(StepShape_FacetedBrep)

class StepShape_FacetedBrepAndBrepWithVoids(StepShape_ManifoldSolidBrep):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrepWithVoids = _swig_new_instance_method(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_BrepWithVoids)
    FacetedBrep = _swig_new_instance_method(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_FacetedBrep)
    Init = _swig_new_instance_method(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_Init)
    NbVoids = _swig_new_instance_method(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_NbVoids)
    SetBrepWithVoids = _swig_new_instance_method(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_SetBrepWithVoids)
    SetFacetedBrep = _swig_new_instance_method(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_SetFacetedBrep)
    SetVoids = _swig_new_instance_method(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_SetVoids)

    def __init__(self, *args):
        r"""
        * Returns a FacetedBrepAndBrepWithVoids
        	:rtype: None
        """
        _StepShape.StepShape_FacetedBrepAndBrepWithVoids_swiginit(self, _StepShape.new_StepShape_FacetedBrepAndBrepWithVoids(*args))
    Voids = _swig_new_instance_method(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_Voids)
    VoidsValue = _swig_new_instance_method(_StepShape.StepShape_FacetedBrepAndBrepWithVoids_VoidsValue)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_FacetedBrepAndBrepWithVoids_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_FacetedBrepAndBrepWithVoids

# Register StepShape_FacetedBrepAndBrepWithVoids in _StepShape:
_StepShape.StepShape_FacetedBrepAndBrepWithVoids_swigregister(StepShape_FacetedBrepAndBrepWithVoids)

class StepShape_OpenShell(StepShape_ConnectedFaceSet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a OpenShell
        	:rtype: None
        """
        _StepShape.StepShape_OpenShell_swiginit(self, _StepShape.new_StepShape_OpenShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OpenShell_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OpenShell

# Register StepShape_OpenShell in _StepShape:
_StepShape.StepShape_OpenShell_swigregister(StepShape_OpenShell)

class StepShape_OrientedEdge(StepShape_Edge):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EdgeElement = _swig_new_instance_method(_StepShape.StepShape_OrientedEdge_EdgeElement)
    Init = _swig_new_instance_method(_StepShape.StepShape_OrientedEdge_Init)
    Orientation = _swig_new_instance_method(_StepShape.StepShape_OrientedEdge_Orientation)
    SetEdgeElement = _swig_new_instance_method(_StepShape.StepShape_OrientedEdge_SetEdgeElement)
    SetOrientation = _swig_new_instance_method(_StepShape.StepShape_OrientedEdge_SetOrientation)

    def __init__(self, *args):
        r"""
        * Returns a OrientedEdge
        	:rtype: None
        """
        _StepShape.StepShape_OrientedEdge_swiginit(self, _StepShape.new_StepShape_OrientedEdge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedEdge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedEdge

# Register StepShape_OrientedEdge in _StepShape:
_StepShape.StepShape_OrientedEdge_swigregister(StepShape_OrientedEdge)

class StepShape_OrientedFace(StepShape_Face):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FaceElement = _swig_new_instance_method(_StepShape.StepShape_OrientedFace_FaceElement)
    Init = _swig_new_instance_method(_StepShape.StepShape_OrientedFace_Init)
    Orientation = _swig_new_instance_method(_StepShape.StepShape_OrientedFace_Orientation)
    SetFaceElement = _swig_new_instance_method(_StepShape.StepShape_OrientedFace_SetFaceElement)
    SetOrientation = _swig_new_instance_method(_StepShape.StepShape_OrientedFace_SetOrientation)

    def __init__(self, *args):
        r"""
        * Returns a OrientedFace
        	:rtype: None
        """
        _StepShape.StepShape_OrientedFace_swiginit(self, _StepShape.new_StepShape_OrientedFace(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedFace_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedFace

# Register StepShape_OrientedFace in _StepShape:
_StepShape.StepShape_OrientedFace_swigregister(StepShape_OrientedFace)

class StepShape_OrientedPath(StepShape_Path):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_OrientedPath_Init)
    Orientation = _swig_new_instance_method(_StepShape.StepShape_OrientedPath_Orientation)
    PathElement = _swig_new_instance_method(_StepShape.StepShape_OrientedPath_PathElement)
    SetOrientation = _swig_new_instance_method(_StepShape.StepShape_OrientedPath_SetOrientation)
    SetPathElement = _swig_new_instance_method(_StepShape.StepShape_OrientedPath_SetPathElement)

    def __init__(self, *args):
        r"""
        * Returns a OrientedPath
        	:rtype: None
        """
        _StepShape.StepShape_OrientedPath_swiginit(self, _StepShape.new_StepShape_OrientedPath(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedPath_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedPath

# Register StepShape_OrientedPath in _StepShape:
_StepShape.StepShape_OrientedPath_swigregister(StepShape_OrientedPath)

class StepShape_PolyLoop(StepShape_Loop):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_PolyLoop_Init)
    NbPolygon = _swig_new_instance_method(_StepShape.StepShape_PolyLoop_NbPolygon)
    Polygon = _swig_new_instance_method(_StepShape.StepShape_PolyLoop_Polygon)
    PolygonValue = _swig_new_instance_method(_StepShape.StepShape_PolyLoop_PolygonValue)
    SetPolygon = _swig_new_instance_method(_StepShape.StepShape_PolyLoop_SetPolygon)

    def __init__(self, *args):
        r"""
        * Returns a PolyLoop
        	:rtype: None
        """
        _StepShape.StepShape_PolyLoop_swiginit(self, _StepShape.new_StepShape_PolyLoop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_PolyLoop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_PolyLoop

# Register StepShape_PolyLoop in _StepShape:
_StepShape.StepShape_PolyLoop_swigregister(StepShape_PolyLoop)

class StepShape_RevolvedAreaSolid(StepShape_SweptAreaSolid):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Angle = _swig_new_instance_method(_StepShape.StepShape_RevolvedAreaSolid_Angle)
    Axis = _swig_new_instance_method(_StepShape.StepShape_RevolvedAreaSolid_Axis)
    Init = _swig_new_instance_method(_StepShape.StepShape_RevolvedAreaSolid_Init)
    SetAngle = _swig_new_instance_method(_StepShape.StepShape_RevolvedAreaSolid_SetAngle)
    SetAxis = _swig_new_instance_method(_StepShape.StepShape_RevolvedAreaSolid_SetAxis)

    def __init__(self, *args):
        r"""
        * Returns a RevolvedAreaSolid
        	:rtype: None
        """
        _StepShape.StepShape_RevolvedAreaSolid_swiginit(self, _StepShape.new_StepShape_RevolvedAreaSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RevolvedAreaSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RevolvedAreaSolid

# Register StepShape_RevolvedAreaSolid in _StepShape:
_StepShape.StepShape_RevolvedAreaSolid_swigregister(StepShape_RevolvedAreaSolid)

class StepShape_RevolvedFaceSolid(StepShape_SweptFaceSolid):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Angle = _swig_new_instance_method(_StepShape.StepShape_RevolvedFaceSolid_Angle)
    Axis = _swig_new_instance_method(_StepShape.StepShape_RevolvedFaceSolid_Axis)
    Init = _swig_new_instance_method(_StepShape.StepShape_RevolvedFaceSolid_Init)
    SetAngle = _swig_new_instance_method(_StepShape.StepShape_RevolvedFaceSolid_SetAngle)
    SetAxis = _swig_new_instance_method(_StepShape.StepShape_RevolvedFaceSolid_SetAxis)

    def __init__(self, *args):
        r"""
        * Returns a RevolvedFaceSolid
        	:rtype: None
        """
        _StepShape.StepShape_RevolvedFaceSolid_swiginit(self, _StepShape.new_StepShape_RevolvedFaceSolid(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_RevolvedFaceSolid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_RevolvedFaceSolid

# Register StepShape_RevolvedFaceSolid in _StepShape:
_StepShape.StepShape_RevolvedFaceSolid_swigregister(StepShape_RevolvedFaceSolid)

class StepShape_Subedge(StepShape_Edge):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_Subedge_Init)
    ParentEdge = _swig_new_instance_method(_StepShape.StepShape_Subedge_ParentEdge)
    SetParentEdge = _swig_new_instance_method(_StepShape.StepShape_Subedge_SetParentEdge)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_Subedge_swiginit(self, _StepShape.new_StepShape_Subedge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Subedge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Subedge

# Register StepShape_Subedge in _StepShape:
_StepShape.StepShape_Subedge_swigregister(StepShape_Subedge)

class StepShape_Subface(StepShape_Face):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_Subface_Init)
    ParentFace = _swig_new_instance_method(_StepShape.StepShape_Subface_ParentFace)
    SetParentFace = _swig_new_instance_method(_StepShape.StepShape_Subface_SetParentFace)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_Subface_swiginit(self, _StepShape.new_StepShape_Subface(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_Subface_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_Subface

# Register StepShape_Subface in _StepShape:
_StepShape.StepShape_Subface_swigregister(StepShape_Subface)

class StepShape_VertexLoop(StepShape_Loop):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_VertexLoop_Init)
    LoopVertex = _swig_new_instance_method(_StepShape.StepShape_VertexLoop_LoopVertex)
    SetLoopVertex = _swig_new_instance_method(_StepShape.StepShape_VertexLoop_SetLoopVertex)

    def __init__(self, *args):
        r"""
        * Returns a VertexLoop
        	:rtype: None
        """
        _StepShape.StepShape_VertexLoop_swiginit(self, _StepShape.new_StepShape_VertexLoop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_VertexLoop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_VertexLoop

# Register StepShape_VertexLoop in _StepShape:
_StepShape.StepShape_VertexLoop_swigregister(StepShape_VertexLoop)

class StepShape_VertexPoint(StepShape_Vertex):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_VertexPoint_Init)
    SetVertexGeometry = _swig_new_instance_method(_StepShape.StepShape_VertexPoint_SetVertexGeometry)

    def __init__(self, *args):
        r"""
        * Returns a VertexPoint
        	:rtype: None
        """
        _StepShape.StepShape_VertexPoint_swiginit(self, _StepShape.new_StepShape_VertexPoint(*args))
    VertexGeometry = _swig_new_instance_method(_StepShape.StepShape_VertexPoint_VertexGeometry)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_VertexPoint_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_VertexPoint

# Register StepShape_VertexPoint in _StepShape:
_StepShape.StepShape_VertexPoint_swigregister(StepShape_VertexPoint)

class StepShape_AdvancedFace(StepShape_FaceSurface):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a AdvancedFace
        	:rtype: None
        """
        _StepShape.StepShape_AdvancedFace_swiginit(self, _StepShape.new_StepShape_AdvancedFace(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_AdvancedFace_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_AdvancedFace

# Register StepShape_AdvancedFace in _StepShape:
_StepShape.StepShape_AdvancedFace_swigregister(StepShape_AdvancedFace)

class StepShape_OrientedClosedShell(StepShape_ClosedShell):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ClosedShellElement = _swig_new_instance_method(_StepShape.StepShape_OrientedClosedShell_ClosedShellElement)
    Init = _swig_new_instance_method(_StepShape.StepShape_OrientedClosedShell_Init)
    Orientation = _swig_new_instance_method(_StepShape.StepShape_OrientedClosedShell_Orientation)
    SetClosedShellElement = _swig_new_instance_method(_StepShape.StepShape_OrientedClosedShell_SetClosedShellElement)
    SetOrientation = _swig_new_instance_method(_StepShape.StepShape_OrientedClosedShell_SetOrientation)

    def __init__(self, *args):
        r"""
        * Returns a OrientedClosedShell
        	:rtype: None
        """
        _StepShape.StepShape_OrientedClosedShell_swiginit(self, _StepShape.new_StepShape_OrientedClosedShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedClosedShell_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedClosedShell

# Register StepShape_OrientedClosedShell in _StepShape:
_StepShape.StepShape_OrientedClosedShell_swigregister(StepShape_OrientedClosedShell)

class StepShape_OrientedOpenShell(StepShape_OpenShell):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_OrientedOpenShell_Init)
    OpenShellElement = _swig_new_instance_method(_StepShape.StepShape_OrientedOpenShell_OpenShellElement)
    Orientation = _swig_new_instance_method(_StepShape.StepShape_OrientedOpenShell_Orientation)
    SetOpenShellElement = _swig_new_instance_method(_StepShape.StepShape_OrientedOpenShell_SetOpenShellElement)
    SetOrientation = _swig_new_instance_method(_StepShape.StepShape_OrientedOpenShell_SetOrientation)

    def __init__(self, *args):
        r"""
        * Returns a OrientedOpenShell
        	:rtype: None
        """
        _StepShape.StepShape_OrientedOpenShell_swiginit(self, _StepShape.new_StepShape_OrientedOpenShell(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_OrientedOpenShell_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_OrientedOpenShell

# Register StepShape_OrientedOpenShell in _StepShape:
_StepShape.StepShape_OrientedOpenShell_swigregister(StepShape_OrientedOpenShell)

class StepShape_SeamEdge(StepShape_OrientedEdge):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepShape.StepShape_SeamEdge_Init)
    PcurveReference = _swig_new_instance_method(_StepShape.StepShape_SeamEdge_PcurveReference)
    SetPcurveReference = _swig_new_instance_method(_StepShape.StepShape_SeamEdge_SetPcurveReference)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepShape.StepShape_SeamEdge_swiginit(self, _StepShape.new_StepShape_SeamEdge(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_SeamEdge_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepShape.delete_StepShape_SeamEdge

# Register StepShape_SeamEdge in _StepShape:
_StepShape.StepShape_SeamEdge_swigregister(StepShape_SeamEdge)

class StepShape_HArray1OfConnectedEdgeSet(StepShape_Array1OfConnectedEdgeSet, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfConnectedEdgeSet_swiginit(self, _StepShape.new_StepShape_HArray1OfConnectedEdgeSet(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfConnectedEdgeSet_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfConnectedEdgeSet_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfConnectedEdgeSet_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfConnectedEdgeSet

# Register StepShape_HArray1OfConnectedEdgeSet in _StepShape:
_StepShape.StepShape_HArray1OfConnectedEdgeSet_swigregister(StepShape_HArray1OfConnectedEdgeSet)

class StepShape_HArray1OfFaceBound(StepShape_Array1OfFaceBound, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfFaceBound_swiginit(self, _StepShape.new_StepShape_HArray1OfFaceBound(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfFaceBound_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfFaceBound_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfFaceBound_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfFaceBound

# Register StepShape_HArray1OfFaceBound in _StepShape:
_StepShape.StepShape_HArray1OfFaceBound_swigregister(StepShape_HArray1OfFaceBound)

class StepShape_HArray1OfGeometricSetSelect(StepShape_Array1OfGeometricSetSelect, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfGeometricSetSelect_swiginit(self, _StepShape.new_StepShape_HArray1OfGeometricSetSelect(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfGeometricSetSelect_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfGeometricSetSelect_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfGeometricSetSelect_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfGeometricSetSelect

# Register StepShape_HArray1OfGeometricSetSelect in _StepShape:
_StepShape.StepShape_HArray1OfGeometricSetSelect_swigregister(StepShape_HArray1OfGeometricSetSelect)

class StepShape_HArray1OfConnectedFaceSet(StepShape_Array1OfConnectedFaceSet, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfConnectedFaceSet_swiginit(self, _StepShape.new_StepShape_HArray1OfConnectedFaceSet(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfConnectedFaceSet_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfConnectedFaceSet_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfConnectedFaceSet_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfConnectedFaceSet

# Register StepShape_HArray1OfConnectedFaceSet in _StepShape:
_StepShape.StepShape_HArray1OfConnectedFaceSet_swigregister(StepShape_HArray1OfConnectedFaceSet)

class StepShape_HArray1OfEdge(StepShape_Array1OfEdge, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfEdge_swiginit(self, _StepShape.new_StepShape_HArray1OfEdge(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfEdge_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfEdge_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfEdge_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfEdge

# Register StepShape_HArray1OfEdge in _StepShape:
_StepShape.StepShape_HArray1OfEdge_swigregister(StepShape_HArray1OfEdge)

class StepShape_HArray1OfFace(StepShape_Array1OfFace, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfFace_swiginit(self, _StepShape.new_StepShape_HArray1OfFace(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfFace_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfFace_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfFace_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfFace

# Register StepShape_HArray1OfFace in _StepShape:
_StepShape.StepShape_HArray1OfFace_swigregister(StepShape_HArray1OfFace)

class StepShape_HArray1OfShapeDimensionRepresentationItem(StepShape_Array1OfShapeDimensionRepresentationItem, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfShapeDimensionRepresentationItem_swiginit(self, _StepShape.new_StepShape_HArray1OfShapeDimensionRepresentationItem(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfShapeDimensionRepresentationItem_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfShapeDimensionRepresentationItem_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfShapeDimensionRepresentationItem_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfShapeDimensionRepresentationItem

# Register StepShape_HArray1OfShapeDimensionRepresentationItem in _StepShape:
_StepShape.StepShape_HArray1OfShapeDimensionRepresentationItem_swigregister(StepShape_HArray1OfShapeDimensionRepresentationItem)

class StepShape_HArray1OfValueQualifier(StepShape_Array1OfValueQualifier, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfValueQualifier_swiginit(self, _StepShape.new_StepShape_HArray1OfValueQualifier(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfValueQualifier_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfValueQualifier_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfValueQualifier_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfValueQualifier

# Register StepShape_HArray1OfValueQualifier in _StepShape:
_StepShape.StepShape_HArray1OfValueQualifier_swigregister(StepShape_HArray1OfValueQualifier)

class StepShape_HArray1OfShell(StepShape_Array1OfShell, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfShell_swiginit(self, _StepShape.new_StepShape_HArray1OfShell(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfShell_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfShell_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfShell_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfShell

# Register StepShape_HArray1OfShell in _StepShape:
_StepShape.StepShape_HArray1OfShell_swigregister(StepShape_HArray1OfShell)

class StepShape_HArray1OfOrientedClosedShell(StepShape_Array1OfOrientedClosedShell, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfOrientedClosedShell_swiginit(self, _StepShape.new_StepShape_HArray1OfOrientedClosedShell(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfOrientedClosedShell_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfOrientedClosedShell_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfOrientedClosedShell_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfOrientedClosedShell

# Register StepShape_HArray1OfOrientedClosedShell in _StepShape:
_StepShape.StepShape_HArray1OfOrientedClosedShell_swigregister(StepShape_HArray1OfOrientedClosedShell)

class StepShape_HArray1OfOrientedEdge(StepShape_Array1OfOrientedEdge, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepShape.StepShape_HArray1OfOrientedEdge_swiginit(self, _StepShape.new_StepShape_HArray1OfOrientedEdge(*args))
    Array1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfOrientedEdge_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepShape.StepShape_HArray1OfOrientedEdge_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepShape_HArray1OfOrientedEdge_DownCast(t)

    __swig_destroy__ = _StepShape.delete_StepShape_HArray1OfOrientedEdge

# Register StepShape_HArray1OfOrientedEdge in _StepShape:
_StepShape.StepShape_HArray1OfOrientedEdge_swigregister(StepShape_HArray1OfOrientedEdge)



