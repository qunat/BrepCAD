# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
BRepFilletAPI module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_brepfilletapi.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _BRepFilletAPI
else:
    import _BRepFilletAPI

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _BRepFilletAPI.SWIG_PyInstanceMethod_New
_swig_new_static_method = _BRepFilletAPI.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _BRepFilletAPI.delete_SwigPyIterator
    value = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator_value)
    incr = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator_copy)
    next = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_BRepFilletAPI.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _BRepFilletAPI:
_BRepFilletAPI.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.BRepBuilderAPI
import OCC.Core.Geom
import OCC.Core.gp
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.TopTools
import OCC.Core.BRepTools
import OCC.Core.Bnd
import OCC.Core.BVH
import OCC.Core.Geom2d
import OCC.Core.BRep
import OCC.Core.Poly
import OCC.Core.TShort
import OCC.Core.ChFiDS
import OCC.Core.Adaptor3d
import OCC.Core.Adaptor2d
import OCC.Core.math
import OCC.Core.BRepAdaptor
import OCC.Core.GeomAdaptor
import OCC.Core.Geom2dAdaptor
import OCC.Core.Law
import OCC.Core.ChFi2d
import OCC.Core.TopOpeBRepBuild
import OCC.Core.TopOpeBRepDS
import OCC.Core.TopOpeBRepTool
import OCC.Core.BRepClass3d
import OCC.Core.IntCurveSurface
import OCC.Core.Intf
import OCC.Core.IntSurf
import OCC.Core.IntCurvesFace
import OCC.Core.TopExp
import OCC.Core.Extrema
import OCC.Core.ChFi3d
import OCC.Core.BRepBlend
import OCC.Core.BlendFunc
import OCC.Core.Convert
import OCC.Core.Blend
import OCC.Core.Approx
import OCC.Core.AppCont
import OCC.Core.AppParCurves
import OCC.Core.AppBlend
import OCC.Core.GeomFill
import OCC.Core.TColGeom
class BRepFilletAPI_LocalOperation(OCC.Core.BRepBuilderAPI.BRepBuilderAPI_MakeShape):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Abscissa = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Abscissa)
    Add = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Add)
    Closed = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Closed)
    ClosedAndTangent = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_ClosedAndTangent)
    Contour = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Contour)
    Edge = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Edge)
    FirstVertex = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_FirstVertex)
    LastVertex = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_LastVertex)
    Length = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Length)
    NbContours = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_NbContours)
    NbEdges = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_NbEdges)
    NbSurf = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_NbSurf)
    RelativeAbscissa = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_RelativeAbscissa)
    Remove = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Remove)
    Reset = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Reset)
    ResetContour = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_ResetContour)
    Sect = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Sect)
    Simulate = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_LocalOperation_Simulate)

    __repr__ = _dumps_object

    __swig_destroy__ = _BRepFilletAPI.delete_BRepFilletAPI_LocalOperation

# Register BRepFilletAPI_LocalOperation in _BRepFilletAPI:
_BRepFilletAPI.BRepFilletAPI_LocalOperation_swigregister(BRepFilletAPI_LocalOperation)

class BRepFilletAPI_MakeFillet2d(OCC.Core.BRepBuilderAPI.BRepBuilderAPI_MakeShape):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddChamfer = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_AddChamfer)
    AddFillet = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_AddFillet)

    def __init__(self, *args):
        r"""
        * Initializes an empty algorithm for computing fillets and chamfers. The face on which the fillets and chamfers are built is defined using the Init function. The vertices on which fillets or chamfers are built are defined using the AddFillet or AddChamfer function. Warning The status of the initialization, as given by the Status function, can be one of the following: - ChFi2d_Ready if the initialization is correct, - ChFi2d_NotPlanar if F is not planar, - ChFi2d_NoFace if F is a null face.
        	:rtype: None* Initializes an algorithm for computing fillets and chamfers on the face F. The vertices on which fillets or chamfers are built are defined using the AddFillet or AddChamfer function. Warning The status of the initialization, as given by the Status function, can be one of the following: - ChFi2d_Ready if the initialization is correct, - ChFi2d_NotPlanar if F is not planar, - ChFi2d_NoFace if F is a null face.
        	:param F:
        	:type F: TopoDS_Face
        	:rtype: None
        """
        _BRepFilletAPI.BRepFilletAPI_MakeFillet2d_swiginit(self, _BRepFilletAPI.new_BRepFilletAPI_MakeFillet2d(*args))
    BasisEdge = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_BasisEdge)
    ChamferEdges = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_ChamferEdges)
    DescendantEdge = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_DescendantEdge)
    FilletEdges = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_FilletEdges)
    HasDescendant = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_HasDescendant)
    Init = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_Init)
    IsModified = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_IsModified)
    ModifyChamfer = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_ModifyChamfer)
    ModifyFillet = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_ModifyFillet)
    NbChamfer = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_NbChamfer)
    NbCurves = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_NbCurves)
    NbFillet = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_NbFillet)
    NewEdges = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_NewEdges)
    RemoveChamfer = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_RemoveChamfer)
    RemoveFillet = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_RemoveFillet)
    Status = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_Status)

    __repr__ = _dumps_object

    __swig_destroy__ = _BRepFilletAPI.delete_BRepFilletAPI_MakeFillet2d

# Register BRepFilletAPI_MakeFillet2d in _BRepFilletAPI:
_BRepFilletAPI.BRepFilletAPI_MakeFillet2d_swigregister(BRepFilletAPI_MakeFillet2d)

class BRepFilletAPI_MakeChamfer(BRepFilletAPI_LocalOperation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Add = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_Add)
    AddDA = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_AddDA)

    def __init__(self, *args):
        r"""
        * Initializes an algorithm for computing chamfers on the shape S. The edges on which chamfers are built are defined using the Add function.
        	:param S:
        	:type S: TopoDS_Shape
        	:rtype: None
        """
        _BRepFilletAPI.BRepFilletAPI_MakeChamfer_swiginit(self, _BRepFilletAPI.new_BRepFilletAPI_MakeChamfer(*args))
    Builder = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_Builder)
    Dists = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_Dists)
    GetDist = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_GetDist)
    GetDistAngle = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_GetDistAngle)
    IsDistanceAngle = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_IsDistanceAngle)
    IsSymetric = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_IsSymetric)
    IsTwoDistances = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_IsTwoDistances)
    SetDist = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_SetDist)
    SetDistAngle = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_SetDistAngle)
    SetDists = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_SetDists)
    SetMode = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeChamfer_SetMode)

    __repr__ = _dumps_object

    __swig_destroy__ = _BRepFilletAPI.delete_BRepFilletAPI_MakeChamfer

# Register BRepFilletAPI_MakeChamfer in _BRepFilletAPI:
_BRepFilletAPI.BRepFilletAPI_MakeChamfer_swigregister(BRepFilletAPI_MakeChamfer)

class BRepFilletAPI_MakeFillet(BRepFilletAPI_LocalOperation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Add = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_Add)

    def __init__(self, *args):
        r"""
        * Initializes the computation of the fillets. <FShape> sets the type of fillet surface. The default value is ChFi3d_Rational (classical nurbs representation of circles). ChFi3d_QuasiAngular corresponds to a nurbs representation of circles which parameterisation matches the circle one. ChFi3d_Polynomial corresponds to a polynomial representation of circles.
        	:param S:
        	:type S: TopoDS_Shape
        	:param FShape: default value is ChFi3d_Rational
        	:type FShape: ChFi3d_FilletShape
        	:rtype: None
        """
        _BRepFilletAPI.BRepFilletAPI_MakeFillet_swiginit(self, _BRepFilletAPI.new_BRepFilletAPI_MakeFillet(*args))
    BadShape = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_BadShape)
    Builder = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_Builder)
    ComputedSurface = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_ComputedSurface)
    FaultyContour = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_FaultyContour)
    FaultyVertex = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_FaultyVertex)
    GetBounds = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_GetBounds)
    GetFilletShape = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_GetFilletShape)
    GetLaw = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_GetLaw)
    HasResult = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_HasResult)
    IsConstant = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_IsConstant)
    NbComputedSurfaces = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_NbComputedSurfaces)
    NbFaultyContours = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_NbFaultyContours)
    NbFaultyVertices = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_NbFaultyVertices)
    NbSurfaces = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_NbSurfaces)
    NewFaces = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_NewFaces)
    Radius = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_Radius)
    SetContinuity = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_SetContinuity)
    SetFilletShape = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_SetFilletShape)
    SetLaw = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_SetLaw)
    SetParams = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_SetParams)
    SetRadius = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_SetRadius)
    StripeStatus = _swig_new_instance_method(_BRepFilletAPI.BRepFilletAPI_MakeFillet_StripeStatus)

    __repr__ = _dumps_object

    __swig_destroy__ = _BRepFilletAPI.delete_BRepFilletAPI_MakeFillet

# Register BRepFilletAPI_MakeFillet in _BRepFilletAPI:
_BRepFilletAPI.BRepFilletAPI_MakeFillet_swigregister(BRepFilletAPI_MakeFillet)



