# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TopOpeBRepBuild module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_topopebrepbuild.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _TopOpeBRepBuild
else:
    import _TopOpeBRepBuild

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _TopOpeBRepBuild.SWIG_PyInstanceMethod_New
_swig_new_static_method = _TopOpeBRepBuild.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TopOpeBRepBuild.delete_SwigPyIterator
    value = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator_value)
    incr = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator_copy)
    next = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_TopOpeBRepBuild.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _TopOpeBRepBuild:
_TopOpeBRepBuild.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.TopOpeBRepDS
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TopOpeBRepTool
import OCC.Core.TopTools
import OCC.Core.BRepClass3d
import OCC.Core.IntCurveSurface
import OCC.Core.math
import OCC.Core.Adaptor3d
import OCC.Core.Adaptor2d
import OCC.Core.Geom2d
import OCC.Core.Intf
import OCC.Core.Bnd
import OCC.Core.BVH
import OCC.Core.IntSurf
import OCC.Core.IntCurvesFace
import OCC.Core.BRepAdaptor
import OCC.Core.GeomAdaptor
import OCC.Core.Geom2dAdaptor
import OCC.Core.TopExp
import OCC.Core.Extrema
TopOpeBRepBuild_ANYLOOP = _TopOpeBRepBuild.TopOpeBRepBuild_ANYLOOP
TopOpeBRepBuild_BOUNDARY = _TopOpeBRepBuild.TopOpeBRepBuild_BOUNDARY
TopOpeBRepBuild_BLOCK = _TopOpeBRepBuild.TopOpeBRepBuild_BLOCK
Handle_TopOpeBRepBuild_HBuilder_Create = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_Create
Handle_TopOpeBRepBuild_HBuilder_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_DownCast
Handle_TopOpeBRepBuild_HBuilder_IsNull = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_HBuilder_IsNull
Handle_TopOpeBRepBuild_Loop_Create = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_Create
Handle_TopOpeBRepBuild_Loop_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_DownCast
Handle_TopOpeBRepBuild_Loop_IsNull = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Loop_IsNull
Handle_TopOpeBRepBuild_Pave_Create = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_Create
Handle_TopOpeBRepBuild_Pave_DownCast = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_DownCast
Handle_TopOpeBRepBuild_Pave_IsNull = _TopOpeBRepBuild.Handle_TopOpeBRepBuild_Pave_IsNull
class TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_begin)
    end = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_end)
    cbegin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_cend)

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape(*args))
    Exchange = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Exchange)
    Assign = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Assign)
    Set = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Set)
    ReSize = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ReSize)
    Bind = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Bind)
    Bound = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Bound)
    IsBound = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_IsBound)
    UnBind = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_UnBind)
    Seek = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Seek)
    Find = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Find)
    ChangeSeek = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_ChangeFind)
    __call__ = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape___call__)
    Clear = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Clear)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape
    Size = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_Size)

# Register TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape_swigregister(TopOpeBRepBuild_DataMapOfShapeListOfShapeListOfShape)

class TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_begin)
    end = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_end)
    cbegin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_cend)

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo(*args))
    Exchange = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Exchange)
    Assign = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Assign)
    Set = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Set)
    ReSize = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ReSize)
    Add = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Add)
    Contains = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Contains)
    Substitute = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Substitute)
    Swap = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Swap)
    RemoveLast = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_RemoveLast)
    RemoveFromIndex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_RemoveFromIndex)
    RemoveKey = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_RemoveKey)
    FindKey = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindKey)
    FindFromIndex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromIndex)
    ChangeFromIndex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromIndex)
    __call__ = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo___call__)
    FindIndex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindIndex)
    ChangeFromKey = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeFromKey)
    Seek = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Seek)
    ChangeSeek = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_ChangeSeek)
    FindFromKey = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_FindFromKey)
    Clear = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Clear)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo
    Size = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_Size)

# Register TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo_swigregister(TopOpeBRepBuild_IndexedDataMapOfShapeVertexInfo)

class TopOpeBRepBuild_ListOfPave(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_begin)
    end = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_end)
    cbegin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_cend)

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfPave(*args))
    Size = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Size)
    Assign = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Assign)
    Set = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Set)
    Clear = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Clear)
    First = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_First)
    Last = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Last)
    Append = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Append)
    Prepend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Prepend)
    RemoveFirst = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_RemoveFirst)
    Remove = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Remove)
    InsertBefore = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_InsertAfter)
    Reverse = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_Reverse)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListOfPave

# Register TopOpeBRepBuild_ListOfPave in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ListOfPave_swigregister(TopOpeBRepBuild_ListOfPave)

class TopOpeBRepBuild_ListIteratorOfListOfPave(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfPave(*args))
    More = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_More)
    Next = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Next)
    Value = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_Value)
    ChangeValue = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_ChangeValue)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListIteratorOfListOfPave

# Register TopOpeBRepBuild_ListIteratorOfListOfPave in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfPave_swigregister(TopOpeBRepBuild_ListIteratorOfListOfPave)

class TopOpeBRepBuild_ListOfShapeListOfShape(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_begin)
    end = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_end)
    cbegin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_cend)

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfShapeListOfShape(*args))
    Size = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Size)
    Assign = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Assign)
    Set = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Set)
    Clear = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Clear)
    First = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_First)
    Last = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Last)
    Append = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Append)
    Prepend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Prepend)
    RemoveFirst = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_RemoveFirst)
    Remove = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Remove)
    InsertBefore = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_InsertAfter)
    Reverse = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_Reverse)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListOfShapeListOfShape

# Register TopOpeBRepBuild_ListOfShapeListOfShape in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ListOfShapeListOfShape_swigregister(TopOpeBRepBuild_ListOfShapeListOfShape)

class TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape(*args))
    More = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_More)
    Next = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Next)
    Value = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_Value)
    ChangeValue = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_ChangeValue)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape

# Register TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape_swigregister(TopOpeBRepBuild_ListIteratorOfListOfShapeListOfShape)

class TopOpeBRepBuild_ListOfLoop(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_begin)
    end = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_end)
    cbegin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_cend)

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfLoop(*args))
    Size = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Size)
    Assign = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Assign)
    Set = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Set)
    Clear = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Clear)
    First = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_First)
    Last = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Last)
    Append = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Append)
    Prepend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Prepend)
    RemoveFirst = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_RemoveFirst)
    Remove = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Remove)
    InsertBefore = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_InsertAfter)
    Reverse = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_Reverse)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListOfLoop

# Register TopOpeBRepBuild_ListOfLoop in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ListOfLoop_swigregister(TopOpeBRepBuild_ListOfLoop)

class TopOpeBRepBuild_ListIteratorOfListOfLoop(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfLoop(*args))
    More = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_More)
    Next = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Next)
    Value = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_Value)
    ChangeValue = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_ChangeValue)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListIteratorOfListOfLoop

# Register TopOpeBRepBuild_ListIteratorOfListOfLoop in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfLoop_swigregister(TopOpeBRepBuild_ListIteratorOfListOfLoop)

class TopOpeBRepBuild_ListOfListOfLoop(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_begin)
    end = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_end)
    cbegin = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_cbegin)
    cend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_cend)

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListOfListOfLoop(*args))
    Size = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Size)
    Assign = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Assign)
    Set = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Set)
    Clear = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Clear)
    First = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_First)
    Last = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Last)
    Append = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Append)
    Prepend = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Prepend)
    RemoveFirst = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_RemoveFirst)
    Remove = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Remove)
    InsertBefore = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_InsertAfter)
    Reverse = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_Reverse)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListOfListOfLoop

# Register TopOpeBRepBuild_ListOfListOfLoop in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ListOfListOfLoop_swigregister(TopOpeBRepBuild_ListOfListOfLoop)

class TopOpeBRepBuild_ListIteratorOfListOfListOfLoop(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ListIteratorOfListOfListOfLoop(*args))
    More = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_More)
    Next = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Next)
    Value = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_Value)
    ChangeValue = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_ChangeValue)
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ListIteratorOfListOfListOfLoop

# Register TopOpeBRepBuild_ListIteratorOfListOfListOfLoop in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ListIteratorOfListOfListOfLoop_swigregister(TopOpeBRepBuild_ListIteratorOfListOfListOfLoop)

class TopOpeBRepBuild_AreaBuilder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ADD_LISTOFLoop_TO_LISTOFLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_LISTOFLoop_TO_LISTOFLoop)
    ADD_Loop_TO_LISTOFLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_ADD_Loop_TO_LISTOFLoop)
    InitArea = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitArea)
    InitAreaBuilder = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitAreaBuilder)
    InitLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_InitLoop)
    Loop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_Loop)
    MoreArea = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreArea)
    MoreLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_MoreLoop)
    NextArea = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextArea)
    NextLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_NextLoop)
    REM_Loop_FROM_LISTOFLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_REM_Loop_FROM_LISTOFLoop)

    def __init__(self, *args):
        r"""
        :rtype: None* Creates a AreaBuilder to build the areas on the shapes described by <LS> using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_AreaBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_AreaBuilder

# Register TopOpeBRepBuild_AreaBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_AreaBuilder_swigregister(TopOpeBRepBuild_AreaBuilder)

class TopOpeBRepBuild_BlockBuilder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddElement = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_AddElement)
    BlockIterator = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_BlockIterator)
    CurrentBlockIsRegular = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_CurrentBlockIsRegular)
    Element = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_Element)
    ElementIsValid = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_ElementIsValid)
    InitBlock = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_InitBlock)
    MakeBlock = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MakeBlock)
    MoreBlock = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_MoreBlock)
    NextBlock = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_NextBlock)
    SetValid = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_SetValid)

    def __init__(self, *args):
        r"""
        :rtype: None:param SS:
        	:type SS: TopOpeBRepBuild_ShapeSet
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_BlockBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_BlockBuilder

# Register TopOpeBRepBuild_BlockBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_BlockBuilder_swigregister(TopOpeBRepBuild_BlockBuilder)

class TopOpeBRepBuild_BlockIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Extent = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Extent)
    Initialize = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Initialize)
    More = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_More)
    Next = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Next)

    def __init__(self, *args):
        r"""
        :rtype: None:param Lower:
        	:type Lower: int
        	:param Upper:
        	:type Upper: int
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_BlockIterator(*args))
    Value = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_Value)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_BlockIterator

# Register TopOpeBRepBuild_BlockIterator in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_BlockIterator_swigregister(TopOpeBRepBuild_BlockIterator)

class TopOpeBRepBuild_Builder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddONPatchesSFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_AddONPatchesSFS)
    BuildEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_BuildEdges)
    BuildTool = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_BuildTool)
    BuildVertices = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_BuildVertices)
    ChangeBuildTool = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeBuildTool)
    ChangeClassify = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeClassify)
    ChangeMSplit = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeMSplit)
    ChangeSplit = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ChangeSplit)
    Classify = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Classify)
    Clear = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Clear)
    ClearMaps = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ClearMaps)
    Contains = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Contains)
    DataStructure = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_DataStructure)
    End = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_End)
    FillOnPatches = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FillOnPatches)
    FillSecEdgeAncestorMap = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FillSecEdgeAncestorMap)
    FindFacesTouchingEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindFacesTouchingEdge)
    FindIsKPart = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindIsKPart)
    FindSameDomain = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindSameDomain)
    FindSameDomainSameOrientation = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindSameDomainSameOrientation)
    FindSameRank = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_FindSameRank)
    GClearMaps = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GClearMaps)
    GContains = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GContains)
    GCopyList = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GCopyList)
    GEDBUMakeEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GEDBUMakeEdges)
    GFABUMakeFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFABUMakeFaces)
    GFillCurveTopologyWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillCurveTopologyWES)
    GFillEdgePVS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillEdgePVS)
    GFillEdgeWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillEdgeWES)
    GFillEdgesPVS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillEdgesPVS)
    GFillFaceSFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFaceSFS)
    GFillFaceWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFaceWES)
    GFillFacesWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFacesWES)
    GFillFacesWESK = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFacesWESK)
    GFillFacesWESMakeFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillFacesWESMakeFaces)
    GFillONPartsWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillONPartsWES)
    GFillPointTopologyPVS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillPointTopologyPVS)
    GFillShellSFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillShellSFS)
    GFillSolidSFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillSolidSFS)
    GFillSolidsSFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillSolidsSFS)
    GFillSurfaceTopologySFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillSurfaceTopologySFS)
    GFillWireWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFillWireWES)
    GFindSamDom = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFindSamDom)
    GFindSamDomSODO = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFindSamDomSODO)
    GFindSameRank = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GFindSameRank)
    GIsShapeOf = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GIsShapeOf)
    GKeepShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GKeepShape)
    GKeepShape1 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GKeepShape1)
    GKeepShapes = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GKeepShapes)
    GMapShapes = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMapShapes)
    GMergeEdgeWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeEdgeWES)
    GMergeEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeEdges)
    GMergeFaceSFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeFaceSFS)
    GMergeFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeFaces)
    GMergeSolids = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GMergeSolids)
    GPVSMakeEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GPVSMakeEdges)
    GParamOnReference = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GParamOnReference)
    GSFSMakeSolids = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSFSMakeSolids)
    GSOBUMakeSolids = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSOBUMakeSolids)
    GShapeRank = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GShapeRank)
    GSplitEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitEdge)
    GSplitEdgeWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitEdgeWES)
    GSplitFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitFace)
    GSplitFaceSFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GSplitFaceSFS)
    GTakeCommonOfDiff = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GTakeCommonOfDiff)
    GTakeCommonOfSame = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GTakeCommonOfSame)
    GToMerge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GToMerge)
    GToSplit = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GToSplit)
    GWESMakeFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GWESMakeFaces)
    GcheckNBOUNDS = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GcheckNBOUNDS)
    GdumpEDBU = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEDBU)
    GdumpEDG = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEDG)
    GdumpEDGVER = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEDGVER)
    GdumpEXP = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpEXP)
    GdumpFABU = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpFABU)
    GdumpLS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpLS)
    GdumpORIPARPNT = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpORIPARPNT)
    GdumpPNT = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpPNT)
    GdumpSAMDOM = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSAMDOM)
    GdumpSHA = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHA)
    GdumpSHAORI = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHAORI)
    GdumpSHAORIGEO = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHAORIGEO)
    GdumpSHASETindex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHASETindex)
    GdumpSHASETreset = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHASETreset)
    GdumpSHASTA = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSHASTA)
    GdumpSOBU = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpSOBU)
    GtraceSPS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_GtraceSPS)
    InitSection = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_InitSection)
    IsKPart = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsKPart)
    IsMerged = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsMerged)
    IsShapeOf = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsShapeOf)
    IsSplit = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_IsSplit)
    KPClearMaps = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPClearMaps)
    KPContains = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPContains)
    KPSameDomain = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPSameDomain)
    KPclasSS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPclasSS)
    KPclassF = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPclassF)
    KPclassFF = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPclassFF)
    KPisdisj = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisdisj)
    KPisdisjanalyse = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisdisjanalyse)
    KPisdisjsh = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisdisjsh)
    KPisfafa = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisfafa)
    KPisfafash = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPisfafash)
    KPiskole = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskole)
    KPiskoleFF = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoleFF)
    KPiskoleanalyse = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoleanalyse)
    KPiskolesh = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskolesh)
    KPiskoletge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoletge)
    KPiskoletgeanalyse = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoletgeanalyse)
    KPiskoletgesh = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPiskoletgesh)
    KPissoso = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPissoso)
    KPissososh = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPissososh)
    KPlhg = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPlhg)
    KPlhsd = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPlhsd)
    KPls = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPls)
    KPmakeface = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPmakeface)
    KPreturn = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPreturn)
    KeepShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_KeepShape)
    MSplit = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MSplit)
    MakeEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeEdges)
    MakeFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeFaces)
    MakeShells = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeShells)
    MakeSolids = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MakeSolids)
    MapShapes = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MapShapes)
    MergeEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeEdges)
    MergeFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeFaces)
    MergeKPart = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPart)
    MergeKPartisdisj = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartisdisj)
    MergeKPartisfafa = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartisfafa)
    MergeKPartiskole = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartiskole)
    MergeKPartiskoletge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartiskoletge)
    MergeKPartissoso = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeKPartissoso)
    MergeShapes = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeShapes)
    MergeSolid = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeSolid)
    MergeSolids = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_MergeSolids)
    Merged = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Merged)
    NewEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_NewEdges)
    NewFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_NewFaces)
    NewVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_NewVertex)
    Opec12 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opec12)
    Opec21 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opec21)
    Opecom = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opecom)
    Opefus = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Opefus)
    Orient = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Orient)
    Perform = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Perform)
    PrintCur = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintCur)
    PrintGeo = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintGeo)
    PrintOri = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintOri)
    PrintPnt = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintPnt)
    PrintSur = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintSur)
    RegularizeFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeFace)
    RegularizeFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeFaces)
    RegularizeSolid = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeSolid)
    RegularizeSolids = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_RegularizeSolids)
    Reverse = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Reverse)
    Section = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Section)
    SectionCurves = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SectionCurves)
    SectionEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SectionEdges)
    ShapePosition = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ShapePosition)
    ShapeRank = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_ShapeRank)
    SplitEvisoONperiodicF = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SplitEvisoONperiodicF)
    SplitSectionEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SplitSectionEdge)
    SplitSectionEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_SplitSectionEdges)
    Splits = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_Splits)
    StringState = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_StringState)

    def __init__(self, *args):
        r"""
        :param BT:
        	:type BT: TopOpeBRepDS_BuildTool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Builder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Builder(*args))
    TopType = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder_TopType)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Builder

# Register TopOpeBRepBuild_Builder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_Builder_swigregister(TopOpeBRepBuild_Builder)
TopOpeBRepBuild_Builder_Contains = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Contains
TopOpeBRepBuild_Builder_GContains = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GContains
TopOpeBRepBuild_Builder_GCopyList = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GCopyList
TopOpeBRepBuild_Builder_GTakeCommonOfDiff = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GTakeCommonOfDiff
TopOpeBRepBuild_Builder_GTakeCommonOfSame = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GTakeCommonOfSame
TopOpeBRepBuild_Builder_GcheckNBOUNDS = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GcheckNBOUNDS
TopOpeBRepBuild_Builder_GdumpORIPARPNT = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpORIPARPNT
TopOpeBRepBuild_Builder_GdumpPNT = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_GdumpPNT
TopOpeBRepBuild_Builder_KPContains = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPContains
TopOpeBRepBuild_Builder_KPls = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPls
TopOpeBRepBuild_Builder_KPreturn = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_KPreturn
TopOpeBRepBuild_Builder_Orient = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Orient
TopOpeBRepBuild_Builder_PrintCur = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintCur
TopOpeBRepBuild_Builder_PrintGeo = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintGeo
TopOpeBRepBuild_Builder_PrintOri = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintOri
TopOpeBRepBuild_Builder_PrintPnt = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintPnt
TopOpeBRepBuild_Builder_PrintSur = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_PrintSur
TopOpeBRepBuild_Builder_Reverse = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_Reverse
TopOpeBRepBuild_Builder_StringState = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_StringState
TopOpeBRepBuild_Builder_TopType = _TopOpeBRepBuild.TopOpeBRepBuild_Builder_TopType

class TopOpeBRepBuild_BuilderON(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GFillONCheckI = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONCheckI)
    GFillONParts2dWES2 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONParts2dWES2)
    GFillONPartsWES1 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES1)
    GFillONPartsWES2 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_GFillONPartsWES2)
    Perform = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform)
    Perform2d = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_Perform2d)

    def __init__(self, *args):
        r"""
        :rtype: None:param PB:
        	:type PB: TopOpeBRepBuild_PBuilder
        	:param F:
        	:type F: TopoDS_Shape
        	:param PG:
        	:type PG: TopOpeBRepBuild_PGTopo
        	:param PLSclass:
        	:type PLSclass: TopOpeBRepTool_Plos
        	:param PWES:
        	:type PWES: TopOpeBRepBuild_PWireEdgeSet
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_BuilderON(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_BuilderON

# Register TopOpeBRepBuild_BuilderON in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_BuilderON_swigregister(TopOpeBRepBuild_BuilderON)

class TopOpeBRepBuild_CorrectFace2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CheckList = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CheckList)
    CorrectedFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CorrectedFace)
    ErrorStatus = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_ErrorStatus)
    Face = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Face)
    GetP2dFL = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_GetP2dFL)
    IsDone = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_IsDone)
    MapOfTrans2dInfo = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_MapOfTrans2dInfo)
    Perform = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_Perform)
    SetMapOfTrans2dInfo = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_SetMapOfTrans2dInfo)

    def __init__(self, *args):
        r"""
        :rtype: None:param aFace:
        	:type aFace: TopoDS_Face
        	:param anAvoidMap:
        	:type anAvoidMap: TopTools_IndexedMapOfOrientedShape
        	:param aMap:
        	:type aMap: TopTools_IndexedDataMapOfShapeShape
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_CorrectFace2d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_CorrectFace2d

# Register TopOpeBRepBuild_CorrectFace2d in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_swigregister(TopOpeBRepBuild_CorrectFace2d)
TopOpeBRepBuild_CorrectFace2d_CheckList = _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_CheckList
TopOpeBRepBuild_CorrectFace2d_GetP2dFL = _TopOpeBRepBuild.TopOpeBRepBuild_CorrectFace2d_GetP2dFL

class TopOpeBRepBuild_FaceBuilder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddEdgeWire = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_AddEdgeWire)
    CorrectGclosedWire = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_CorrectGclosedWire)
    DetectPseudoInternalEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectPseudoInternalEdge)
    DetectUnclosedWire = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_DetectUnclosedWire)
    Edge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Edge)
    EdgeConnexity = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_EdgeConnexity)
    Face = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_Face)
    FindNextValidElement = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_FindNextValidElement)
    InitEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitEdge)
    InitFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFace)
    InitFaceBuilder = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitFaceBuilder)
    InitWire = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_InitWire)
    IsOldWire = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_IsOldWire)
    MoreEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreEdge)
    MoreFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreFace)
    MoreWire = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_MoreWire)
    NextEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextEdge)
    NextFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextFace)
    NextWire = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_NextWire)
    OldWire = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_OldWire)

    def __init__(self, *args):
        r"""
        :rtype: None* Create a FaceBuilder to build the faces on the shapes (wires, blocks of edge) described by <LS>.
        	:param ES:
        	:type ES: TopOpeBRepBuild_WireEdgeSet
        	:param F:
        	:type F: TopoDS_Shape
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_FaceBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_FaceBuilder

# Register TopOpeBRepBuild_FaceBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_FaceBuilder_swigregister(TopOpeBRepBuild_FaceBuilder)

class TopOpeBRepBuild_FuseFace(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ClearEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearEdge)
    ClearVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_ClearVertex)
    Init = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_Init)
    IsDone = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsDone)
    IsModified = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_IsModified)
    LExternEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternEdge)
    LExternVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LExternVertex)
    LFuseFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LFuseFace)
    LInternEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternEdge)
    LInternVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LInternVertex)
    LModifEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifEdge)
    LModifVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_LModifVertex)
    PerformEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformEdge)
    PerformFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_PerformFace)

    def __init__(self, *args):
        r"""
        :rtype: None:param LIF:
        	:type LIF: TopTools_ListOfShape
        	:param LRF:
        	:type LRF: TopTools_ListOfShape
        	:param CXM:
        	:type CXM: int
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_FuseFace(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_FuseFace

# Register TopOpeBRepBuild_FuseFace in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_FuseFace_swigregister(TopOpeBRepBuild_FuseFace)

class TopOpeBRepBuild_GIter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Current = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_Current)
    DumpToString = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_DumpToString)
    Init = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_Init)
    More = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_More)
    Next = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GIter_Next)

    def __init__(self, *args):
        r"""
        :rtype: None:param G:
        	:type G: TopOpeBRepBuild_GTopo
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_GIter_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_GIter(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_GIter

# Register TopOpeBRepBuild_GIter in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_GIter_swigregister(TopOpeBRepBuild_GIter)

class TopOpeBRepBuild_GTool(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_DumpToString)
    GComDiff = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComDiff)
    GComSame = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComSame)
    GComUnsh = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComUnsh)
    GCutDiff = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutDiff)
    GCutSame = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutSame)
    GCutUnsh = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutUnsh)
    GFusDiff = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusDiff)
    GFusSame = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusSame)
    GFusUnsh = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusUnsh)

    __repr__ = _dumps_object


    def __init__(self):
        r"""__init__(TopOpeBRepBuild_GTool self) -> TopOpeBRepBuild_GTool"""
        _TopOpeBRepBuild.TopOpeBRepBuild_GTool_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_GTool())
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_GTool

# Register TopOpeBRepBuild_GTool in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_GTool_swigregister(TopOpeBRepBuild_GTool)
TopOpeBRepBuild_GTool_GComDiff = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComDiff
TopOpeBRepBuild_GTool_GComSame = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComSame
TopOpeBRepBuild_GTool_GComUnsh = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GComUnsh
TopOpeBRepBuild_GTool_GCutDiff = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutDiff
TopOpeBRepBuild_GTool_GCutSame = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutSame
TopOpeBRepBuild_GTool_GCutUnsh = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GCutUnsh
TopOpeBRepBuild_GTool_GFusDiff = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusDiff
TopOpeBRepBuild_GTool_GFusSame = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusSame
TopOpeBRepBuild_GTool_GFusUnsh = _TopOpeBRepBuild.TopOpeBRepBuild_GTool_GFusUnsh

class TopOpeBRepBuild_GTopo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeConfig = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeConfig)
    ChangeType = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeType)
    ChangeValue = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_ChangeValue)
    Config1 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config1)
    Config2 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Config2)
    CopyPermuted = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_CopyPermuted)
    Dump = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Dump)
    DumpSSB = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpSSB)
    DumpTypeToString = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpTypeToString)
    DumpVal = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpVal)
    GIndex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GIndex)
    GState = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_GState)
    Index = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Index)
    IsToReverse1 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse1)
    IsToReverse2 = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_IsToReverse2)
    Reset = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reset)
    Reverse = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Reverse)
    Set = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Set)
    SetReverse = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_SetReverse)
    StatesON = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_StatesON)

    def __init__(self, *args):
        r"""
        :rtype: None:param II:
        	:type II: bool
        	:param IN:
        	:type IN: bool
        	:param IO:
        	:type IO: bool
        	:param NI:
        	:type NI: bool
        	:param NN:
        	:type NN: bool
        	:param NO:
        	:type NO: bool
        	:param OI:
        	:type OI: bool
        	:param ON:
        	:type ON: bool
        	:param OO:
        	:type OO: bool
        	:param t1:
        	:type t1: TopAbs_ShapeEnum
        	:param t2:
        	:type t2: TopAbs_ShapeEnum
        	:param C1:
        	:type C1: TopOpeBRepDS_Config
        	:param C2:
        	:type C2: TopOpeBRepDS_Config
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_GTopo(*args))
    Type = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Type)
    Value = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_Value)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_GTopo

# Register TopOpeBRepBuild_GTopo in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_GTopo_swigregister(TopOpeBRepBuild_GTopo)
TopOpeBRepBuild_GTopo_DumpSSB = _TopOpeBRepBuild.TopOpeBRepBuild_GTopo_DumpSSB

class TopOpeBRepBuild_HBuilder(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BuildTool = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_BuildTool)
    ChangeBuildTool = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuildTool)
    ChangeBuilder = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeBuilder)
    ChangeNewEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_ChangeNewEdges)
    Clear = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Clear)
    CurrentSection = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_CurrentSection)
    DataStructure = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_DataStructure)
    EdgeCurveAncestors = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeCurveAncestors)
    EdgeSectionAncestors = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_EdgeSectionAncestors)
    GetDSCurveFromSectEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSCurveFromSectEdge)
    GetDSEdgeFromSectEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSEdgeFromSectEdge)
    GetDSFaceFromDSCurve = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSCurve)
    GetDSFaceFromDSEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSFaceFromDSEdge)
    GetDSPointFromNewVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_GetDSPointFromNewVertex)
    InitExtendedSectionDS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitExtendedSectionDS)
    InitSection = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_InitSection)
    IsKPart = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsKPart)
    IsMerged = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsMerged)
    IsSplit = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_IsSplit)
    MergeKPart = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeKPart)
    MergeShapes = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeShapes)
    MergeSolid = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolid)
    MergeSolids = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MergeSolids)
    Merged = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Merged)
    MoreSection = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_MoreSection)
    NewEdges = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewEdges)
    NewFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewFaces)
    NewVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NewVertex)
    NextSection = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_NextSection)
    Perform = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Perform)
    Section = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Section)
    Splits = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_Splits)

    def __init__(self, *args):
        r"""
        :param BT:
        	:type BT: TopOpeBRepDS_BuildTool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_HBuilder(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepBuild_HBuilder_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_HBuilder

# Register TopOpeBRepBuild_HBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_HBuilder_swigregister(TopOpeBRepBuild_HBuilder)

class TopOpeBRepBuild_Loop(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BlockIterator = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_BlockIterator)
    Dump = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_Dump)
    IsShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_IsShape)
    Shape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Loop_Shape)

    def __init__(self, *args):
        r"""
        :param S:
        	:type S: TopoDS_Shape
        	:rtype: None:param BI:
        	:type BI: TopOpeBRepBuild_BlockIterator
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Loop_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Loop(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepBuild_Loop_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Loop

# Register TopOpeBRepBuild_Loop in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_Loop_swigregister(TopOpeBRepBuild_Loop)

class TopOpeBRepBuild_LoopClassifier(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Compare = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_Compare)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_LoopClassifier

# Register TopOpeBRepBuild_LoopClassifier in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_LoopClassifier_swigregister(TopOpeBRepBuild_LoopClassifier)

class TopOpeBRepBuild_LoopSet(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeListOfLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_ChangeListOfLoop)
    InitLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_InitLoop)
    Loop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_Loop)
    MoreLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_MoreLoop)
    NextLoop = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_NextLoop)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_LoopSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_LoopSet

# Register TopOpeBRepBuild_LoopSet in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_LoopSet_swigregister(TopOpeBRepBuild_LoopSet)

class TopOpeBRepBuild_ShapeListOfShape(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeList = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeList)
    ChangeShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_ChangeShape)
    List = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_List)
    Shape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_Shape)

    def __init__(self, *args):
        r"""
        :rtype: None:param S:
        	:type S: TopoDS_Shape
        	:rtype: None:param S:
        	:type S: TopoDS_Shape
        	:param L:
        	:type L: TopTools_ListOfShape
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShapeListOfShape(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShapeListOfShape

# Register TopOpeBRepBuild_ShapeListOfShape in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ShapeListOfShape_swigregister(TopOpeBRepBuild_ShapeListOfShape)

class TopOpeBRepBuild_ShapeSet(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddElement = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddElement)
    AddShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddShape)
    AddStartElement = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_AddStartElement)
    ChangeStartShapes = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_ChangeStartShapes)
    CheckShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_CheckShape)
    DEBName = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBName)
    DEBNumber = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DEBNumber)
    DumpBB = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpBB)
    DumpCheck = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpCheck)
    DumpName = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpName)
    DumpSS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_DumpSS)
    FindNeighbours = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_FindNeighbours)
    InitNeighbours = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitNeighbours)
    InitShapes = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitShapes)
    InitStartElements = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_InitStartElements)
    MakeNeighboursList = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MakeNeighboursList)
    MaxNumberSubShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MaxNumberSubShape)
    MoreNeighbours = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreNeighbours)
    MoreShapes = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreShapes)
    MoreStartElements = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_MoreStartElements)
    Neighbour = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Neighbour)
    NextNeighbour = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextNeighbour)
    NextShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextShape)
    NextStartElement = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_NextStartElement)
    SName = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SName)
    SNameori = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_SNameori)
    Shape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_Shape)
    StartElement = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElement)
    StartElements = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_StartElements)

    def __init__(self, *args):
        r"""
        * Creates a ShapeSet in order to build shapes connected by <SubShapeType> shapes. <checkshape>:check (or not) the shapes, startelements, elements added.
        	:param SubShapeType:
        	:type SubShapeType: TopAbs_ShapeEnum
        	:param checkshape: default value is Standard_True
        	:type checkshape: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShapeSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShapeSet

# Register TopOpeBRepBuild_ShapeSet in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ShapeSet_swigregister(TopOpeBRepBuild_ShapeSet)

class TopOpeBRepBuild_ShellToSolid(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddShell = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_AddShell)
    Init = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_Init)
    MakeSolids = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_MakeSolids)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShellToSolid(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShellToSolid

# Register TopOpeBRepBuild_ShellToSolid in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ShellToSolid_swigregister(TopOpeBRepBuild_ShellToSolid)

class TopOpeBRepBuild_SolidBuilder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Face = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_Face)
    InitFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitFace)
    InitShell = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitShell)
    InitSolid = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolid)
    InitSolidBuilder = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_InitSolidBuilder)
    IsOldShell = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_IsOldShell)
    MoreFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreFace)
    MoreShell = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreShell)
    MoreSolid = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_MoreSolid)
    NextFace = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextFace)
    NextShell = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextShell)
    NextSolid = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_NextSolid)
    OldShell = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_OldShell)

    def __init__(self, *args):
        r"""
        :rtype: None* Create a SolidBuilder to build the areas on the shapes (shells, blocks of faces) described by <LS>.
        	:param FS:
        	:type FS: TopOpeBRepBuild_ShellFaceSet
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_SolidBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_SolidBuilder

# Register TopOpeBRepBuild_SolidBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_SolidBuilder_swigregister(TopOpeBRepBuild_SolidBuilder)

class TopOpeBRepBuild_Tools(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CheckFaceClosed2d = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_CheckFaceClosed2d)
    CorrectCurveOnSurface = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectCurveOnSurface)
    CorrectFace2d = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectFace2d)
    CorrectPointOnCurve = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectPointOnCurve)
    CorrectTolerances = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectTolerances)
    FindState = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState)
    FindState1 = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState1)
    FindState2 = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState2)
    FindStateThroughVertex = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindStateThroughVertex)
    GetAdjacentFace = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetAdjacentFace)
    GetNormalInNearestPoint = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalInNearestPoint)
    GetNormalToFaceOnEdge = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalToFaceOnEdge)
    GetTangentToEdge = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdge)
    GetTangentToEdgeEdge = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdgeEdge)
    IsDegEdgesTheSame = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_IsDegEdgesTheSame)
    NormalizeFace = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_NormalizeFace)
    PropagateState = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateState)
    PropagateStateForWires = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateStateForWires)
    SpreadStateToChild = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_SpreadStateToChild)
    UpdateEdgeOnFace = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnFace)
    UpdateEdgeOnPeriodicalFace = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnPeriodicalFace)
    UpdatePCurves = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdatePCurves)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRepBuild.TopOpeBRepBuild_Tools_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Tools())
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Tools

# Register TopOpeBRepBuild_Tools in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_Tools_swigregister(TopOpeBRepBuild_Tools)
TopOpeBRepBuild_Tools_CheckFaceClosed2d = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CheckFaceClosed2d
TopOpeBRepBuild_Tools_CorrectCurveOnSurface = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectCurveOnSurface
TopOpeBRepBuild_Tools_CorrectFace2d = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectFace2d
TopOpeBRepBuild_Tools_CorrectPointOnCurve = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectPointOnCurve
TopOpeBRepBuild_Tools_CorrectTolerances = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_CorrectTolerances
TopOpeBRepBuild_Tools_FindState = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState
TopOpeBRepBuild_Tools_FindState1 = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState1
TopOpeBRepBuild_Tools_FindState2 = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindState2
TopOpeBRepBuild_Tools_FindStateThroughVertex = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_FindStateThroughVertex
TopOpeBRepBuild_Tools_GetAdjacentFace = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetAdjacentFace
TopOpeBRepBuild_Tools_GetNormalInNearestPoint = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalInNearestPoint
TopOpeBRepBuild_Tools_GetNormalToFaceOnEdge = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetNormalToFaceOnEdge
TopOpeBRepBuild_Tools_GetTangentToEdge = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdge
TopOpeBRepBuild_Tools_GetTangentToEdgeEdge = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_GetTangentToEdgeEdge
TopOpeBRepBuild_Tools_IsDegEdgesTheSame = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_IsDegEdgesTheSame
TopOpeBRepBuild_Tools_NormalizeFace = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_NormalizeFace
TopOpeBRepBuild_Tools_PropagateState = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateState
TopOpeBRepBuild_Tools_PropagateStateForWires = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_PropagateStateForWires
TopOpeBRepBuild_Tools_SpreadStateToChild = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_SpreadStateToChild
TopOpeBRepBuild_Tools_UpdateEdgeOnFace = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnFace
TopOpeBRepBuild_Tools_UpdateEdgeOnPeriodicalFace = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdateEdgeOnPeriodicalFace
TopOpeBRepBuild_Tools_UpdatePCurves = _TopOpeBRepBuild.TopOpeBRepBuild_Tools_UpdatePCurves

class TopOpeBRepBuild_Tools2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpMapOfShapeVertexInfo = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_DumpMapOfShapeVertexInfo)
    MakeMapOfShapeVertexInfo = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_MakeMapOfShapeVertexInfo)
    Path = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_Path)

    __repr__ = _dumps_object


    def __init__(self):
        _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Tools2d())
    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Tools2d

# Register TopOpeBRepBuild_Tools2d in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_swigregister(TopOpeBRepBuild_Tools2d)
TopOpeBRepBuild_Tools2d_DumpMapOfShapeVertexInfo = _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_DumpMapOfShapeVertexInfo
TopOpeBRepBuild_Tools2d_MakeMapOfShapeVertexInfo = _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_MakeMapOfShapeVertexInfo
TopOpeBRepBuild_Tools2d_Path = _TopOpeBRepBuild.TopOpeBRepBuild_Tools2d_Path

class TopOpeBRepBuild_VertexInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddIn = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddIn)
    AddOut = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AddOut)
    AppendPassed = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_AppendPassed)
    ChangeEdgesOut = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ChangeEdgesOut)
    CurrentOut = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_CurrentOut)
    Dump = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Dump)
    EdgesIn = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesIn)
    EdgesOut = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_EdgesOut)
    FoundOut = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_FoundOut)
    ListPassed = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_ListPassed)
    NbCases = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_NbCases)
    Prepare = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Prepare)
    RemovePassed = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_RemovePassed)
    SetCurrentIn = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetCurrentIn)
    SetSmart = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetSmart)
    SetVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_SetVertex)
    Smart = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Smart)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_VertexInfo(*args))
    Vertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_Vertex)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_VertexInfo

# Register TopOpeBRepBuild_VertexInfo in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_VertexInfo_swigregister(TopOpeBRepBuild_VertexInfo)

class TopOpeBRepBuild_WireToFace(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddWire = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_AddWire)
    Init = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_Init)
    MakeFaces = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_MakeFaces)

    def __init__(self, *args):
        r""":rtype: None"""
        _TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_WireToFace(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_WireToFace

# Register TopOpeBRepBuild_WireToFace in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_WireToFace_swigregister(TopOpeBRepBuild_WireToFace)

class TopOpeBRepBuild_Area1dBuilder(TopOpeBRepBuild_AreaBuilder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpList = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_DumpList)

    def __init__(self, *args):
        r"""
        :rtype: None* Creates a Area1dBuilder to find the areas of the shapes described by <LS> using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_PaveSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_PaveClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Area1dBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Area1dBuilder

# Register TopOpeBRepBuild_Area1dBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_swigregister(TopOpeBRepBuild_Area1dBuilder)
TopOpeBRepBuild_Area1dBuilder_DumpList = _TopOpeBRepBuild.TopOpeBRepBuild_Area1dBuilder_DumpList

class TopOpeBRepBuild_Area2dBuilder(TopOpeBRepBuild_AreaBuilder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :rtype: None* Creates a Area2dBuilder to build faces on the (wires,blocks of edge) of <LS>, using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Area2dBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Area2dBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Area2dBuilder

# Register TopOpeBRepBuild_Area2dBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_Area2dBuilder_swigregister(TopOpeBRepBuild_Area2dBuilder)

class TopOpeBRepBuild_Area3dBuilder(TopOpeBRepBuild_AreaBuilder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :rtype: None* Creates a Area3dBuilder to build Solids on the (shells,blocks of face) of <LS>, using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Area3dBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Area3dBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Area3dBuilder

# Register TopOpeBRepBuild_Area3dBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_Area3dBuilder_swigregister(TopOpeBRepBuild_Area3dBuilder)

class TopOpeBRepBuild_Builder1(TopOpeBRepBuild_Builder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CorrectResult2d = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_CorrectResult2d)
    GFillEdgeNotSameDomWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeNotSameDomWES)
    GFillEdgeSameDomWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillEdgeSameDomWES)
    GFillFaceNotSameDomSFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomSFS)
    GFillFaceNotSameDomWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceNotSameDomWES)
    GFillFaceSameDomSFS = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomSFS)
    GFillFaceSameDomWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillFaceSameDomWES)
    GFillWireNotSameDomWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireNotSameDomWES)
    GFillWireSameDomWES = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_GFillWireSameDomWES)
    MergeKPart = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_MergeKPart)
    Perform = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_Perform)
    PerformONParts = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformONParts)
    PerformPieceIn2D = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceIn2D)
    PerformPieceOn2D = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_PerformPieceOn2D)

    def __init__(self, *args):
        r"""
        :param BT:
        	:type BT: TopOpeBRepDS_BuildTool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Builder1_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Builder1(*args))
    TwoPiecesON = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_TwoPiecesON)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Builder1

# Register TopOpeBRepBuild_Builder1 in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_Builder1_swigregister(TopOpeBRepBuild_Builder1)

class TopOpeBRepBuild_CompositeClassifier(TopOpeBRepBuild_LoopClassifier):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    CompareElement = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElement)
    CompareElementToShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareElementToShape)
    CompareShapes = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_CompareShapes)
    ResetElement = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetElement)
    ResetShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_ResetShape)
    State = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_State)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_CompositeClassifier

# Register TopOpeBRepBuild_CompositeClassifier in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_CompositeClassifier_swigregister(TopOpeBRepBuild_CompositeClassifier)

class TopOpeBRepBuild_Pave(TopOpeBRepBuild_Loop):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_ChangeVertex)
    HasSameDomain = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_HasSameDomain)
    InterferenceType = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_InterferenceType)
    Parameter = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_Parameter)
    SameDomain = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_SameDomain)

    def __init__(self, *args):
        r"""
        * V = vertex, P = parameter of vertex <V> bound = True if <V> is an old vertex bound = False if <V> is a new vertex
        	:param V:
        	:type V: TopoDS_Shape
        	:param P:
        	:type P: float
        	:param bound:
        	:type bound: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_Pave_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_Pave(*args))
    Vertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_Pave_Vertex)


    @staticmethod
    def DownCast(t):
      return Handle_TopOpeBRepBuild_Pave_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_Pave

# Register TopOpeBRepBuild_Pave in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_Pave_swigregister(TopOpeBRepBuild_Pave)

class TopOpeBRepBuild_PaveClassifier(TopOpeBRepBuild_LoopClassifier):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AdjustCase = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_AdjustCase)
    ClosedVertices = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_ClosedVertices)
    SetFirstParameter = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_SetFirstParameter)

    def __init__(self, *args):
        r"""
        * Create a Pave classifier to compare vertices on edge <E>.
        	:param E:
        	:type E: TopoDS_Shape
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_PaveClassifier(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_PaveClassifier

# Register TopOpeBRepBuild_PaveClassifier in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_swigregister(TopOpeBRepBuild_PaveClassifier)
TopOpeBRepBuild_PaveClassifier_AdjustCase = _TopOpeBRepBuild.TopOpeBRepBuild_PaveClassifier_AdjustCase

class TopOpeBRepBuild_PaveSet(TopOpeBRepBuild_LoopSet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Append = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Append)
    ClosedVertices = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_ClosedVertices)
    Edge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_Edge)
    EqualParameters = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_EqualParameters)
    HasEqualParameters = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_HasEqualParameters)
    RemovePV = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_RemovePV)
    SortPave = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_SortPave)

    def __init__(self, *args):
        r"""
        * Create a Pave set on edge <E>. It contains <E> vertices.
        	:param E:
        	:type E: TopoDS_Shape
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_PaveSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_PaveSet

# Register TopOpeBRepBuild_PaveSet in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_swigregister(TopOpeBRepBuild_PaveSet)
TopOpeBRepBuild_PaveSet_SortPave = _TopOpeBRepBuild.TopOpeBRepBuild_PaveSet_SortPave

class TopOpeBRepBuild_ShellFaceSet(TopOpeBRepBuild_ShapeSet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SName = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SName)
    SNameori = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_SNameori)
    Solid = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_Solid)

    def __init__(self, *args):
        r"""
        * Creates a ShellFaceSet to build blocks of faces connected by edges.
        	:rtype: None* Creates a ShellFaceSet to build blocks of faces connected by edges.
        	:param S:
        	:type S: TopoDS_Shape
        	:param Addr: default value is NULL
        	:type Addr: Standard_Address
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShellFaceSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShellFaceSet

# Register TopOpeBRepBuild_ShellFaceSet in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceSet_swigregister(TopOpeBRepBuild_ShellFaceSet)

class TopOpeBRepBuild_WireEdgeSet(TopOpeBRepBuild_ShapeSet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Face = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_Face)
    IsUVISO = _swig_new_static_method(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_IsUVISO)
    SName = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SName)
    SNameori = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_SNameori)

    def __init__(self, *args):
        r"""
        * Creates a WireEdgeSet to build edges connected by vertices on face F. Edges of the WireEdgeSet must have a representation on surface of face F.
        	:param F:
        	:type F: TopoDS_Shape
        	:param Addr: default value is NULL
        	:type Addr: Standard_Address
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_WireEdgeSet(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_WireEdgeSet

# Register TopOpeBRepBuild_WireEdgeSet in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_swigregister(TopOpeBRepBuild_WireEdgeSet)
TopOpeBRepBuild_WireEdgeSet_IsUVISO = _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeSet_IsUVISO

class TopOpeBRepBuild_EdgeBuilder(TopOpeBRepBuild_Area1dBuilder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InitEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdge)
    InitEdgeBuilder = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitEdgeBuilder)
    InitVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_InitVertex)
    MoreEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreEdge)
    MoreVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_MoreVertex)
    NextEdge = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextEdge)
    NextVertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_NextVertex)
    Parameter = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Parameter)

    def __init__(self, *args):
        r"""
        :rtype: None* Creates a EdgeBuilder to find the areas of the shapes described by <LS> using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_PaveSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_PaveClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_EdgeBuilder(*args))
    Vertex = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_Vertex)

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_EdgeBuilder

# Register TopOpeBRepBuild_EdgeBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_EdgeBuilder_swigregister(TopOpeBRepBuild_EdgeBuilder)

class TopOpeBRepBuild_FaceAreaBuilder(TopOpeBRepBuild_Area2dBuilder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InitFaceAreaBuilder = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_InitFaceAreaBuilder)

    def __init__(self, *args):
        r"""
        :rtype: None* Creates a FaceAreaBuilder to build faces on the (wires,blocks of edge) of <LS>, using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_FaceAreaBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_FaceAreaBuilder

# Register TopOpeBRepBuild_FaceAreaBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_FaceAreaBuilder_swigregister(TopOpeBRepBuild_FaceAreaBuilder)

class TopOpeBRepBuild_ShellFaceClassifier(TopOpeBRepBuild_CompositeClassifier):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Clear = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_Clear)

    def __init__(self, *args):
        r"""
        * Creates a classifier in 3D space, to compare : a face with a set of faces a shell with a set of faces a shell with a shell
        	:param BB:
        	:type BB: TopOpeBRepBuild_BlockBuilder
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_ShellFaceClassifier(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_ShellFaceClassifier

# Register TopOpeBRepBuild_ShellFaceClassifier in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_ShellFaceClassifier_swigregister(TopOpeBRepBuild_ShellFaceClassifier)

class TopOpeBRepBuild_SolidAreaBuilder(TopOpeBRepBuild_Area3dBuilder):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InitSolidAreaBuilder = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_InitSolidAreaBuilder)

    def __init__(self, *args):
        r"""
        :rtype: None* Creates a SolidAreaBuilder to build Solids on the (shells,blocks of face) of <LS>, using the classifier <LC>.
        	:param LS:
        	:type LS: TopOpeBRepBuild_LoopSet
        	:param LC:
        	:type LC: TopOpeBRepBuild_LoopClassifier
        	:param ForceClass: default value is Standard_False
        	:type ForceClass: bool
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_SolidAreaBuilder(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_SolidAreaBuilder

# Register TopOpeBRepBuild_SolidAreaBuilder in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_SolidAreaBuilder_swigregister(TopOpeBRepBuild_SolidAreaBuilder)

class TopOpeBRepBuild_WireEdgeClassifier(TopOpeBRepBuild_CompositeClassifier):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    LoopToShape = _swig_new_instance_method(_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_LoopToShape)

    def __init__(self, *args):
        r"""
        * Creates a classifier on edge <F>. Used to compare edges and wires on the edge <F>.
        	:param F:
        	:type F: TopoDS_Shape
        	:param BB:
        	:type BB: TopOpeBRepBuild_BlockBuilder
        	:rtype: None
        """
        _TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_swiginit(self, _TopOpeBRepBuild.new_TopOpeBRepBuild_WireEdgeClassifier(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _TopOpeBRepBuild.delete_TopOpeBRepBuild_WireEdgeClassifier

# Register TopOpeBRepBuild_WireEdgeClassifier in _TopOpeBRepBuild:
_TopOpeBRepBuild.TopOpeBRepBuild_WireEdgeClassifier_swigregister(TopOpeBRepBuild_WireEdgeClassifier)



