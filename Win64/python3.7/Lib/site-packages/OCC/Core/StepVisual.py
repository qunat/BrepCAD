# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepVisual module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepvisual.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _StepVisual
else:
    import _StepVisual

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _StepVisual.SWIG_PyInstanceMethod_New
_swig_new_static_method = _StepVisual.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepVisual.delete_SwigPyIterator
    value = _swig_new_instance_method(_StepVisual.SwigPyIterator_value)
    incr = _swig_new_instance_method(_StepVisual.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_StepVisual.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_StepVisual.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_StepVisual.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_StepVisual.SwigPyIterator_copy)
    next = _swig_new_instance_method(_StepVisual.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_StepVisual.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_StepVisual.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_StepVisual.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_StepVisual.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_StepVisual.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_StepVisual.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_StepVisual.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_StepVisual.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_StepVisual.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _StepVisual:
_StepVisual.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.StepShape
import OCC.Core.StepGeom
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepRepr
import OCC.Core.StepBasic
import OCC.Core.TColgp
StepVisual_Null = _StepVisual.StepVisual_Null
StepVisual_copCentral = _StepVisual.StepVisual_copCentral
StepVisual_copParallel = _StepVisual.StepVisual_copParallel
StepVisual_ssNegative = _StepVisual.StepVisual_ssNegative
StepVisual_ssPositive = _StepVisual.StepVisual_ssPositive
StepVisual_ssBoth = _StepVisual.StepVisual_ssBoth
StepVisual_tpUp = _StepVisual.StepVisual_tpUp
StepVisual_tpRight = _StepVisual.StepVisual_tpRight
StepVisual_tpDown = _StepVisual.StepVisual_tpDown
StepVisual_tpLeft = _StepVisual.StepVisual_tpLeft
StepVisual_mtDot = _StepVisual.StepVisual_mtDot
StepVisual_mtX = _StepVisual.StepVisual_mtX
StepVisual_mtPlus = _StepVisual.StepVisual_mtPlus
StepVisual_mtAsterisk = _StepVisual.StepVisual_mtAsterisk
StepVisual_mtRing = _StepVisual.StepVisual_mtRing
StepVisual_mtSquare = _StepVisual.StepVisual_mtSquare
StepVisual_mtTriangle = _StepVisual.StepVisual_mtTriangle
Handle_StepVisual_AnnotationFillArea_Create = _StepVisual.Handle_StepVisual_AnnotationFillArea_Create
Handle_StepVisual_AnnotationFillArea_DownCast = _StepVisual.Handle_StepVisual_AnnotationFillArea_DownCast
Handle_StepVisual_AnnotationFillArea_IsNull = _StepVisual.Handle_StepVisual_AnnotationFillArea_IsNull
Handle_StepVisual_AnnotationText_Create = _StepVisual.Handle_StepVisual_AnnotationText_Create
Handle_StepVisual_AnnotationText_DownCast = _StepVisual.Handle_StepVisual_AnnotationText_DownCast
Handle_StepVisual_AnnotationText_IsNull = _StepVisual.Handle_StepVisual_AnnotationText_IsNull
Handle_StepVisual_AreaInSet_Create = _StepVisual.Handle_StepVisual_AreaInSet_Create
Handle_StepVisual_AreaInSet_DownCast = _StepVisual.Handle_StepVisual_AreaInSet_DownCast
Handle_StepVisual_AreaInSet_IsNull = _StepVisual.Handle_StepVisual_AreaInSet_IsNull
Handle_StepVisual_CameraImage_Create = _StepVisual.Handle_StepVisual_CameraImage_Create
Handle_StepVisual_CameraImage_DownCast = _StepVisual.Handle_StepVisual_CameraImage_DownCast
Handle_StepVisual_CameraImage_IsNull = _StepVisual.Handle_StepVisual_CameraImage_IsNull
Handle_StepVisual_CameraModel_Create = _StepVisual.Handle_StepVisual_CameraModel_Create
Handle_StepVisual_CameraModel_DownCast = _StepVisual.Handle_StepVisual_CameraModel_DownCast
Handle_StepVisual_CameraModel_IsNull = _StepVisual.Handle_StepVisual_CameraModel_IsNull
Handle_StepVisual_CameraModelD3MultiClippingIntersection_Create = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingIntersection_Create
Handle_StepVisual_CameraModelD3MultiClippingIntersection_DownCast = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingIntersection_DownCast
Handle_StepVisual_CameraModelD3MultiClippingIntersection_IsNull = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingIntersection_IsNull
Handle_StepVisual_CameraModelD3MultiClippingUnion_Create = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingUnion_Create
Handle_StepVisual_CameraModelD3MultiClippingUnion_DownCast = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingUnion_DownCast
Handle_StepVisual_CameraModelD3MultiClippingUnion_IsNull = _StepVisual.Handle_StepVisual_CameraModelD3MultiClippingUnion_IsNull
Handle_StepVisual_CameraUsage_Create = _StepVisual.Handle_StepVisual_CameraUsage_Create
Handle_StepVisual_CameraUsage_DownCast = _StepVisual.Handle_StepVisual_CameraUsage_DownCast
Handle_StepVisual_CameraUsage_IsNull = _StepVisual.Handle_StepVisual_CameraUsage_IsNull
Handle_StepVisual_Colour_Create = _StepVisual.Handle_StepVisual_Colour_Create
Handle_StepVisual_Colour_DownCast = _StepVisual.Handle_StepVisual_Colour_DownCast
Handle_StepVisual_Colour_IsNull = _StepVisual.Handle_StepVisual_Colour_IsNull
Handle_StepVisual_CompositeText_Create = _StepVisual.Handle_StepVisual_CompositeText_Create
Handle_StepVisual_CompositeText_DownCast = _StepVisual.Handle_StepVisual_CompositeText_DownCast
Handle_StepVisual_CompositeText_IsNull = _StepVisual.Handle_StepVisual_CompositeText_IsNull
Handle_StepVisual_CurveStyle_Create = _StepVisual.Handle_StepVisual_CurveStyle_Create
Handle_StepVisual_CurveStyle_DownCast = _StepVisual.Handle_StepVisual_CurveStyle_DownCast
Handle_StepVisual_CurveStyle_IsNull = _StepVisual.Handle_StepVisual_CurveStyle_IsNull
Handle_StepVisual_CurveStyleFont_Create = _StepVisual.Handle_StepVisual_CurveStyleFont_Create
Handle_StepVisual_CurveStyleFont_DownCast = _StepVisual.Handle_StepVisual_CurveStyleFont_DownCast
Handle_StepVisual_CurveStyleFont_IsNull = _StepVisual.Handle_StepVisual_CurveStyleFont_IsNull
Handle_StepVisual_CurveStyleFontPattern_Create = _StepVisual.Handle_StepVisual_CurveStyleFontPattern_Create
Handle_StepVisual_CurveStyleFontPattern_DownCast = _StepVisual.Handle_StepVisual_CurveStyleFontPattern_DownCast
Handle_StepVisual_CurveStyleFontPattern_IsNull = _StepVisual.Handle_StepVisual_CurveStyleFontPattern_IsNull
Handle_StepVisual_DraughtingCallout_Create = _StepVisual.Handle_StepVisual_DraughtingCallout_Create
Handle_StepVisual_DraughtingCallout_DownCast = _StepVisual.Handle_StepVisual_DraughtingCallout_DownCast
Handle_StepVisual_DraughtingCallout_IsNull = _StepVisual.Handle_StepVisual_DraughtingCallout_IsNull
Handle_StepVisual_DraughtingModel_Create = _StepVisual.Handle_StepVisual_DraughtingModel_Create
Handle_StepVisual_DraughtingModel_DownCast = _StepVisual.Handle_StepVisual_DraughtingModel_DownCast
Handle_StepVisual_DraughtingModel_IsNull = _StepVisual.Handle_StepVisual_DraughtingModel_IsNull
Handle_StepVisual_ExternallyDefinedCurveFont_Create = _StepVisual.Handle_StepVisual_ExternallyDefinedCurveFont_Create
Handle_StepVisual_ExternallyDefinedCurveFont_DownCast = _StepVisual.Handle_StepVisual_ExternallyDefinedCurveFont_DownCast
Handle_StepVisual_ExternallyDefinedCurveFont_IsNull = _StepVisual.Handle_StepVisual_ExternallyDefinedCurveFont_IsNull
Handle_StepVisual_ExternallyDefinedTextFont_Create = _StepVisual.Handle_StepVisual_ExternallyDefinedTextFont_Create
Handle_StepVisual_ExternallyDefinedTextFont_DownCast = _StepVisual.Handle_StepVisual_ExternallyDefinedTextFont_DownCast
Handle_StepVisual_ExternallyDefinedTextFont_IsNull = _StepVisual.Handle_StepVisual_ExternallyDefinedTextFont_IsNull
Handle_StepVisual_FillAreaStyle_Create = _StepVisual.Handle_StepVisual_FillAreaStyle_Create
Handle_StepVisual_FillAreaStyle_DownCast = _StepVisual.Handle_StepVisual_FillAreaStyle_DownCast
Handle_StepVisual_FillAreaStyle_IsNull = _StepVisual.Handle_StepVisual_FillAreaStyle_IsNull
Handle_StepVisual_FillAreaStyleColour_Create = _StepVisual.Handle_StepVisual_FillAreaStyleColour_Create
Handle_StepVisual_FillAreaStyleColour_DownCast = _StepVisual.Handle_StepVisual_FillAreaStyleColour_DownCast
Handle_StepVisual_FillAreaStyleColour_IsNull = _StepVisual.Handle_StepVisual_FillAreaStyleColour_IsNull
Handle_StepVisual_Invisibility_Create = _StepVisual.Handle_StepVisual_Invisibility_Create
Handle_StepVisual_Invisibility_DownCast = _StepVisual.Handle_StepVisual_Invisibility_DownCast
Handle_StepVisual_Invisibility_IsNull = _StepVisual.Handle_StepVisual_Invisibility_IsNull
Handle_StepVisual_MarkerMember_Create = _StepVisual.Handle_StepVisual_MarkerMember_Create
Handle_StepVisual_MarkerMember_DownCast = _StepVisual.Handle_StepVisual_MarkerMember_DownCast
Handle_StepVisual_MarkerMember_IsNull = _StepVisual.Handle_StepVisual_MarkerMember_IsNull
Handle_StepVisual_NullStyleMember_Create = _StepVisual.Handle_StepVisual_NullStyleMember_Create
Handle_StepVisual_NullStyleMember_DownCast = _StepVisual.Handle_StepVisual_NullStyleMember_DownCast
Handle_StepVisual_NullStyleMember_IsNull = _StepVisual.Handle_StepVisual_NullStyleMember_IsNull
Handle_StepVisual_PlanarExtent_Create = _StepVisual.Handle_StepVisual_PlanarExtent_Create
Handle_StepVisual_PlanarExtent_DownCast = _StepVisual.Handle_StepVisual_PlanarExtent_DownCast
Handle_StepVisual_PlanarExtent_IsNull = _StepVisual.Handle_StepVisual_PlanarExtent_IsNull
Handle_StepVisual_PointStyle_Create = _StepVisual.Handle_StepVisual_PointStyle_Create
Handle_StepVisual_PointStyle_DownCast = _StepVisual.Handle_StepVisual_PointStyle_DownCast
Handle_StepVisual_PointStyle_IsNull = _StepVisual.Handle_StepVisual_PointStyle_IsNull
Handle_StepVisual_PreDefinedItem_Create = _StepVisual.Handle_StepVisual_PreDefinedItem_Create
Handle_StepVisual_PreDefinedItem_DownCast = _StepVisual.Handle_StepVisual_PreDefinedItem_DownCast
Handle_StepVisual_PreDefinedItem_IsNull = _StepVisual.Handle_StepVisual_PreDefinedItem_IsNull
Handle_StepVisual_PresentationLayerAssignment_Create = _StepVisual.Handle_StepVisual_PresentationLayerAssignment_Create
Handle_StepVisual_PresentationLayerAssignment_DownCast = _StepVisual.Handle_StepVisual_PresentationLayerAssignment_DownCast
Handle_StepVisual_PresentationLayerAssignment_IsNull = _StepVisual.Handle_StepVisual_PresentationLayerAssignment_IsNull
Handle_StepVisual_PresentationLayerUsage_Create = _StepVisual.Handle_StepVisual_PresentationLayerUsage_Create
Handle_StepVisual_PresentationLayerUsage_DownCast = _StepVisual.Handle_StepVisual_PresentationLayerUsage_DownCast
Handle_StepVisual_PresentationLayerUsage_IsNull = _StepVisual.Handle_StepVisual_PresentationLayerUsage_IsNull
Handle_StepVisual_PresentationRepresentation_Create = _StepVisual.Handle_StepVisual_PresentationRepresentation_Create
Handle_StepVisual_PresentationRepresentation_DownCast = _StepVisual.Handle_StepVisual_PresentationRepresentation_DownCast
Handle_StepVisual_PresentationRepresentation_IsNull = _StepVisual.Handle_StepVisual_PresentationRepresentation_IsNull
Handle_StepVisual_PresentationSet_Create = _StepVisual.Handle_StepVisual_PresentationSet_Create
Handle_StepVisual_PresentationSet_DownCast = _StepVisual.Handle_StepVisual_PresentationSet_DownCast
Handle_StepVisual_PresentationSet_IsNull = _StepVisual.Handle_StepVisual_PresentationSet_IsNull
Handle_StepVisual_PresentationSize_Create = _StepVisual.Handle_StepVisual_PresentationSize_Create
Handle_StepVisual_PresentationSize_DownCast = _StepVisual.Handle_StepVisual_PresentationSize_DownCast
Handle_StepVisual_PresentationSize_IsNull = _StepVisual.Handle_StepVisual_PresentationSize_IsNull
Handle_StepVisual_PresentationStyleAssignment_Create = _StepVisual.Handle_StepVisual_PresentationStyleAssignment_Create
Handle_StepVisual_PresentationStyleAssignment_DownCast = _StepVisual.Handle_StepVisual_PresentationStyleAssignment_DownCast
Handle_StepVisual_PresentationStyleAssignment_IsNull = _StepVisual.Handle_StepVisual_PresentationStyleAssignment_IsNull
Handle_StepVisual_PresentedItem_Create = _StepVisual.Handle_StepVisual_PresentedItem_Create
Handle_StepVisual_PresentedItem_DownCast = _StepVisual.Handle_StepVisual_PresentedItem_DownCast
Handle_StepVisual_PresentedItem_IsNull = _StepVisual.Handle_StepVisual_PresentedItem_IsNull
Handle_StepVisual_PresentedItemRepresentation_Create = _StepVisual.Handle_StepVisual_PresentedItemRepresentation_Create
Handle_StepVisual_PresentedItemRepresentation_DownCast = _StepVisual.Handle_StepVisual_PresentedItemRepresentation_DownCast
Handle_StepVisual_PresentedItemRepresentation_IsNull = _StepVisual.Handle_StepVisual_PresentedItemRepresentation_IsNull
Handle_StepVisual_StyledItem_Create = _StepVisual.Handle_StepVisual_StyledItem_Create
Handle_StepVisual_StyledItem_DownCast = _StepVisual.Handle_StepVisual_StyledItem_DownCast
Handle_StepVisual_StyledItem_IsNull = _StepVisual.Handle_StepVisual_StyledItem_IsNull
Handle_StepVisual_SurfaceSideStyle_Create = _StepVisual.Handle_StepVisual_SurfaceSideStyle_Create
Handle_StepVisual_SurfaceSideStyle_DownCast = _StepVisual.Handle_StepVisual_SurfaceSideStyle_DownCast
Handle_StepVisual_SurfaceSideStyle_IsNull = _StepVisual.Handle_StepVisual_SurfaceSideStyle_IsNull
Handle_StepVisual_SurfaceStyleBoundary_Create = _StepVisual.Handle_StepVisual_SurfaceStyleBoundary_Create
Handle_StepVisual_SurfaceStyleBoundary_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleBoundary_DownCast
Handle_StepVisual_SurfaceStyleBoundary_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleBoundary_IsNull
Handle_StepVisual_SurfaceStyleControlGrid_Create = _StepVisual.Handle_StepVisual_SurfaceStyleControlGrid_Create
Handle_StepVisual_SurfaceStyleControlGrid_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleControlGrid_DownCast
Handle_StepVisual_SurfaceStyleControlGrid_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleControlGrid_IsNull
Handle_StepVisual_SurfaceStyleFillArea_Create = _StepVisual.Handle_StepVisual_SurfaceStyleFillArea_Create
Handle_StepVisual_SurfaceStyleFillArea_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleFillArea_DownCast
Handle_StepVisual_SurfaceStyleFillArea_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleFillArea_IsNull
Handle_StepVisual_SurfaceStyleParameterLine_Create = _StepVisual.Handle_StepVisual_SurfaceStyleParameterLine_Create
Handle_StepVisual_SurfaceStyleParameterLine_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleParameterLine_DownCast
Handle_StepVisual_SurfaceStyleParameterLine_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleParameterLine_IsNull
Handle_StepVisual_SurfaceStyleSegmentationCurve_Create = _StepVisual.Handle_StepVisual_SurfaceStyleSegmentationCurve_Create
Handle_StepVisual_SurfaceStyleSegmentationCurve_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleSegmentationCurve_DownCast
Handle_StepVisual_SurfaceStyleSegmentationCurve_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleSegmentationCurve_IsNull
Handle_StepVisual_SurfaceStyleSilhouette_Create = _StepVisual.Handle_StepVisual_SurfaceStyleSilhouette_Create
Handle_StepVisual_SurfaceStyleSilhouette_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleSilhouette_DownCast
Handle_StepVisual_SurfaceStyleSilhouette_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleSilhouette_IsNull
Handle_StepVisual_SurfaceStyleUsage_Create = _StepVisual.Handle_StepVisual_SurfaceStyleUsage_Create
Handle_StepVisual_SurfaceStyleUsage_DownCast = _StepVisual.Handle_StepVisual_SurfaceStyleUsage_DownCast
Handle_StepVisual_SurfaceStyleUsage_IsNull = _StepVisual.Handle_StepVisual_SurfaceStyleUsage_IsNull
Handle_StepVisual_Template_Create = _StepVisual.Handle_StepVisual_Template_Create
Handle_StepVisual_Template_DownCast = _StepVisual.Handle_StepVisual_Template_DownCast
Handle_StepVisual_Template_IsNull = _StepVisual.Handle_StepVisual_Template_IsNull
Handle_StepVisual_TemplateInstance_Create = _StepVisual.Handle_StepVisual_TemplateInstance_Create
Handle_StepVisual_TemplateInstance_DownCast = _StepVisual.Handle_StepVisual_TemplateInstance_DownCast
Handle_StepVisual_TemplateInstance_IsNull = _StepVisual.Handle_StepVisual_TemplateInstance_IsNull
Handle_StepVisual_TessellatedItem_Create = _StepVisual.Handle_StepVisual_TessellatedItem_Create
Handle_StepVisual_TessellatedItem_DownCast = _StepVisual.Handle_StepVisual_TessellatedItem_DownCast
Handle_StepVisual_TessellatedItem_IsNull = _StepVisual.Handle_StepVisual_TessellatedItem_IsNull
Handle_StepVisual_TextLiteral_Create = _StepVisual.Handle_StepVisual_TextLiteral_Create
Handle_StepVisual_TextLiteral_DownCast = _StepVisual.Handle_StepVisual_TextLiteral_DownCast
Handle_StepVisual_TextLiteral_IsNull = _StepVisual.Handle_StepVisual_TextLiteral_IsNull
Handle_StepVisual_TextStyle_Create = _StepVisual.Handle_StepVisual_TextStyle_Create
Handle_StepVisual_TextStyle_DownCast = _StepVisual.Handle_StepVisual_TextStyle_DownCast
Handle_StepVisual_TextStyle_IsNull = _StepVisual.Handle_StepVisual_TextStyle_IsNull
Handle_StepVisual_TextStyleForDefinedFont_Create = _StepVisual.Handle_StepVisual_TextStyleForDefinedFont_Create
Handle_StepVisual_TextStyleForDefinedFont_DownCast = _StepVisual.Handle_StepVisual_TextStyleForDefinedFont_DownCast
Handle_StepVisual_TextStyleForDefinedFont_IsNull = _StepVisual.Handle_StepVisual_TextStyleForDefinedFont_IsNull
Handle_StepVisual_ViewVolume_Create = _StepVisual.Handle_StepVisual_ViewVolume_Create
Handle_StepVisual_ViewVolume_DownCast = _StepVisual.Handle_StepVisual_ViewVolume_DownCast
Handle_StepVisual_ViewVolume_IsNull = _StepVisual.Handle_StepVisual_ViewVolume_IsNull
Handle_StepVisual_AnnotationOccurrence_Create = _StepVisual.Handle_StepVisual_AnnotationOccurrence_Create
Handle_StepVisual_AnnotationOccurrence_DownCast = _StepVisual.Handle_StepVisual_AnnotationOccurrence_DownCast
Handle_StepVisual_AnnotationOccurrence_IsNull = _StepVisual.Handle_StepVisual_AnnotationOccurrence_IsNull
Handle_StepVisual_BackgroundColour_Create = _StepVisual.Handle_StepVisual_BackgroundColour_Create
Handle_StepVisual_BackgroundColour_DownCast = _StepVisual.Handle_StepVisual_BackgroundColour_DownCast
Handle_StepVisual_BackgroundColour_IsNull = _StepVisual.Handle_StepVisual_BackgroundColour_IsNull
Handle_StepVisual_CameraImage2dWithScale_Create = _StepVisual.Handle_StepVisual_CameraImage2dWithScale_Create
Handle_StepVisual_CameraImage2dWithScale_DownCast = _StepVisual.Handle_StepVisual_CameraImage2dWithScale_DownCast
Handle_StepVisual_CameraImage2dWithScale_IsNull = _StepVisual.Handle_StepVisual_CameraImage2dWithScale_IsNull
Handle_StepVisual_CameraImage3dWithScale_Create = _StepVisual.Handle_StepVisual_CameraImage3dWithScale_Create
Handle_StepVisual_CameraImage3dWithScale_DownCast = _StepVisual.Handle_StepVisual_CameraImage3dWithScale_DownCast
Handle_StepVisual_CameraImage3dWithScale_IsNull = _StepVisual.Handle_StepVisual_CameraImage3dWithScale_IsNull
Handle_StepVisual_CameraModelD2_Create = _StepVisual.Handle_StepVisual_CameraModelD2_Create
Handle_StepVisual_CameraModelD2_DownCast = _StepVisual.Handle_StepVisual_CameraModelD2_DownCast
Handle_StepVisual_CameraModelD2_IsNull = _StepVisual.Handle_StepVisual_CameraModelD2_IsNull
Handle_StepVisual_CameraModelD3_Create = _StepVisual.Handle_StepVisual_CameraModelD3_Create
Handle_StepVisual_CameraModelD3_DownCast = _StepVisual.Handle_StepVisual_CameraModelD3_DownCast
Handle_StepVisual_CameraModelD3_IsNull = _StepVisual.Handle_StepVisual_CameraModelD3_IsNull
Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_Create = _StepVisual.Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_Create
Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_DownCast = _StepVisual.Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_DownCast
Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_IsNull = _StepVisual.Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_IsNull
Handle_StepVisual_ColourSpecification_Create = _StepVisual.Handle_StepVisual_ColourSpecification_Create
Handle_StepVisual_ColourSpecification_DownCast = _StepVisual.Handle_StepVisual_ColourSpecification_DownCast
Handle_StepVisual_ColourSpecification_IsNull = _StepVisual.Handle_StepVisual_ColourSpecification_IsNull
Handle_StepVisual_CompositeTextWithExtent_Create = _StepVisual.Handle_StepVisual_CompositeTextWithExtent_Create
Handle_StepVisual_CompositeTextWithExtent_DownCast = _StepVisual.Handle_StepVisual_CompositeTextWithExtent_DownCast
Handle_StepVisual_CompositeTextWithExtent_IsNull = _StepVisual.Handle_StepVisual_CompositeTextWithExtent_IsNull
Handle_StepVisual_ContextDependentInvisibility_Create = _StepVisual.Handle_StepVisual_ContextDependentInvisibility_Create
Handle_StepVisual_ContextDependentInvisibility_DownCast = _StepVisual.Handle_StepVisual_ContextDependentInvisibility_DownCast
Handle_StepVisual_ContextDependentInvisibility_IsNull = _StepVisual.Handle_StepVisual_ContextDependentInvisibility_IsNull
Handle_StepVisual_CoordinatesList_Create = _StepVisual.Handle_StepVisual_CoordinatesList_Create
Handle_StepVisual_CoordinatesList_DownCast = _StepVisual.Handle_StepVisual_CoordinatesList_DownCast
Handle_StepVisual_CoordinatesList_IsNull = _StepVisual.Handle_StepVisual_CoordinatesList_IsNull
Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_Create = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_Create
Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_DownCast = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_DownCast
Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_IsNull = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_IsNull
Handle_StepVisual_OverRidingStyledItem_Create = _StepVisual.Handle_StepVisual_OverRidingStyledItem_Create
Handle_StepVisual_OverRidingStyledItem_DownCast = _StepVisual.Handle_StepVisual_OverRidingStyledItem_DownCast
Handle_StepVisual_OverRidingStyledItem_IsNull = _StepVisual.Handle_StepVisual_OverRidingStyledItem_IsNull
Handle_StepVisual_PlanarBox_Create = _StepVisual.Handle_StepVisual_PlanarBox_Create
Handle_StepVisual_PlanarBox_DownCast = _StepVisual.Handle_StepVisual_PlanarBox_DownCast
Handle_StepVisual_PlanarBox_IsNull = _StepVisual.Handle_StepVisual_PlanarBox_IsNull
Handle_StepVisual_PreDefinedColour_Create = _StepVisual.Handle_StepVisual_PreDefinedColour_Create
Handle_StepVisual_PreDefinedColour_DownCast = _StepVisual.Handle_StepVisual_PreDefinedColour_DownCast
Handle_StepVisual_PreDefinedColour_IsNull = _StepVisual.Handle_StepVisual_PreDefinedColour_IsNull
Handle_StepVisual_PreDefinedCurveFont_Create = _StepVisual.Handle_StepVisual_PreDefinedCurveFont_Create
Handle_StepVisual_PreDefinedCurveFont_DownCast = _StepVisual.Handle_StepVisual_PreDefinedCurveFont_DownCast
Handle_StepVisual_PreDefinedCurveFont_IsNull = _StepVisual.Handle_StepVisual_PreDefinedCurveFont_IsNull
Handle_StepVisual_PreDefinedTextFont_Create = _StepVisual.Handle_StepVisual_PreDefinedTextFont_Create
Handle_StepVisual_PreDefinedTextFont_DownCast = _StepVisual.Handle_StepVisual_PreDefinedTextFont_DownCast
Handle_StepVisual_PreDefinedTextFont_IsNull = _StepVisual.Handle_StepVisual_PreDefinedTextFont_IsNull
Handle_StepVisual_PresentationArea_Create = _StepVisual.Handle_StepVisual_PresentationArea_Create
Handle_StepVisual_PresentationArea_DownCast = _StepVisual.Handle_StepVisual_PresentationArea_DownCast
Handle_StepVisual_PresentationArea_IsNull = _StepVisual.Handle_StepVisual_PresentationArea_IsNull
Handle_StepVisual_PresentationStyleByContext_Create = _StepVisual.Handle_StepVisual_PresentationStyleByContext_Create
Handle_StepVisual_PresentationStyleByContext_DownCast = _StepVisual.Handle_StepVisual_PresentationStyleByContext_DownCast
Handle_StepVisual_PresentationStyleByContext_IsNull = _StepVisual.Handle_StepVisual_PresentationStyleByContext_IsNull
Handle_StepVisual_PresentationView_Create = _StepVisual.Handle_StepVisual_PresentationView_Create
Handle_StepVisual_PresentationView_DownCast = _StepVisual.Handle_StepVisual_PresentationView_DownCast
Handle_StepVisual_PresentationView_IsNull = _StepVisual.Handle_StepVisual_PresentationView_IsNull
Handle_StepVisual_TessellatedAnnotationOccurrence_Create = _StepVisual.Handle_StepVisual_TessellatedAnnotationOccurrence_Create
Handle_StepVisual_TessellatedAnnotationOccurrence_DownCast = _StepVisual.Handle_StepVisual_TessellatedAnnotationOccurrence_DownCast
Handle_StepVisual_TessellatedAnnotationOccurrence_IsNull = _StepVisual.Handle_StepVisual_TessellatedAnnotationOccurrence_IsNull
Handle_StepVisual_TessellatedCurveSet_Create = _StepVisual.Handle_StepVisual_TessellatedCurveSet_Create
Handle_StepVisual_TessellatedCurveSet_DownCast = _StepVisual.Handle_StepVisual_TessellatedCurveSet_DownCast
Handle_StepVisual_TessellatedCurveSet_IsNull = _StepVisual.Handle_StepVisual_TessellatedCurveSet_IsNull
Handle_StepVisual_TessellatedGeometricSet_Create = _StepVisual.Handle_StepVisual_TessellatedGeometricSet_Create
Handle_StepVisual_TessellatedGeometricSet_DownCast = _StepVisual.Handle_StepVisual_TessellatedGeometricSet_DownCast
Handle_StepVisual_TessellatedGeometricSet_IsNull = _StepVisual.Handle_StepVisual_TessellatedGeometricSet_IsNull
Handle_StepVisual_TextStyleWithBoxCharacteristics_Create = _StepVisual.Handle_StepVisual_TextStyleWithBoxCharacteristics_Create
Handle_StepVisual_TextStyleWithBoxCharacteristics_DownCast = _StepVisual.Handle_StepVisual_TextStyleWithBoxCharacteristics_DownCast
Handle_StepVisual_TextStyleWithBoxCharacteristics_IsNull = _StepVisual.Handle_StepVisual_TextStyleWithBoxCharacteristics_IsNull
Handle_StepVisual_AnnotationCurveOccurrence_Create = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrence_Create
Handle_StepVisual_AnnotationCurveOccurrence_DownCast = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrence_DownCast
Handle_StepVisual_AnnotationCurveOccurrence_IsNull = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrence_IsNull
Handle_StepVisual_AnnotationFillAreaOccurrence_Create = _StepVisual.Handle_StepVisual_AnnotationFillAreaOccurrence_Create
Handle_StepVisual_AnnotationFillAreaOccurrence_DownCast = _StepVisual.Handle_StepVisual_AnnotationFillAreaOccurrence_DownCast
Handle_StepVisual_AnnotationFillAreaOccurrence_IsNull = _StepVisual.Handle_StepVisual_AnnotationFillAreaOccurrence_IsNull
Handle_StepVisual_AnnotationPlane_Create = _StepVisual.Handle_StepVisual_AnnotationPlane_Create
Handle_StepVisual_AnnotationPlane_DownCast = _StepVisual.Handle_StepVisual_AnnotationPlane_DownCast
Handle_StepVisual_AnnotationPlane_IsNull = _StepVisual.Handle_StepVisual_AnnotationPlane_IsNull
Handle_StepVisual_AnnotationTextOccurrence_Create = _StepVisual.Handle_StepVisual_AnnotationTextOccurrence_Create
Handle_StepVisual_AnnotationTextOccurrence_DownCast = _StepVisual.Handle_StepVisual_AnnotationTextOccurrence_DownCast
Handle_StepVisual_AnnotationTextOccurrence_IsNull = _StepVisual.Handle_StepVisual_AnnotationTextOccurrence_IsNull
Handle_StepVisual_CameraModelD3MultiClipping_Create = _StepVisual.Handle_StepVisual_CameraModelD3MultiClipping_Create
Handle_StepVisual_CameraModelD3MultiClipping_DownCast = _StepVisual.Handle_StepVisual_CameraModelD3MultiClipping_DownCast
Handle_StepVisual_CameraModelD3MultiClipping_IsNull = _StepVisual.Handle_StepVisual_CameraModelD3MultiClipping_IsNull
Handle_StepVisual_ColourRgb_Create = _StepVisual.Handle_StepVisual_ColourRgb_Create
Handle_StepVisual_ColourRgb_DownCast = _StepVisual.Handle_StepVisual_ColourRgb_DownCast
Handle_StepVisual_ColourRgb_IsNull = _StepVisual.Handle_StepVisual_ColourRgb_IsNull
Handle_StepVisual_ContextDependentOverRidingStyledItem_Create = _StepVisual.Handle_StepVisual_ContextDependentOverRidingStyledItem_Create
Handle_StepVisual_ContextDependentOverRidingStyledItem_DownCast = _StepVisual.Handle_StepVisual_ContextDependentOverRidingStyledItem_DownCast
Handle_StepVisual_ContextDependentOverRidingStyledItem_IsNull = _StepVisual.Handle_StepVisual_ContextDependentOverRidingStyledItem_IsNull
Handle_StepVisual_DraughtingAnnotationOccurrence_Create = _StepVisual.Handle_StepVisual_DraughtingAnnotationOccurrence_Create
Handle_StepVisual_DraughtingAnnotationOccurrence_DownCast = _StepVisual.Handle_StepVisual_DraughtingAnnotationOccurrence_DownCast
Handle_StepVisual_DraughtingAnnotationOccurrence_IsNull = _StepVisual.Handle_StepVisual_DraughtingAnnotationOccurrence_IsNull
Handle_StepVisual_DraughtingPreDefinedColour_Create = _StepVisual.Handle_StepVisual_DraughtingPreDefinedColour_Create
Handle_StepVisual_DraughtingPreDefinedColour_DownCast = _StepVisual.Handle_StepVisual_DraughtingPreDefinedColour_DownCast
Handle_StepVisual_DraughtingPreDefinedColour_IsNull = _StepVisual.Handle_StepVisual_DraughtingPreDefinedColour_IsNull
Handle_StepVisual_DraughtingPreDefinedCurveFont_Create = _StepVisual.Handle_StepVisual_DraughtingPreDefinedCurveFont_Create
Handle_StepVisual_DraughtingPreDefinedCurveFont_DownCast = _StepVisual.Handle_StepVisual_DraughtingPreDefinedCurveFont_DownCast
Handle_StepVisual_DraughtingPreDefinedCurveFont_IsNull = _StepVisual.Handle_StepVisual_DraughtingPreDefinedCurveFont_IsNull
Handle_StepVisual_MechanicalDesignGeometricPresentationArea_Create = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationArea_Create
Handle_StepVisual_MechanicalDesignGeometricPresentationArea_DownCast = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationArea_DownCast
Handle_StepVisual_MechanicalDesignGeometricPresentationArea_IsNull = _StepVisual.Handle_StepVisual_MechanicalDesignGeometricPresentationArea_IsNull
Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_Create = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_Create
Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_DownCast = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_DownCast
Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_IsNull = _StepVisual.Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_IsNull
Handle_StepVisual_HArray1OfAnnotationPlaneElement_Create = _StepVisual.Handle_StepVisual_HArray1OfAnnotationPlaneElement_Create
Handle_StepVisual_HArray1OfAnnotationPlaneElement_DownCast = _StepVisual.Handle_StepVisual_HArray1OfAnnotationPlaneElement_DownCast
Handle_StepVisual_HArray1OfAnnotationPlaneElement_IsNull = _StepVisual.Handle_StepVisual_HArray1OfAnnotationPlaneElement_IsNull
Handle_StepVisual_HArray1OfDraughtingCalloutElement_Create = _StepVisual.Handle_StepVisual_HArray1OfDraughtingCalloutElement_Create
Handle_StepVisual_HArray1OfDraughtingCalloutElement_DownCast = _StepVisual.Handle_StepVisual_HArray1OfDraughtingCalloutElement_DownCast
Handle_StepVisual_HArray1OfDraughtingCalloutElement_IsNull = _StepVisual.Handle_StepVisual_HArray1OfDraughtingCalloutElement_IsNull
Handle_StepVisual_HArray1OfDirectionCountSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfDirectionCountSelect_Create
Handle_StepVisual_HArray1OfDirectionCountSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfDirectionCountSelect_DownCast
Handle_StepVisual_HArray1OfDirectionCountSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfDirectionCountSelect_IsNull
Handle_StepVisual_HArray1OfStyleContextSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfStyleContextSelect_Create
Handle_StepVisual_HArray1OfStyleContextSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfStyleContextSelect_DownCast
Handle_StepVisual_HArray1OfStyleContextSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfStyleContextSelect_IsNull
Handle_StepVisual_HArray1OfPresentationStyleSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleSelect_Create
Handle_StepVisual_HArray1OfPresentationStyleSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleSelect_DownCast
Handle_StepVisual_HArray1OfPresentationStyleSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleSelect_IsNull
Handle_StepVisual_HArray1OfCurveStyleFontPattern_Create = _StepVisual.Handle_StepVisual_HArray1OfCurveStyleFontPattern_Create
Handle_StepVisual_HArray1OfCurveStyleFontPattern_DownCast = _StepVisual.Handle_StepVisual_HArray1OfCurveStyleFontPattern_DownCast
Handle_StepVisual_HArray1OfCurveStyleFontPattern_IsNull = _StepVisual.Handle_StepVisual_HArray1OfCurveStyleFontPattern_IsNull
Handle_StepVisual_HArray1OfBoxCharacteristicSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfBoxCharacteristicSelect_Create
Handle_StepVisual_HArray1OfBoxCharacteristicSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfBoxCharacteristicSelect_DownCast
Handle_StepVisual_HArray1OfBoxCharacteristicSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfBoxCharacteristicSelect_IsNull
Handle_StepVisual_HArray1OfPresentationStyleAssignment_Create = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleAssignment_Create
Handle_StepVisual_HArray1OfPresentationStyleAssignment_DownCast = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleAssignment_DownCast
Handle_StepVisual_HArray1OfPresentationStyleAssignment_IsNull = _StepVisual.Handle_StepVisual_HArray1OfPresentationStyleAssignment_IsNull
Handle_StepVisual_HArray1OfFillStyleSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfFillStyleSelect_Create
Handle_StepVisual_HArray1OfFillStyleSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfFillStyleSelect_DownCast
Handle_StepVisual_HArray1OfFillStyleSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfFillStyleSelect_IsNull
Handle_StepVisual_HArray1OfTextOrCharacter_Create = _StepVisual.Handle_StepVisual_HArray1OfTextOrCharacter_Create
Handle_StepVisual_HArray1OfTextOrCharacter_DownCast = _StepVisual.Handle_StepVisual_HArray1OfTextOrCharacter_DownCast
Handle_StepVisual_HArray1OfTextOrCharacter_IsNull = _StepVisual.Handle_StepVisual_HArray1OfTextOrCharacter_IsNull
Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_Create
Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_DownCast
Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_IsNull
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_Create
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_DownCast
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_IsNull
Handle_StepVisual_HArray1OfLayeredItem_Create = _StepVisual.Handle_StepVisual_HArray1OfLayeredItem_Create
Handle_StepVisual_HArray1OfLayeredItem_DownCast = _StepVisual.Handle_StepVisual_HArray1OfLayeredItem_DownCast
Handle_StepVisual_HArray1OfLayeredItem_IsNull = _StepVisual.Handle_StepVisual_HArray1OfLayeredItem_IsNull
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_Create = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_Create
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_DownCast = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_DownCast
Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_IsNull = _StepVisual.Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_IsNull
Handle_StepVisual_HArray1OfInvisibleItem_Create = _StepVisual.Handle_StepVisual_HArray1OfInvisibleItem_Create
Handle_StepVisual_HArray1OfInvisibleItem_DownCast = _StepVisual.Handle_StepVisual_HArray1OfInvisibleItem_DownCast
Handle_StepVisual_HArray1OfInvisibleItem_IsNull = _StepVisual.Handle_StepVisual_HArray1OfInvisibleItem_IsNull
class StepVisual_Array1OfTessellatedItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfTessellatedItem_swiginit(self, _StepVisual.new_StepVisual_Array1OfTessellatedItem(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTessellatedItem_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfTessellatedItem

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfTessellatedItem in _StepVisual:
_StepVisual.StepVisual_Array1OfTessellatedItem_swigregister(StepVisual_Array1OfTessellatedItem)

class StepVisual_Array1OfLayeredItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfLayeredItem_swiginit(self, _StepVisual.new_StepVisual_Array1OfLayeredItem(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfLayeredItem_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfLayeredItem

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfLayeredItem in _StepVisual:
_StepVisual.StepVisual_Array1OfLayeredItem_swigregister(StepVisual_Array1OfLayeredItem)

class StepVisual_Array1OfAnnotationPlaneElement(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfAnnotationPlaneElement_swiginit(self, _StepVisual.new_StepVisual_Array1OfAnnotationPlaneElement(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfAnnotationPlaneElement

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfAnnotationPlaneElement in _StepVisual:
_StepVisual.StepVisual_Array1OfAnnotationPlaneElement_swigregister(StepVisual_Array1OfAnnotationPlaneElement)

class StepVisual_Array1OfPresentationStyleAssignment(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfPresentationStyleAssignment_swiginit(self, _StepVisual.new_StepVisual_Array1OfPresentationStyleAssignment(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfPresentationStyleAssignment

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfPresentationStyleAssignment in _StepVisual:
_StepVisual.StepVisual_Array1OfPresentationStyleAssignment_swigregister(StepVisual_Array1OfPresentationStyleAssignment)

class StepVisual_Array1OfSurfaceStyleElementSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfSurfaceStyleElementSelect(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfSurfaceStyleElementSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfSurfaceStyleElementSelect in _StepVisual:
_StepVisual.StepVisual_Array1OfSurfaceStyleElementSelect_swigregister(StepVisual_Array1OfSurfaceStyleElementSelect)

class StepVisual_Array1OfInvisibleItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfInvisibleItem_swiginit(self, _StepVisual.new_StepVisual_Array1OfInvisibleItem(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfInvisibleItem_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfInvisibleItem

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfInvisibleItem in _StepVisual:
_StepVisual.StepVisual_Array1OfInvisibleItem_swigregister(StepVisual_Array1OfInvisibleItem)

class StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect in _StepVisual:
_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect_swigregister(StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect)

class StepVisual_Array1OfTextOrCharacter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfTextOrCharacter_swiginit(self, _StepVisual.new_StepVisual_Array1OfTextOrCharacter(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfTextOrCharacter_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfTextOrCharacter

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfTextOrCharacter in _StepVisual:
_StepVisual.StepVisual_Array1OfTextOrCharacter_swigregister(StepVisual_Array1OfTextOrCharacter)

class StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect in _StepVisual:
_StepVisual.StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect_swigregister(StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect)

class StepVisual_Array1OfPresentationStyleSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfPresentationStyleSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfPresentationStyleSelect(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfPresentationStyleSelect_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfPresentationStyleSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfPresentationStyleSelect in _StepVisual:
_StepVisual.StepVisual_Array1OfPresentationStyleSelect_swigregister(StepVisual_Array1OfPresentationStyleSelect)

class StepVisual_Array1OfBoxCharacteristicSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfBoxCharacteristicSelect(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfBoxCharacteristicSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfBoxCharacteristicSelect in _StepVisual:
_StepVisual.StepVisual_Array1OfBoxCharacteristicSelect_swigregister(StepVisual_Array1OfBoxCharacteristicSelect)

class StepVisual_Array1OfCurveStyleFontPattern(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfCurveStyleFontPattern_swiginit(self, _StepVisual.new_StepVisual_Array1OfCurveStyleFontPattern(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfCurveStyleFontPattern

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfCurveStyleFontPattern in _StepVisual:
_StepVisual.StepVisual_Array1OfCurveStyleFontPattern_swigregister(StepVisual_Array1OfCurveStyleFontPattern)

class StepVisual_VectorOfHSequenceOfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_VectorOfHSequenceOfInteger_swiginit(self, _StepVisual.new_StepVisual_VectorOfHSequenceOfInteger(*args))
    __swig_destroy__ = _StepVisual.delete_StepVisual_VectorOfHSequenceOfInteger
    Length = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Length)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Size)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Upper)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_IsEmpty)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Assign)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Set)
    Append = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Append)
    Appended = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Appended)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Value)
    First = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_ChangeLast)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger___call__)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_ChangeValue)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_VectorOfHSequenceOfInteger_SetValue)

# Register StepVisual_VectorOfHSequenceOfInteger in _StepVisual:
_StepVisual.StepVisual_VectorOfHSequenceOfInteger_swigregister(StepVisual_VectorOfHSequenceOfInteger)

class StepVisual_Array1OfDirectionCountSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfDirectionCountSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfDirectionCountSelect(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDirectionCountSelect_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfDirectionCountSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfDirectionCountSelect in _StepVisual:
_StepVisual.StepVisual_Array1OfDirectionCountSelect_swigregister(StepVisual_Array1OfDirectionCountSelect)

class StepVisual_Array1OfDraughtingCalloutElement(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfDraughtingCalloutElement_swiginit(self, _StepVisual.new_StepVisual_Array1OfDraughtingCalloutElement(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfDraughtingCalloutElement

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfDraughtingCalloutElement in _StepVisual:
_StepVisual.StepVisual_Array1OfDraughtingCalloutElement_swigregister(StepVisual_Array1OfDraughtingCalloutElement)

class StepVisual_Array1OfFillStyleSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfFillStyleSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfFillStyleSelect(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfFillStyleSelect_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfFillStyleSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfFillStyleSelect in _StepVisual:
_StepVisual.StepVisual_Array1OfFillStyleSelect_swigregister(StepVisual_Array1OfFillStyleSelect)

class StepVisual_Array1OfStyleContextSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_begin)
    end = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_end)
    cbegin = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_cbegin)
    cend = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_cend)

    def __init__(self, *args):
        _StepVisual.StepVisual_Array1OfStyleContextSelect_swiginit(self, _StepVisual.new_StepVisual_Array1OfStyleContextSelect(*args))
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Init)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Size)
    Length = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Length)
    IsEmpty = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_IsEmpty)
    Lower = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Lower)
    Upper = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Upper)
    IsDeletable = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_IsAllocated)
    Assign = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Assign)
    Move = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Move)
    Set = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Set)
    First = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_First)
    ChangeFirst = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_ChangeFirst)
    Last = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Last)
    ChangeLast = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_ChangeLast)
    Value = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Value)
    ChangeValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_ChangeValue)
    __call__ = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect___call__)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_SetValue)
    Resize = _swig_new_instance_method(_StepVisual.StepVisual_Array1OfStyleContextSelect_Resize)
    __swig_destroy__ = _StepVisual.delete_StepVisual_Array1OfStyleContextSelect

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepVisual_Array1OfStyleContextSelect in _StepVisual:
_StepVisual.StepVisual_Array1OfStyleContextSelect_swigregister(StepVisual_Array1OfStyleContextSelect)

class StepVisual_AnnotationFillArea(OCC.Core.StepShape.StepShape_GeometricCurveSet):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a AnnotationFillArea
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationFillArea_swiginit(self, _StepVisual.new_StepVisual_AnnotationFillArea(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationFillArea_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationFillArea

# Register StepVisual_AnnotationFillArea in _StepVisual:
_StepVisual.StepVisual_AnnotationFillArea_swigregister(StepVisual_AnnotationFillArea)

class StepVisual_AnnotationPlaneElement(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DraughtingCallout = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationPlaneElement_DraughtingCallout)

    def __init__(self, *args):
        r"""
        * Returns a AnnotationPlaneElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationPlaneElement_swiginit(self, _StepVisual.new_StepVisual_AnnotationPlaneElement(*args))
    StyledItem = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationPlaneElement_StyledItem)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationPlaneElement

# Register StepVisual_AnnotationPlaneElement in _StepVisual:
_StepVisual.StepVisual_AnnotationPlaneElement_swigregister(StepVisual_AnnotationPlaneElement)

class StepVisual_AnnotationText(OCC.Core.StepRepr.StepRepr_MappedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a AnnotationText
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationText_swiginit(self, _StepVisual.new_StepVisual_AnnotationText(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationText_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationText

# Register StepVisual_AnnotationText in _StepVisual:
_StepVisual.StepVisual_AnnotationText_swigregister(StepVisual_AnnotationText)

class StepVisual_AreaInSet(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Area = _swig_new_instance_method(_StepVisual.StepVisual_AreaInSet_Area)
    InSet = _swig_new_instance_method(_StepVisual.StepVisual_AreaInSet_InSet)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_AreaInSet_Init)
    SetArea = _swig_new_instance_method(_StepVisual.StepVisual_AreaInSet_SetArea)
    SetInSet = _swig_new_instance_method(_StepVisual.StepVisual_AreaInSet_SetInSet)

    def __init__(self, *args):
        r"""
        * Returns a AreaInSet
        	:rtype: None
        """
        _StepVisual.StepVisual_AreaInSet_swiginit(self, _StepVisual.new_StepVisual_AreaInSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AreaInSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AreaInSet

# Register StepVisual_AreaInSet in _StepVisual:
_StepVisual.StepVisual_AreaInSet_swigregister(StepVisual_AreaInSet)

class StepVisual_AreaOrView(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PresentationArea = _swig_new_instance_method(_StepVisual.StepVisual_AreaOrView_PresentationArea)
    PresentationView = _swig_new_instance_method(_StepVisual.StepVisual_AreaOrView_PresentationView)

    def __init__(self, *args):
        r"""
        * Returns a AreaOrView SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_AreaOrView_swiginit(self, _StepVisual.new_StepVisual_AreaOrView(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AreaOrView

# Register StepVisual_AreaOrView in _StepVisual:
_StepVisual.StepVisual_AreaOrView_swigregister(StepVisual_AreaOrView)

class StepVisual_BoxCharacteristicSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RealValue = _swig_new_instance_method(_StepVisual.StepVisual_BoxCharacteristicSelect_RealValue)
    SetRealValue = _swig_new_instance_method(_StepVisual.StepVisual_BoxCharacteristicSelect_SetRealValue)
    SetTypeOfContent = _swig_new_instance_method(_StepVisual.StepVisual_BoxCharacteristicSelect_SetTypeOfContent)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_BoxCharacteristicSelect_swiginit(self, _StepVisual.new_StepVisual_BoxCharacteristicSelect(*args))
    TypeOfContent = _swig_new_instance_method(_StepVisual.StepVisual_BoxCharacteristicSelect_TypeOfContent)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_BoxCharacteristicSelect

# Register StepVisual_BoxCharacteristicSelect in _StepVisual:
_StepVisual.StepVisual_BoxCharacteristicSelect_swigregister(StepVisual_BoxCharacteristicSelect)

class StepVisual_CameraImage(OCC.Core.StepRepr.StepRepr_MappedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a CameraImage
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraImage_swiginit(self, _StepVisual.new_StepVisual_CameraImage(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraImage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraImage

# Register StepVisual_CameraImage in _StepVisual:
_StepVisual.StepVisual_CameraImage_swigregister(StepVisual_CameraImage)

class StepVisual_CameraModel(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a CameraModel
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModel_swiginit(self, _StepVisual.new_StepVisual_CameraModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModel

# Register StepVisual_CameraModel in _StepVisual:
_StepVisual.StepVisual_CameraModel_swigregister(StepVisual_CameraModel)

class StepVisual_CameraModelD3MultiClippingInterectionSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CameraModelD3MultiClippingUnion = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_CameraModelD3MultiClippingUnion)
    Plane = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_Plane)

    def __init__(self, *args):
        r"""
        * Returns a CameraModelD3MultiClippingInterectionSelect select type
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClippingInterectionSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClippingInterectionSelect

# Register StepVisual_CameraModelD3MultiClippingInterectionSelect in _StepVisual:
_StepVisual.StepVisual_CameraModelD3MultiClippingInterectionSelect_swigregister(StepVisual_CameraModelD3MultiClippingInterectionSelect)

class StepVisual_CameraModelD3MultiClippingIntersection(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_Init)
    SetShapeClipping = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_SetShapeClipping)
    ShapeClipping = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_ShapeClipping)

    def __init__(self, *args):
        r"""
        * Returns a StepVisual_CameraModelD3MultiClippingIntersection
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClippingIntersection(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD3MultiClippingIntersection_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClippingIntersection

# Register StepVisual_CameraModelD3MultiClippingIntersection in _StepVisual:
_StepVisual.StepVisual_CameraModelD3MultiClippingIntersection_swigregister(StepVisual_CameraModelD3MultiClippingIntersection)

class StepVisual_CameraModelD3MultiClippingUnion(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingUnion_Init)
    SetShapeClipping = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingUnion_SetShapeClipping)
    ShapeClipping = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingUnion_ShapeClipping)

    def __init__(self, *args):
        r"""
        * Returns a StepVisual_CameraModelD3MultiClippingUnion
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClippingUnion_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClippingUnion(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD3MultiClippingUnion_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClippingUnion

# Register StepVisual_CameraModelD3MultiClippingUnion in _StepVisual:
_StepVisual.StepVisual_CameraModelD3MultiClippingUnion_swigregister(StepVisual_CameraModelD3MultiClippingUnion)

class StepVisual_CameraModelD3MultiClippingUnionSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CameraModelD3MultiClippingIntersection = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_CameraModelD3MultiClippingIntersection)
    Plane = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_Plane)

    def __init__(self, *args):
        r"""
        * Returns a CameraModelD3MultiClippingUnionSelect select type
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClippingUnionSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClippingUnionSelect

# Register StepVisual_CameraModelD3MultiClippingUnionSelect in _StepVisual:
_StepVisual.StepVisual_CameraModelD3MultiClippingUnionSelect_swigregister(StepVisual_CameraModelD3MultiClippingUnionSelect)

class StepVisual_CameraUsage(OCC.Core.StepRepr.StepRepr_RepresentationMap):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a CameraUsage
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraUsage_swiginit(self, _StepVisual.new_StepVisual_CameraUsage(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraUsage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraUsage

# Register StepVisual_CameraUsage in _StepVisual:
_StepVisual.StepVisual_CameraUsage_swigregister(StepVisual_CameraUsage)

class StepVisual_Colour(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a Colour
        	:rtype: None
        """
        _StepVisual.StepVisual_Colour_swiginit(self, _StepVisual.new_StepVisual_Colour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_Colour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_Colour

# Register StepVisual_Colour in _StepVisual:
_StepVisual.StepVisual_Colour_swigregister(StepVisual_Colour)

class StepVisual_CompositeText(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CollectedText = _swig_new_instance_method(_StepVisual.StepVisual_CompositeText_CollectedText)
    CollectedTextValue = _swig_new_instance_method(_StepVisual.StepVisual_CompositeText_CollectedTextValue)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CompositeText_Init)
    NbCollectedText = _swig_new_instance_method(_StepVisual.StepVisual_CompositeText_NbCollectedText)
    SetCollectedText = _swig_new_instance_method(_StepVisual.StepVisual_CompositeText_SetCollectedText)

    def __init__(self, *args):
        r"""
        * Returns a CompositeText
        	:rtype: None
        """
        _StepVisual.StepVisual_CompositeText_swiginit(self, _StepVisual.new_StepVisual_CompositeText(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CompositeText_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CompositeText

# Register StepVisual_CompositeText in _StepVisual:
_StepVisual.StepVisual_CompositeText_swigregister(StepVisual_CompositeText)

class StepVisual_CurveStyle(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CurveColour = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyle_CurveColour)
    CurveFont = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyle_CurveFont)
    CurveWidth = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyle_CurveWidth)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyle_Init)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyle_Name)
    SetCurveColour = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyle_SetCurveColour)
    SetCurveFont = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyle_SetCurveFont)
    SetCurveWidth = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyle_SetCurveWidth)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyle_SetName)

    def __init__(self, *args):
        r"""
        * Returns a CurveStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_CurveStyle_swiginit(self, _StepVisual.new_StepVisual_CurveStyle(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CurveStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CurveStyle

# Register StepVisual_CurveStyle in _StepVisual:
_StepVisual.StepVisual_CurveStyle_swigregister(StepVisual_CurveStyle)

class StepVisual_CurveStyleFont(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFont_Init)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFont_Name)
    NbPatternList = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFont_NbPatternList)
    PatternList = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFont_PatternList)
    PatternListValue = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFont_PatternListValue)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFont_SetName)
    SetPatternList = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFont_SetPatternList)

    def __init__(self, *args):
        r"""
        * Returns a CurveStyleFont
        	:rtype: None
        """
        _StepVisual.StepVisual_CurveStyleFont_swiginit(self, _StepVisual.new_StepVisual_CurveStyleFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CurveStyleFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CurveStyleFont

# Register StepVisual_CurveStyleFont in _StepVisual:
_StepVisual.StepVisual_CurveStyleFont_swigregister(StepVisual_CurveStyleFont)

class StepVisual_CurveStyleFontPattern(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFontPattern_Init)
    InvisibleSegmentLength = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFontPattern_InvisibleSegmentLength)
    SetInvisibleSegmentLength = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFontPattern_SetInvisibleSegmentLength)
    SetVisibleSegmentLength = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFontPattern_SetVisibleSegmentLength)

    def __init__(self, *args):
        r"""
        * Returns a CurveStyleFontPattern
        	:rtype: None
        """
        _StepVisual.StepVisual_CurveStyleFontPattern_swiginit(self, _StepVisual.new_StepVisual_CurveStyleFontPattern(*args))
    VisibleSegmentLength = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFontPattern_VisibleSegmentLength)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CurveStyleFontPattern_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CurveStyleFontPattern

# Register StepVisual_CurveStyleFontPattern in _StepVisual:
_StepVisual.StepVisual_CurveStyleFontPattern_swigregister(StepVisual_CurveStyleFontPattern)

class StepVisual_CurveStyleFontSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CurveStyleFont = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFontSelect_CurveStyleFont)
    ExternallyDefinedCurveFont = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFontSelect_ExternallyDefinedCurveFont)
    PreDefinedCurveFont = _swig_new_instance_method(_StepVisual.StepVisual_CurveStyleFontSelect_PreDefinedCurveFont)

    def __init__(self, *args):
        r"""
        * Returns a CurveStyleFontSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_CurveStyleFontSelect_swiginit(self, _StepVisual.new_StepVisual_CurveStyleFontSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CurveStyleFontSelect

# Register StepVisual_CurveStyleFontSelect in _StepVisual:
_StepVisual.StepVisual_CurveStyleFontSelect_swigregister(StepVisual_CurveStyleFontSelect)

class StepVisual_DirectionCountSelect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SetTypeOfContent = _swig_new_instance_method(_StepVisual.StepVisual_DirectionCountSelect_SetTypeOfContent)
    SetUDirectionCount = _swig_new_instance_method(_StepVisual.StepVisual_DirectionCountSelect_SetUDirectionCount)
    SetVDirectionCount = _swig_new_instance_method(_StepVisual.StepVisual_DirectionCountSelect_SetVDirectionCount)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_DirectionCountSelect_swiginit(self, _StepVisual.new_StepVisual_DirectionCountSelect(*args))
    TypeOfContent = _swig_new_instance_method(_StepVisual.StepVisual_DirectionCountSelect_TypeOfContent)
    UDirectionCount = _swig_new_instance_method(_StepVisual.StepVisual_DirectionCountSelect_UDirectionCount)
    VDirectionCount = _swig_new_instance_method(_StepVisual.StepVisual_DirectionCountSelect_VDirectionCount)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DirectionCountSelect

# Register StepVisual_DirectionCountSelect in _StepVisual:
_StepVisual.StepVisual_DirectionCountSelect_swigregister(StepVisual_DirectionCountSelect)

class StepVisual_DraughtingCallout(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Contents = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCallout_Contents)
    ContentsValue = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCallout_ContentsValue)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCallout_Init)
    NbContents = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCallout_NbContents)
    SetContents = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCallout_SetContents)
    SetContentsValue = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCallout_SetContentsValue)

    def __init__(self, *args):
        r"""
        * Returns a DraughtingCallout
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingCallout_swiginit(self, _StepVisual.new_StepVisual_DraughtingCallout(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingCallout_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingCallout

# Register StepVisual_DraughtingCallout in _StepVisual:
_StepVisual.StepVisual_DraughtingCallout_swigregister(StepVisual_DraughtingCallout)

class StepVisual_DraughtingCalloutElement(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AnnotationCurveOccurrence = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCalloutElement_AnnotationCurveOccurrence)
    AnnotationFillAreaOccurrence = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCalloutElement_AnnotationFillAreaOccurrence)
    AnnotationTextOccurrence = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCalloutElement_AnnotationTextOccurrence)

    def __init__(self, *args):
        r"""
        * Returns a DraughtingCalloutElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingCalloutElement_swiginit(self, _StepVisual.new_StepVisual_DraughtingCalloutElement(*args))
    TessellatedAnnotationOccurrence = _swig_new_instance_method(_StepVisual.StepVisual_DraughtingCalloutElement_TessellatedAnnotationOccurrence)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingCalloutElement

# Register StepVisual_DraughtingCalloutElement in _StepVisual:
_StepVisual.StepVisual_DraughtingCalloutElement_swigregister(StepVisual_DraughtingCalloutElement)

class StepVisual_DraughtingModel(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingModel_swiginit(self, _StepVisual.new_StepVisual_DraughtingModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingModel

# Register StepVisual_DraughtingModel in _StepVisual:
_StepVisual.StepVisual_DraughtingModel_swigregister(StepVisual_DraughtingModel)

class StepVisual_ExternallyDefinedCurveFont(OCC.Core.StepBasic.StepBasic_ExternallyDefinedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepVisual.StepVisual_ExternallyDefinedCurveFont_swiginit(self, _StepVisual.new_StepVisual_ExternallyDefinedCurveFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ExternallyDefinedCurveFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ExternallyDefinedCurveFont

# Register StepVisual_ExternallyDefinedCurveFont in _StepVisual:
_StepVisual.StepVisual_ExternallyDefinedCurveFont_swigregister(StepVisual_ExternallyDefinedCurveFont)

class StepVisual_ExternallyDefinedTextFont(OCC.Core.StepBasic.StepBasic_ExternallyDefinedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepVisual.StepVisual_ExternallyDefinedTextFont_swiginit(self, _StepVisual.new_StepVisual_ExternallyDefinedTextFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ExternallyDefinedTextFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ExternallyDefinedTextFont

# Register StepVisual_ExternallyDefinedTextFont in _StepVisual:
_StepVisual.StepVisual_ExternallyDefinedTextFont_swigregister(StepVisual_ExternallyDefinedTextFont)

class StepVisual_FillAreaStyle(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FillStyles = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyle_FillStyles)
    FillStylesValue = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyle_FillStylesValue)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyle_Init)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyle_Name)
    NbFillStyles = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyle_NbFillStyles)
    SetFillStyles = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyle_SetFillStyles)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyle_SetName)

    def __init__(self, *args):
        r"""
        * Returns a FillAreaStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_FillAreaStyle_swiginit(self, _StepVisual.new_StepVisual_FillAreaStyle(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_FillAreaStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_FillAreaStyle

# Register StepVisual_FillAreaStyle in _StepVisual:
_StepVisual.StepVisual_FillAreaStyle_swigregister(StepVisual_FillAreaStyle)

class StepVisual_FillAreaStyleColour(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FillColour = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyleColour_FillColour)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyleColour_Init)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyleColour_Name)
    SetFillColour = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyleColour_SetFillColour)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_FillAreaStyleColour_SetName)

    def __init__(self, *args):
        r"""
        * Returns a FillAreaStyleColour
        	:rtype: None
        """
        _StepVisual.StepVisual_FillAreaStyleColour_swiginit(self, _StepVisual.new_StepVisual_FillAreaStyleColour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_FillAreaStyleColour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_FillAreaStyleColour

# Register StepVisual_FillAreaStyleColour in _StepVisual:
_StepVisual.StepVisual_FillAreaStyleColour_swigregister(StepVisual_FillAreaStyleColour)

class StepVisual_FillStyleSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FillAreaStyleColour = _swig_new_instance_method(_StepVisual.StepVisual_FillStyleSelect_FillAreaStyleColour)

    def __init__(self, *args):
        r"""
        * Returns a FillStyleSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_FillStyleSelect_swiginit(self, _StepVisual.new_StepVisual_FillStyleSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_FillStyleSelect

# Register StepVisual_FillStyleSelect in _StepVisual:
_StepVisual.StepVisual_FillStyleSelect_swigregister(StepVisual_FillStyleSelect)

class StepVisual_FontSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExternallyDefinedTextFont = _swig_new_instance_method(_StepVisual.StepVisual_FontSelect_ExternallyDefinedTextFont)
    PreDefinedTextFont = _swig_new_instance_method(_StepVisual.StepVisual_FontSelect_PreDefinedTextFont)

    def __init__(self, *args):
        r"""
        * Returns a FontSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_FontSelect_swiginit(self, _StepVisual.new_StepVisual_FontSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_FontSelect

# Register StepVisual_FontSelect in _StepVisual:
_StepVisual.StepVisual_FontSelect_swigregister(StepVisual_FontSelect)

class StepVisual_Invisibility(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_Invisibility_Init)
    InvisibleItems = _swig_new_instance_method(_StepVisual.StepVisual_Invisibility_InvisibleItems)
    InvisibleItemsValue = _swig_new_instance_method(_StepVisual.StepVisual_Invisibility_InvisibleItemsValue)
    NbInvisibleItems = _swig_new_instance_method(_StepVisual.StepVisual_Invisibility_NbInvisibleItems)
    SetInvisibleItems = _swig_new_instance_method(_StepVisual.StepVisual_Invisibility_SetInvisibleItems)

    def __init__(self, *args):
        r"""
        * Returns a Invisibility
        	:rtype: None
        """
        _StepVisual.StepVisual_Invisibility_swiginit(self, _StepVisual.new_StepVisual_Invisibility(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_Invisibility_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_Invisibility

# Register StepVisual_Invisibility in _StepVisual:
_StepVisual.StepVisual_Invisibility_swigregister(StepVisual_Invisibility)

class StepVisual_InvisibilityContext(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DraughtingModel = _swig_new_instance_method(_StepVisual.StepVisual_InvisibilityContext_DraughtingModel)
    PresentationRepresentation = _swig_new_instance_method(_StepVisual.StepVisual_InvisibilityContext_PresentationRepresentation)
    PresentationSet = _swig_new_instance_method(_StepVisual.StepVisual_InvisibilityContext_PresentationSet)

    def __init__(self, *args):
        r"""
        * Returns a InvisibilityContext SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_InvisibilityContext_swiginit(self, _StepVisual.new_StepVisual_InvisibilityContext(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_InvisibilityContext

# Register StepVisual_InvisibilityContext in _StepVisual:
_StepVisual.StepVisual_InvisibilityContext_swigregister(StepVisual_InvisibilityContext)

class StepVisual_InvisibleItem(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PresentationLayerAssignment = _swig_new_instance_method(_StepVisual.StepVisual_InvisibleItem_PresentationLayerAssignment)
    PresentationRepresentation = _swig_new_instance_method(_StepVisual.StepVisual_InvisibleItem_PresentationRepresentation)

    def __init__(self, *args):
        r"""
        * Returns a InvisibleItem SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_InvisibleItem_swiginit(self, _StepVisual.new_StepVisual_InvisibleItem(*args))
    StyledItem = _swig_new_instance_method(_StepVisual.StepVisual_InvisibleItem_StyledItem)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_InvisibleItem

# Register StepVisual_InvisibleItem in _StepVisual:
_StepVisual.StepVisual_InvisibleItem_swigregister(StepVisual_InvisibleItem)

class StepVisual_LayeredItem(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PresentationRepresentation = _swig_new_instance_method(_StepVisual.StepVisual_LayeredItem_PresentationRepresentation)
    RepresentationItem = _swig_new_instance_method(_StepVisual.StepVisual_LayeredItem_RepresentationItem)

    def __init__(self, *args):
        r"""
        * Returns a LayeredItem SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_LayeredItem_swiginit(self, _StepVisual.new_StepVisual_LayeredItem(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_LayeredItem

# Register StepVisual_LayeredItem in _StepVisual:
_StepVisual.StepVisual_LayeredItem_swigregister(StepVisual_LayeredItem)

class StepVisual_MarkerMember(OCC.Core.StepData.StepData_SelectInt):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_MarkerMember_SetValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_MarkerMember_swiginit(self, _StepVisual.new_StepVisual_MarkerMember(*args))
    Value = _swig_new_instance_method(_StepVisual.StepVisual_MarkerMember_Value)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_MarkerMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_MarkerMember

# Register StepVisual_MarkerMember in _StepVisual:
_StepVisual.StepVisual_MarkerMember_swigregister(StepVisual_MarkerMember)

class StepVisual_MarkerSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MarkerMember = _swig_new_instance_method(_StepVisual.StepVisual_MarkerSelect_MarkerMember)

    def __init__(self, *args):
        r"""
        * Returns a MarkerSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_MarkerSelect_swiginit(self, _StepVisual.new_StepVisual_MarkerSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_MarkerSelect

# Register StepVisual_MarkerSelect in _StepVisual:
_StepVisual.StepVisual_MarkerSelect_swigregister(StepVisual_MarkerSelect)

class StepVisual_NullStyleMember(OCC.Core.StepData.StepData_SelectInt):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_NullStyleMember_SetName)
    SetValue = _swig_new_instance_method(_StepVisual.StepVisual_NullStyleMember_SetValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_NullStyleMember_swiginit(self, _StepVisual.new_StepVisual_NullStyleMember(*args))
    Value = _swig_new_instance_method(_StepVisual.StepVisual_NullStyleMember_Value)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_NullStyleMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_NullStyleMember

# Register StepVisual_NullStyleMember in _StepVisual:
_StepVisual.StepVisual_NullStyleMember_swigregister(StepVisual_NullStyleMember)

class StepVisual_PlanarExtent(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PlanarExtent_Init)
    SetSizeInX = _swig_new_instance_method(_StepVisual.StepVisual_PlanarExtent_SetSizeInX)
    SetSizeInY = _swig_new_instance_method(_StepVisual.StepVisual_PlanarExtent_SetSizeInY)
    SizeInX = _swig_new_instance_method(_StepVisual.StepVisual_PlanarExtent_SizeInX)
    SizeInY = _swig_new_instance_method(_StepVisual.StepVisual_PlanarExtent_SizeInY)

    def __init__(self, *args):
        r"""
        * Returns a PlanarExtent
        	:rtype: None
        """
        _StepVisual.StepVisual_PlanarExtent_swiginit(self, _StepVisual.new_StepVisual_PlanarExtent(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PlanarExtent_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PlanarExtent

# Register StepVisual_PlanarExtent in _StepVisual:
_StepVisual.StepVisual_PlanarExtent_swigregister(StepVisual_PlanarExtent)

class StepVisual_PointStyle(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PointStyle_Init)
    Marker = _swig_new_instance_method(_StepVisual.StepVisual_PointStyle_Marker)
    MarkerColour = _swig_new_instance_method(_StepVisual.StepVisual_PointStyle_MarkerColour)
    MarkerSize = _swig_new_instance_method(_StepVisual.StepVisual_PointStyle_MarkerSize)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_PointStyle_Name)
    SetMarker = _swig_new_instance_method(_StepVisual.StepVisual_PointStyle_SetMarker)
    SetMarkerColour = _swig_new_instance_method(_StepVisual.StepVisual_PointStyle_SetMarkerColour)
    SetMarkerSize = _swig_new_instance_method(_StepVisual.StepVisual_PointStyle_SetMarkerSize)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_PointStyle_SetName)

    def __init__(self, *args):
        r"""
        * Returns a PointStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_PointStyle_swiginit(self, _StepVisual.new_StepVisual_PointStyle(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PointStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PointStyle

# Register StepVisual_PointStyle in _StepVisual:
_StepVisual.StepVisual_PointStyle_swigregister(StepVisual_PointStyle)

class StepVisual_PreDefinedItem(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PreDefinedItem_Init)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_PreDefinedItem_Name)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_PreDefinedItem_SetName)

    def __init__(self, *args):
        r"""
        * Returns a PreDefinedItem
        	:rtype: None
        """
        _StepVisual.StepVisual_PreDefinedItem_swiginit(self, _StepVisual.new_StepVisual_PreDefinedItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PreDefinedItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PreDefinedItem

# Register StepVisual_PreDefinedItem in _StepVisual:
_StepVisual.StepVisual_PreDefinedItem_swigregister(StepVisual_PreDefinedItem)

class StepVisual_PresentationLayerAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AssignedItems = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerAssignment_AssignedItems)
    AssignedItemsValue = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerAssignment_AssignedItemsValue)
    Description = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerAssignment_Description)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerAssignment_Init)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerAssignment_Name)
    NbAssignedItems = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerAssignment_NbAssignedItems)
    SetAssignedItems = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerAssignment_SetAssignedItems)
    SetDescription = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerAssignment_SetDescription)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerAssignment_SetName)

    def __init__(self, *args):
        r"""
        * Returns a PresentationLayerAssignment
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationLayerAssignment_swiginit(self, _StepVisual.new_StepVisual_PresentationLayerAssignment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationLayerAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationLayerAssignment

# Register StepVisual_PresentationLayerAssignment in _StepVisual:
_StepVisual.StepVisual_PresentationLayerAssignment_swigregister(StepVisual_PresentationLayerAssignment)

class StepVisual_PresentationLayerUsage(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Assignment = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerUsage_Assignment)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerUsage_Init)
    Presentation = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerUsage_Presentation)
    SetAssignment = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerUsage_SetAssignment)
    SetPresentation = _swig_new_instance_method(_StepVisual.StepVisual_PresentationLayerUsage_SetPresentation)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_PresentationLayerUsage_swiginit(self, _StepVisual.new_StepVisual_PresentationLayerUsage(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationLayerUsage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationLayerUsage

# Register StepVisual_PresentationLayerUsage in _StepVisual:
_StepVisual.StepVisual_PresentationLayerUsage_swigregister(StepVisual_PresentationLayerUsage)

class StepVisual_PresentationRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a PresentationRepresentation
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationRepresentation_swiginit(self, _StepVisual.new_StepVisual_PresentationRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationRepresentation

# Register StepVisual_PresentationRepresentation in _StepVisual:
_StepVisual.StepVisual_PresentationRepresentation_swigregister(StepVisual_PresentationRepresentation)

class StepVisual_PresentationRepresentationSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PresentationRepresentation = _swig_new_instance_method(_StepVisual.StepVisual_PresentationRepresentationSelect_PresentationRepresentation)
    PresentationSet = _swig_new_instance_method(_StepVisual.StepVisual_PresentationRepresentationSelect_PresentationSet)

    def __init__(self, *args):
        r"""
        * Returns a PresentationRepresentationSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationRepresentationSelect_swiginit(self, _StepVisual.new_StepVisual_PresentationRepresentationSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationRepresentationSelect

# Register StepVisual_PresentationRepresentationSelect in _StepVisual:
_StepVisual.StepVisual_PresentationRepresentationSelect_swigregister(StepVisual_PresentationRepresentationSelect)

class StepVisual_PresentationSet(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a PresentationSet
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationSet_swiginit(self, _StepVisual.new_StepVisual_PresentationSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationSet

# Register StepVisual_PresentationSet in _StepVisual:
_StepVisual.StepVisual_PresentationSet_swigregister(StepVisual_PresentationSet)

class StepVisual_PresentationSize(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PresentationSize_Init)
    SetSize = _swig_new_instance_method(_StepVisual.StepVisual_PresentationSize_SetSize)
    SetUnit = _swig_new_instance_method(_StepVisual.StepVisual_PresentationSize_SetUnit)
    Size = _swig_new_instance_method(_StepVisual.StepVisual_PresentationSize_Size)

    def __init__(self, *args):
        r"""
        * Returns a PresentationSize
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationSize_swiginit(self, _StepVisual.new_StepVisual_PresentationSize(*args))
    Unit = _swig_new_instance_method(_StepVisual.StepVisual_PresentationSize_Unit)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationSize_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationSize

# Register StepVisual_PresentationSize in _StepVisual:
_StepVisual.StepVisual_PresentationSize_swigregister(StepVisual_PresentationSize)

class StepVisual_PresentationSizeAssignmentSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AreaInSet = _swig_new_instance_method(_StepVisual.StepVisual_PresentationSizeAssignmentSelect_AreaInSet)
    PresentationArea = _swig_new_instance_method(_StepVisual.StepVisual_PresentationSizeAssignmentSelect_PresentationArea)
    PresentationView = _swig_new_instance_method(_StepVisual.StepVisual_PresentationSizeAssignmentSelect_PresentationView)

    def __init__(self, *args):
        r"""
        * Returns a PresentationSizeAssignmentSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationSizeAssignmentSelect_swiginit(self, _StepVisual.new_StepVisual_PresentationSizeAssignmentSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationSizeAssignmentSelect

# Register StepVisual_PresentationSizeAssignmentSelect in _StepVisual:
_StepVisual.StepVisual_PresentationSizeAssignmentSelect_swigregister(StepVisual_PresentationSizeAssignmentSelect)

class StepVisual_PresentationStyleAssignment(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleAssignment_Init)
    NbStyles = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleAssignment_NbStyles)
    SetStyles = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleAssignment_SetStyles)

    def __init__(self, *args):
        r"""
        * Returns a PresentationStyleAssignment
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationStyleAssignment_swiginit(self, _StepVisual.new_StepVisual_PresentationStyleAssignment(*args))
    Styles = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleAssignment_Styles)
    StylesValue = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleAssignment_StylesValue)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationStyleAssignment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationStyleAssignment

# Register StepVisual_PresentationStyleAssignment in _StepVisual:
_StepVisual.StepVisual_PresentationStyleAssignment_swigregister(StepVisual_PresentationStyleAssignment)

class StepVisual_PresentationStyleSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CurveStyle = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleSelect_CurveStyle)
    NullStyle = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleSelect_NullStyle)
    PointStyle = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleSelect_PointStyle)

    def __init__(self, *args):
        r"""
        * Returns a PresentationStyleSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationStyleSelect_swiginit(self, _StepVisual.new_StepVisual_PresentationStyleSelect(*args))
    SurfaceStyleUsage = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleSelect_SurfaceStyleUsage)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationStyleSelect

# Register StepVisual_PresentationStyleSelect in _StepVisual:
_StepVisual.StepVisual_PresentationStyleSelect_swigregister(StepVisual_PresentationStyleSelect)

class StepVisual_PresentedItem(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentedItem_DownCast(t)


    __repr__ = _dumps_object


    def __init__(self):
        _StepVisual.StepVisual_PresentedItem_swiginit(self, _StepVisual.new_StepVisual_PresentedItem())
    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentedItem

# Register StepVisual_PresentedItem in _StepVisual:
_StepVisual.StepVisual_PresentedItem_swigregister(StepVisual_PresentedItem)

class StepVisual_PresentedItemRepresentation(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PresentedItemRepresentation_Init)
    Item = _swig_new_instance_method(_StepVisual.StepVisual_PresentedItemRepresentation_Item)
    Presentation = _swig_new_instance_method(_StepVisual.StepVisual_PresentedItemRepresentation_Presentation)
    SetItem = _swig_new_instance_method(_StepVisual.StepVisual_PresentedItemRepresentation_SetItem)
    SetPresentation = _swig_new_instance_method(_StepVisual.StepVisual_PresentedItemRepresentation_SetPresentation)

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_PresentedItemRepresentation_swiginit(self, _StepVisual.new_StepVisual_PresentedItemRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentedItemRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentedItemRepresentation

# Register StepVisual_PresentedItemRepresentation in _StepVisual:
_StepVisual.StepVisual_PresentedItemRepresentation_swigregister(StepVisual_PresentedItemRepresentation)

class StepVisual_StyleContextSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PresentationSet = _swig_new_instance_method(_StepVisual.StepVisual_StyleContextSelect_PresentationSet)
    Representation = _swig_new_instance_method(_StepVisual.StepVisual_StyleContextSelect_Representation)
    RepresentationItem = _swig_new_instance_method(_StepVisual.StepVisual_StyleContextSelect_RepresentationItem)

    def __init__(self, *args):
        r"""
        * Returns a StyleContextSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_StyleContextSelect_swiginit(self, _StepVisual.new_StepVisual_StyleContextSelect(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_StyleContextSelect

# Register StepVisual_StyleContextSelect in _StepVisual:
_StepVisual.StepVisual_StyleContextSelect_swigregister(StepVisual_StyleContextSelect)

class StepVisual_StyledItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_StyledItem_Init)
    Item = _swig_new_instance_method(_StepVisual.StepVisual_StyledItem_Item)
    ItemAP242 = _swig_new_instance_method(_StepVisual.StepVisual_StyledItem_ItemAP242)
    NbStyles = _swig_new_instance_method(_StepVisual.StepVisual_StyledItem_NbStyles)
    SetItem = _swig_new_instance_method(_StepVisual.StepVisual_StyledItem_SetItem)
    SetStyles = _swig_new_instance_method(_StepVisual.StepVisual_StyledItem_SetStyles)

    def __init__(self, *args):
        r"""
        * Returns a StyledItem
        	:rtype: None
        """
        _StepVisual.StepVisual_StyledItem_swiginit(self, _StepVisual.new_StepVisual_StyledItem(*args))
    Styles = _swig_new_instance_method(_StepVisual.StepVisual_StyledItem_Styles)
    StylesValue = _swig_new_instance_method(_StepVisual.StepVisual_StyledItem_StylesValue)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_StyledItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_StyledItem

# Register StepVisual_StyledItem in _StepVisual:
_StepVisual.StepVisual_StyledItem_swigregister(StepVisual_StyledItem)

class StepVisual_StyledItemTarget(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GeometricRepresentationItem = _swig_new_instance_method(_StepVisual.StepVisual_StyledItemTarget_GeometricRepresentationItem)
    MappedItem = _swig_new_instance_method(_StepVisual.StepVisual_StyledItemTarget_MappedItem)
    Representation = _swig_new_instance_method(_StepVisual.StepVisual_StyledItemTarget_Representation)

    def __init__(self, *args):
        r"""
        * Returns a StyledItemTarget select type
        	:rtype: None
        """
        _StepVisual.StepVisual_StyledItemTarget_swiginit(self, _StepVisual.new_StepVisual_StyledItemTarget(*args))
    TopologicalRepresentationItem = _swig_new_instance_method(_StepVisual.StepVisual_StyledItemTarget_TopologicalRepresentationItem)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_StyledItemTarget

# Register StepVisual_StyledItemTarget in _StepVisual:
_StepVisual.StepVisual_StyledItemTarget_swigregister(StepVisual_StyledItemTarget)

class StepVisual_SurfaceSideStyle(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceSideStyle_Init)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceSideStyle_Name)
    NbStyles = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceSideStyle_NbStyles)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceSideStyle_SetName)
    SetStyles = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceSideStyle_SetStyles)

    def __init__(self, *args):
        r"""
        * Returns a SurfaceSideStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceSideStyle_swiginit(self, _StepVisual.new_StepVisual_SurfaceSideStyle(*args))
    Styles = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceSideStyle_Styles)
    StylesValue = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceSideStyle_StylesValue)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceSideStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceSideStyle

# Register StepVisual_SurfaceSideStyle in _StepVisual:
_StepVisual.StepVisual_SurfaceSideStyle_swigregister(StepVisual_SurfaceSideStyle)

class StepVisual_SurfaceStyleBoundary(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleBoundary_Init)
    SetStyleOfBoundary = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleBoundary_SetStyleOfBoundary)

    def __init__(self, *args):
        r"""
        * Returns a SurfaceStyleBoundary
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleBoundary_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleBoundary(*args))
    StyleOfBoundary = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleBoundary_StyleOfBoundary)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleBoundary_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleBoundary

# Register StepVisual_SurfaceStyleBoundary in _StepVisual:
_StepVisual.StepVisual_SurfaceStyleBoundary_swigregister(StepVisual_SurfaceStyleBoundary)

class StepVisual_SurfaceStyleControlGrid(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleControlGrid_Init)
    SetStyleOfControlGrid = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleControlGrid_SetStyleOfControlGrid)

    def __init__(self, *args):
        r"""
        * Returns a SurfaceStyleControlGrid
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleControlGrid_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleControlGrid(*args))
    StyleOfControlGrid = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleControlGrid_StyleOfControlGrid)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleControlGrid_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleControlGrid

# Register StepVisual_SurfaceStyleControlGrid in _StepVisual:
_StepVisual.StepVisual_SurfaceStyleControlGrid_swigregister(StepVisual_SurfaceStyleControlGrid)

class StepVisual_SurfaceStyleElementSelect(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a SurfaceStyleElementSelect SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleElementSelect_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleElementSelect(*args))
    SurfaceStyleBoundary = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleElementSelect_SurfaceStyleBoundary)
    SurfaceStyleFillArea = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleElementSelect_SurfaceStyleFillArea)
    SurfaceStyleParameterLine = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleElementSelect_SurfaceStyleParameterLine)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleElementSelect

# Register StepVisual_SurfaceStyleElementSelect in _StepVisual:
_StepVisual.StepVisual_SurfaceStyleElementSelect_swigregister(StepVisual_SurfaceStyleElementSelect)

class StepVisual_SurfaceStyleFillArea(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FillArea = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleFillArea_FillArea)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleFillArea_Init)
    SetFillArea = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleFillArea_SetFillArea)

    def __init__(self, *args):
        r"""
        * Returns a SurfaceStyleFillArea
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleFillArea_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleFillArea(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleFillArea_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleFillArea

# Register StepVisual_SurfaceStyleFillArea in _StepVisual:
_StepVisual.StepVisual_SurfaceStyleFillArea_swigregister(StepVisual_SurfaceStyleFillArea)

class StepVisual_SurfaceStyleParameterLine(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DirectionCounts = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleParameterLine_DirectionCounts)
    DirectionCountsValue = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleParameterLine_DirectionCountsValue)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleParameterLine_Init)
    NbDirectionCounts = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleParameterLine_NbDirectionCounts)
    SetDirectionCounts = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleParameterLine_SetDirectionCounts)
    SetStyleOfParameterLines = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleParameterLine_SetStyleOfParameterLines)

    def __init__(self, *args):
        r"""
        * Returns a SurfaceStyleParameterLine
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleParameterLine_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleParameterLine(*args))
    StyleOfParameterLines = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleParameterLine_StyleOfParameterLines)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleParameterLine_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleParameterLine

# Register StepVisual_SurfaceStyleParameterLine in _StepVisual:
_StepVisual.StepVisual_SurfaceStyleParameterLine_swigregister(StepVisual_SurfaceStyleParameterLine)

class StepVisual_SurfaceStyleSegmentationCurve(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleSegmentationCurve_Init)
    SetStyleOfSegmentationCurve = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleSegmentationCurve_SetStyleOfSegmentationCurve)

    def __init__(self, *args):
        r"""
        * Returns a SurfaceStyleSegmentationCurve
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleSegmentationCurve_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleSegmentationCurve(*args))
    StyleOfSegmentationCurve = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleSegmentationCurve_StyleOfSegmentationCurve)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleSegmentationCurve_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleSegmentationCurve

# Register StepVisual_SurfaceStyleSegmentationCurve in _StepVisual:
_StepVisual.StepVisual_SurfaceStyleSegmentationCurve_swigregister(StepVisual_SurfaceStyleSegmentationCurve)

class StepVisual_SurfaceStyleSilhouette(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleSilhouette_Init)
    SetStyleOfSilhouette = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleSilhouette_SetStyleOfSilhouette)

    def __init__(self, *args):
        r"""
        * Returns a SurfaceStyleSilhouette
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleSilhouette_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleSilhouette(*args))
    StyleOfSilhouette = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleSilhouette_StyleOfSilhouette)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleSilhouette_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleSilhouette

# Register StepVisual_SurfaceStyleSilhouette in _StepVisual:
_StepVisual.StepVisual_SurfaceStyleSilhouette_swigregister(StepVisual_SurfaceStyleSilhouette)

class StepVisual_SurfaceStyleUsage(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleUsage_Init)
    SetSide = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleUsage_SetSide)
    SetStyle = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleUsage_SetStyle)
    Side = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleUsage_Side)

    def __init__(self, *args):
        r"""
        * Returns a SurfaceStyleUsage
        	:rtype: None
        """
        _StepVisual.StepVisual_SurfaceStyleUsage_swiginit(self, _StepVisual.new_StepVisual_SurfaceStyleUsage(*args))
    Style = _swig_new_instance_method(_StepVisual.StepVisual_SurfaceStyleUsage_Style)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_SurfaceStyleUsage_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_SurfaceStyleUsage

# Register StepVisual_SurfaceStyleUsage in _StepVisual:
_StepVisual.StepVisual_SurfaceStyleUsage_swigregister(StepVisual_SurfaceStyleUsage)

class StepVisual_Template(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a Template
        	:rtype: None
        """
        _StepVisual.StepVisual_Template_swiginit(self, _StepVisual.new_StepVisual_Template(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_Template_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_Template

# Register StepVisual_Template in _StepVisual:
_StepVisual.StepVisual_Template_swigregister(StepVisual_Template)

class StepVisual_TemplateInstance(OCC.Core.StepRepr.StepRepr_MappedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a TemplateInstance
        	:rtype: None
        """
        _StepVisual.StepVisual_TemplateInstance_swiginit(self, _StepVisual.new_StepVisual_TemplateInstance(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TemplateInstance_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TemplateInstance

# Register StepVisual_TemplateInstance in _StepVisual:
_StepVisual.StepVisual_TemplateInstance_swigregister(StepVisual_TemplateInstance)

class StepVisual_TessellatedItem(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a DraughtingCalloutElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_TessellatedItem_swiginit(self, _StepVisual.new_StepVisual_TessellatedItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TessellatedItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TessellatedItem

# Register StepVisual_TessellatedItem in _StepVisual:
_StepVisual.StepVisual_TessellatedItem_swigregister(StepVisual_TessellatedItem)

class StepVisual_TextLiteral(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Alignment = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_Alignment)
    Font = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_Font)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_Init)
    Literal = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_Literal)
    Path = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_Path)
    Placement = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_Placement)
    SetAlignment = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_SetAlignment)
    SetFont = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_SetFont)
    SetLiteral = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_SetLiteral)
    SetPath = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_SetPath)
    SetPlacement = _swig_new_instance_method(_StepVisual.StepVisual_TextLiteral_SetPlacement)

    def __init__(self, *args):
        r"""
        * Returns a TextLiteral
        	:rtype: None
        """
        _StepVisual.StepVisual_TextLiteral_swiginit(self, _StepVisual.new_StepVisual_TextLiteral(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TextLiteral_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextLiteral

# Register StepVisual_TextLiteral in _StepVisual:
_StepVisual.StepVisual_TextLiteral_swigregister(StepVisual_TextLiteral)

class StepVisual_TextOrCharacter(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AnnotationText = _swig_new_instance_method(_StepVisual.StepVisual_TextOrCharacter_AnnotationText)
    CompositeText = _swig_new_instance_method(_StepVisual.StepVisual_TextOrCharacter_CompositeText)

    def __init__(self, *args):
        r"""
        * Returns a TextOrCharacter SelectType
        	:rtype: None
        """
        _StepVisual.StepVisual_TextOrCharacter_swiginit(self, _StepVisual.new_StepVisual_TextOrCharacter(*args))
    TextLiteral = _swig_new_instance_method(_StepVisual.StepVisual_TextOrCharacter_TextLiteral)

    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextOrCharacter

# Register StepVisual_TextOrCharacter in _StepVisual:
_StepVisual.StepVisual_TextOrCharacter_swigregister(StepVisual_TextOrCharacter)

class StepVisual_TextStyle(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CharacterAppearance = _swig_new_instance_method(_StepVisual.StepVisual_TextStyle_CharacterAppearance)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_TextStyle_Init)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_TextStyle_Name)
    SetCharacterAppearance = _swig_new_instance_method(_StepVisual.StepVisual_TextStyle_SetCharacterAppearance)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_TextStyle_SetName)

    def __init__(self, *args):
        r"""
        * Returns a TextStyle
        	:rtype: None
        """
        _StepVisual.StepVisual_TextStyle_swiginit(self, _StepVisual.new_StepVisual_TextStyle(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TextStyle_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextStyle

# Register StepVisual_TextStyle in _StepVisual:
_StepVisual.StepVisual_TextStyle_swigregister(StepVisual_TextStyle)

class StepVisual_TextStyleForDefinedFont(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_TextStyleForDefinedFont_Init)
    SetTextColour = _swig_new_instance_method(_StepVisual.StepVisual_TextStyleForDefinedFont_SetTextColour)

    def __init__(self, *args):
        r"""
        * Returns a TextStyleForDefinedFont
        	:rtype: None
        """
        _StepVisual.StepVisual_TextStyleForDefinedFont_swiginit(self, _StepVisual.new_StepVisual_TextStyleForDefinedFont(*args))
    TextColour = _swig_new_instance_method(_StepVisual.StepVisual_TextStyleForDefinedFont_TextColour)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TextStyleForDefinedFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextStyleForDefinedFont

# Register StepVisual_TextStyleForDefinedFont in _StepVisual:
_StepVisual.StepVisual_TextStyleForDefinedFont_swigregister(StepVisual_TextStyleForDefinedFont)

class StepVisual_ViewVolume(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BackPlaneClipping = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_BackPlaneClipping)
    BackPlaneDistance = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_BackPlaneDistance)
    FrontPlaneClipping = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_FrontPlaneClipping)
    FrontPlaneDistance = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_FrontPlaneDistance)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_Init)
    ProjectionPoint = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_ProjectionPoint)
    ProjectionType = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_ProjectionType)
    SetBackPlaneClipping = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_SetBackPlaneClipping)
    SetBackPlaneDistance = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_SetBackPlaneDistance)
    SetFrontPlaneClipping = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_SetFrontPlaneClipping)
    SetFrontPlaneDistance = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_SetFrontPlaneDistance)
    SetProjectionPoint = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_SetProjectionPoint)
    SetProjectionType = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_SetProjectionType)
    SetViewPlaneDistance = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_SetViewPlaneDistance)
    SetViewVolumeSidesClipping = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_SetViewVolumeSidesClipping)
    SetViewWindow = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_SetViewWindow)

    def __init__(self, *args):
        r"""
        * Returns a ViewVolume
        	:rtype: None
        """
        _StepVisual.StepVisual_ViewVolume_swiginit(self, _StepVisual.new_StepVisual_ViewVolume(*args))
    ViewPlaneDistance = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_ViewPlaneDistance)
    ViewVolumeSidesClipping = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_ViewVolumeSidesClipping)
    ViewWindow = _swig_new_instance_method(_StepVisual.StepVisual_ViewVolume_ViewWindow)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ViewVolume_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ViewVolume

# Register StepVisual_ViewVolume in _StepVisual:
_StepVisual.StepVisual_ViewVolume_swigregister(StepVisual_ViewVolume)

class StepVisual_AnnotationOccurrence(StepVisual_StyledItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a AnnotationOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationOccurrence_swiginit(self, _StepVisual.new_StepVisual_AnnotationOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationOccurrence

# Register StepVisual_AnnotationOccurrence in _StepVisual:
_StepVisual.StepVisual_AnnotationOccurrence_swigregister(StepVisual_AnnotationOccurrence)

class StepVisual_BackgroundColour(StepVisual_Colour):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_BackgroundColour_Init)
    Presentation = _swig_new_instance_method(_StepVisual.StepVisual_BackgroundColour_Presentation)
    SetPresentation = _swig_new_instance_method(_StepVisual.StepVisual_BackgroundColour_SetPresentation)

    def __init__(self, *args):
        r"""
        * Returns a BackgroundColour
        	:rtype: None
        """
        _StepVisual.StepVisual_BackgroundColour_swiginit(self, _StepVisual.new_StepVisual_BackgroundColour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_BackgroundColour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_BackgroundColour

# Register StepVisual_BackgroundColour in _StepVisual:
_StepVisual.StepVisual_BackgroundColour_swigregister(StepVisual_BackgroundColour)

class StepVisual_CameraImage2dWithScale(StepVisual_CameraImage):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_CameraImage2dWithScale_swiginit(self, _StepVisual.new_StepVisual_CameraImage2dWithScale(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraImage2dWithScale_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraImage2dWithScale

# Register StepVisual_CameraImage2dWithScale in _StepVisual:
_StepVisual.StepVisual_CameraImage2dWithScale_swigregister(StepVisual_CameraImage2dWithScale)

class StepVisual_CameraImage3dWithScale(StepVisual_CameraImage):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_CameraImage3dWithScale_swiginit(self, _StepVisual.new_StepVisual_CameraImage3dWithScale(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraImage3dWithScale_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraImage3dWithScale

# Register StepVisual_CameraImage3dWithScale in _StepVisual:
_StepVisual.StepVisual_CameraImage3dWithScale_swigregister(StepVisual_CameraImage3dWithScale)

class StepVisual_CameraModelD2(StepVisual_CameraModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD2_Init)
    SetViewWindow = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD2_SetViewWindow)
    SetViewWindowClipping = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD2_SetViewWindowClipping)

    def __init__(self, *args):
        r"""
        * Returns a CameraModelD2
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD2_swiginit(self, _StepVisual.new_StepVisual_CameraModelD2(*args))
    ViewWindow = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD2_ViewWindow)
    ViewWindowClipping = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD2_ViewWindowClipping)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD2_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD2

# Register StepVisual_CameraModelD2 in _StepVisual:
_StepVisual.StepVisual_CameraModelD2_swigregister(StepVisual_CameraModelD2)

class StepVisual_CameraModelD3(StepVisual_CameraModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3_Init)
    PerspectiveOfVolume = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3_PerspectiveOfVolume)
    SetPerspectiveOfVolume = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3_SetPerspectiveOfVolume)
    SetViewReferenceSystem = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3_SetViewReferenceSystem)

    def __init__(self, *args):
        r"""
        * Returns a CameraModelD3
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3(*args))
    ViewReferenceSystem = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3_ViewReferenceSystem)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD3_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3

# Register StepVisual_CameraModelD3 in _StepVisual:
_StepVisual.StepVisual_CameraModelD3_swigregister(StepVisual_CameraModelD3)

class StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation(StepVisual_DraughtingModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_swiginit(self, _StepVisual.new_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation

# Register StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation in _StepVisual:
_StepVisual.StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation_swigregister(StepVisual_CharacterizedObjectAndCharacterizedRepresentationAndDraughtingModelAndRepresentation)

class StepVisual_ColourSpecification(StepVisual_Colour):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_ColourSpecification_Init)
    Name = _swig_new_instance_method(_StepVisual.StepVisual_ColourSpecification_Name)
    SetName = _swig_new_instance_method(_StepVisual.StepVisual_ColourSpecification_SetName)

    def __init__(self, *args):
        r"""
        * Returns a ColourSpecification
        	:rtype: None
        """
        _StepVisual.StepVisual_ColourSpecification_swiginit(self, _StepVisual.new_StepVisual_ColourSpecification(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ColourSpecification_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ColourSpecification

# Register StepVisual_ColourSpecification in _StepVisual:
_StepVisual.StepVisual_ColourSpecification_swigregister(StepVisual_ColourSpecification)

class StepVisual_CompositeTextWithExtent(StepVisual_CompositeText):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Extent = _swig_new_instance_method(_StepVisual.StepVisual_CompositeTextWithExtent_Extent)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CompositeTextWithExtent_Init)
    SetExtent = _swig_new_instance_method(_StepVisual.StepVisual_CompositeTextWithExtent_SetExtent)

    def __init__(self, *args):
        r"""
        * Returns a CompositeTextWithExtent
        	:rtype: None
        """
        _StepVisual.StepVisual_CompositeTextWithExtent_swiginit(self, _StepVisual.new_StepVisual_CompositeTextWithExtent(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CompositeTextWithExtent_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CompositeTextWithExtent

# Register StepVisual_CompositeTextWithExtent in _StepVisual:
_StepVisual.StepVisual_CompositeTextWithExtent_swigregister(StepVisual_CompositeTextWithExtent)

class StepVisual_ContextDependentInvisibility(StepVisual_Invisibility):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_ContextDependentInvisibility_Init)
    PresentationContext = _swig_new_instance_method(_StepVisual.StepVisual_ContextDependentInvisibility_PresentationContext)
    SetPresentationContext = _swig_new_instance_method(_StepVisual.StepVisual_ContextDependentInvisibility_SetPresentationContext)

    def __init__(self, *args):
        r"""
        * Returns a ContextDependentInvisibility
        	:rtype: None
        """
        _StepVisual.StepVisual_ContextDependentInvisibility_swiginit(self, _StepVisual.new_StepVisual_ContextDependentInvisibility(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ContextDependentInvisibility_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ContextDependentInvisibility

# Register StepVisual_ContextDependentInvisibility in _StepVisual:
_StepVisual.StepVisual_ContextDependentInvisibility_swigregister(StepVisual_ContextDependentInvisibility)

class StepVisual_CoordinatesList(StepVisual_TessellatedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CoordinatesList_Init)
    Points = _swig_new_instance_method(_StepVisual.StepVisual_CoordinatesList_Points)

    def __init__(self, *args):
        r"""
        * Returns a coordinate list
        	:rtype: None
        """
        _StepVisual.StepVisual_CoordinatesList_swiginit(self, _StepVisual.new_StepVisual_CoordinatesList(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CoordinatesList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CoordinatesList

# Register StepVisual_CoordinatesList in _StepVisual:
_StepVisual.StepVisual_CoordinatesList_swigregister(StepVisual_CoordinatesList)

class StepVisual_MechanicalDesignGeometricPresentationRepresentation(StepVisual_PresentationRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a MechanicalDesignGeometricPresentationRepresentation
        	:rtype: None
        """
        _StepVisual.StepVisual_MechanicalDesignGeometricPresentationRepresentation_swiginit(self, _StepVisual.new_StepVisual_MechanicalDesignGeometricPresentationRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_MechanicalDesignGeometricPresentationRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_MechanicalDesignGeometricPresentationRepresentation

# Register StepVisual_MechanicalDesignGeometricPresentationRepresentation in _StepVisual:
_StepVisual.StepVisual_MechanicalDesignGeometricPresentationRepresentation_swigregister(StepVisual_MechanicalDesignGeometricPresentationRepresentation)

class StepVisual_OverRidingStyledItem(StepVisual_StyledItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_OverRidingStyledItem_Init)
    OverRiddenStyle = _swig_new_instance_method(_StepVisual.StepVisual_OverRidingStyledItem_OverRiddenStyle)
    SetOverRiddenStyle = _swig_new_instance_method(_StepVisual.StepVisual_OverRidingStyledItem_SetOverRiddenStyle)

    def __init__(self, *args):
        r"""
        * Returns a OverRidingStyledItem
        	:rtype: None
        """
        _StepVisual.StepVisual_OverRidingStyledItem_swiginit(self, _StepVisual.new_StepVisual_OverRidingStyledItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_OverRidingStyledItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_OverRidingStyledItem

# Register StepVisual_OverRidingStyledItem in _StepVisual:
_StepVisual.StepVisual_OverRidingStyledItem_swigregister(StepVisual_OverRidingStyledItem)

class StepVisual_PlanarBox(StepVisual_PlanarExtent):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PlanarBox_Init)
    Placement = _swig_new_instance_method(_StepVisual.StepVisual_PlanarBox_Placement)
    SetPlacement = _swig_new_instance_method(_StepVisual.StepVisual_PlanarBox_SetPlacement)

    def __init__(self, *args):
        r"""
        * Returns a PlanarBox
        	:rtype: None
        """
        _StepVisual.StepVisual_PlanarBox_swiginit(self, _StepVisual.new_StepVisual_PlanarBox(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PlanarBox_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PlanarBox

# Register StepVisual_PlanarBox in _StepVisual:
_StepVisual.StepVisual_PlanarBox_swigregister(StepVisual_PlanarBox)

class StepVisual_PreDefinedColour(StepVisual_Colour):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetPreDefinedItem = _swig_new_instance_method(_StepVisual.StepVisual_PreDefinedColour_GetPreDefinedItem)
    SetPreDefinedItem = _swig_new_instance_method(_StepVisual.StepVisual_PreDefinedColour_SetPreDefinedItem)

    def __init__(self, *args):
        r"""
        * Returns a PreDefinedColour
        	:rtype: None
        """
        _StepVisual.StepVisual_PreDefinedColour_swiginit(self, _StepVisual.new_StepVisual_PreDefinedColour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PreDefinedColour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PreDefinedColour

# Register StepVisual_PreDefinedColour in _StepVisual:
_StepVisual.StepVisual_PreDefinedColour_swigregister(StepVisual_PreDefinedColour)

class StepVisual_PreDefinedCurveFont(StepVisual_PreDefinedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a PreDefinedCurveFont
        	:rtype: None
        """
        _StepVisual.StepVisual_PreDefinedCurveFont_swiginit(self, _StepVisual.new_StepVisual_PreDefinedCurveFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PreDefinedCurveFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PreDefinedCurveFont

# Register StepVisual_PreDefinedCurveFont in _StepVisual:
_StepVisual.StepVisual_PreDefinedCurveFont_swigregister(StepVisual_PreDefinedCurveFont)

class StepVisual_PreDefinedTextFont(StepVisual_PreDefinedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a PreDefinedTextFont
        	:rtype: None
        """
        _StepVisual.StepVisual_PreDefinedTextFont_swiginit(self, _StepVisual.new_StepVisual_PreDefinedTextFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PreDefinedTextFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PreDefinedTextFont

# Register StepVisual_PreDefinedTextFont in _StepVisual:
_StepVisual.StepVisual_PreDefinedTextFont_swigregister(StepVisual_PreDefinedTextFont)

class StepVisual_PresentationArea(StepVisual_PresentationRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a PresentationArea
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationArea_swiginit(self, _StepVisual.new_StepVisual_PresentationArea(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationArea_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationArea

# Register StepVisual_PresentationArea in _StepVisual:
_StepVisual.StepVisual_PresentationArea_swigregister(StepVisual_PresentationArea)

class StepVisual_PresentationStyleByContext(StepVisual_PresentationStyleAssignment):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleByContext_Init)
    SetStyleContext = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleByContext_SetStyleContext)

    def __init__(self, *args):
        r"""
        * Returns a PresentationStyleByContext
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationStyleByContext_swiginit(self, _StepVisual.new_StepVisual_PresentationStyleByContext(*args))
    StyleContext = _swig_new_instance_method(_StepVisual.StepVisual_PresentationStyleByContext_StyleContext)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationStyleByContext_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationStyleByContext

# Register StepVisual_PresentationStyleByContext in _StepVisual:
_StepVisual.StepVisual_PresentationStyleByContext_swigregister(StepVisual_PresentationStyleByContext)

class StepVisual_PresentationView(StepVisual_PresentationRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a PresentationView
        	:rtype: None
        """
        _StepVisual.StepVisual_PresentationView_swiginit(self, _StepVisual.new_StepVisual_PresentationView(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_PresentationView_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_PresentationView

# Register StepVisual_PresentationView in _StepVisual:
_StepVisual.StepVisual_PresentationView_swigregister(StepVisual_PresentationView)

class StepVisual_TessellatedAnnotationOccurrence(StepVisual_StyledItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a TesselatedAnnotationOccurence
        	:rtype: None
        """
        _StepVisual.StepVisual_TessellatedAnnotationOccurrence_swiginit(self, _StepVisual.new_StepVisual_TessellatedAnnotationOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TessellatedAnnotationOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TessellatedAnnotationOccurrence

# Register StepVisual_TessellatedAnnotationOccurrence in _StepVisual:
_StepVisual.StepVisual_TessellatedAnnotationOccurrence_swigregister(StepVisual_TessellatedAnnotationOccurrence)

class StepVisual_TessellatedCurveSet(StepVisual_TessellatedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CoordList = _swig_new_instance_method(_StepVisual.StepVisual_TessellatedCurveSet_CoordList)
    Curves = _swig_new_instance_method(_StepVisual.StepVisual_TessellatedCurveSet_Curves)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_TessellatedCurveSet_Init)

    def __init__(self, *args):
        r"""
        * Returns a DraughtingCalloutElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_TessellatedCurveSet_swiginit(self, _StepVisual.new_StepVisual_TessellatedCurveSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TessellatedCurveSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TessellatedCurveSet

# Register StepVisual_TessellatedCurveSet in _StepVisual:
_StepVisual.StepVisual_TessellatedCurveSet_swigregister(StepVisual_TessellatedCurveSet)

class StepVisual_TessellatedGeometricSet(StepVisual_TessellatedItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_TessellatedGeometricSet_Init)
    Items = _swig_new_instance_method(_StepVisual.StepVisual_TessellatedGeometricSet_Items)

    def __init__(self, *args):
        r"""
        * Returns a DraughtingCalloutElement select type
        	:rtype: None
        """
        _StepVisual.StepVisual_TessellatedGeometricSet_swiginit(self, _StepVisual.new_StepVisual_TessellatedGeometricSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TessellatedGeometricSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TessellatedGeometricSet

# Register StepVisual_TessellatedGeometricSet in _StepVisual:
_StepVisual.StepVisual_TessellatedGeometricSet_swigregister(StepVisual_TessellatedGeometricSet)

class StepVisual_TextStyleWithBoxCharacteristics(StepVisual_TextStyle):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Characteristics = _swig_new_instance_method(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_Characteristics)
    CharacteristicsValue = _swig_new_instance_method(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_CharacteristicsValue)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_Init)
    NbCharacteristics = _swig_new_instance_method(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_NbCharacteristics)
    SetCharacteristics = _swig_new_instance_method(_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_SetCharacteristics)

    def __init__(self, *args):
        r"""
        * Returns a TextStyleWithBoxCharacteristics
        	:rtype: None
        """
        _StepVisual.StepVisual_TextStyleWithBoxCharacteristics_swiginit(self, _StepVisual.new_StepVisual_TextStyleWithBoxCharacteristics(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_TextStyleWithBoxCharacteristics_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_TextStyleWithBoxCharacteristics

# Register StepVisual_TextStyleWithBoxCharacteristics in _StepVisual:
_StepVisual.StepVisual_TextStyleWithBoxCharacteristics_swigregister(StepVisual_TextStyleWithBoxCharacteristics)

class StepVisual_AnnotationCurveOccurrence(StepVisual_AnnotationOccurrence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a AnnotationCurveOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationCurveOccurrence_swiginit(self, _StepVisual.new_StepVisual_AnnotationCurveOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationCurveOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationCurveOccurrence

# Register StepVisual_AnnotationCurveOccurrence in _StepVisual:
_StepVisual.StepVisual_AnnotationCurveOccurrence_swigregister(StepVisual_AnnotationCurveOccurrence)

class StepVisual_AnnotationFillAreaOccurrence(StepVisual_AnnotationOccurrence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FillStyleTarget = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationFillAreaOccurrence_FillStyleTarget)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationFillAreaOccurrence_Init)
    SetFillStyleTarget = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationFillAreaOccurrence_SetFillStyleTarget)

    def __init__(self, *args):
        r"""
        * Returns a AnnotationFillAreaOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationFillAreaOccurrence_swiginit(self, _StepVisual.new_StepVisual_AnnotationFillAreaOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationFillAreaOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationFillAreaOccurrence

# Register StepVisual_AnnotationFillAreaOccurrence in _StepVisual:
_StepVisual.StepVisual_AnnotationFillAreaOccurrence_swigregister(StepVisual_AnnotationFillAreaOccurrence)

class StepVisual_AnnotationPlane(StepVisual_AnnotationOccurrence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Elements = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationPlane_Elements)
    ElementsValue = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationPlane_ElementsValue)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationPlane_Init)
    NbElements = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationPlane_NbElements)
    SetElements = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationPlane_SetElements)
    SetElementsValue = _swig_new_instance_method(_StepVisual.StepVisual_AnnotationPlane_SetElementsValue)

    def __init__(self, *args):
        r"""
        * Returns a AnnotationPlane
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationPlane_swiginit(self, _StepVisual.new_StepVisual_AnnotationPlane(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationPlane_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationPlane

# Register StepVisual_AnnotationPlane in _StepVisual:
_StepVisual.StepVisual_AnnotationPlane_swigregister(StepVisual_AnnotationPlane)

class StepVisual_AnnotationTextOccurrence(StepVisual_AnnotationOccurrence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a AnnotationTextOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_AnnotationTextOccurrence_swiginit(self, _StepVisual.new_StepVisual_AnnotationTextOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationTextOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationTextOccurrence

# Register StepVisual_AnnotationTextOccurrence in _StepVisual:
_StepVisual.StepVisual_AnnotationTextOccurrence_swigregister(StepVisual_AnnotationTextOccurrence)

class StepVisual_CameraModelD3MultiClipping(StepVisual_CameraModelD3):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClipping_Init)
    SetShapeClipping = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClipping_SetShapeClipping)
    ShapeClipping = _swig_new_instance_method(_StepVisual.StepVisual_CameraModelD3MultiClipping_ShapeClipping)

    def __init__(self, *args):
        r"""
        * Returns a CameraModelD3MultiClipping
        	:rtype: None
        """
        _StepVisual.StepVisual_CameraModelD3MultiClipping_swiginit(self, _StepVisual.new_StepVisual_CameraModelD3MultiClipping(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_CameraModelD3MultiClipping_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_CameraModelD3MultiClipping

# Register StepVisual_CameraModelD3MultiClipping in _StepVisual:
_StepVisual.StepVisual_CameraModelD3MultiClipping_swigregister(StepVisual_CameraModelD3MultiClipping)

class StepVisual_ColourRgb(StepVisual_ColourSpecification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Blue = _swig_new_instance_method(_StepVisual.StepVisual_ColourRgb_Blue)
    Green = _swig_new_instance_method(_StepVisual.StepVisual_ColourRgb_Green)
    Init = _swig_new_instance_method(_StepVisual.StepVisual_ColourRgb_Init)
    Red = _swig_new_instance_method(_StepVisual.StepVisual_ColourRgb_Red)
    SetBlue = _swig_new_instance_method(_StepVisual.StepVisual_ColourRgb_SetBlue)
    SetGreen = _swig_new_instance_method(_StepVisual.StepVisual_ColourRgb_SetGreen)
    SetRed = _swig_new_instance_method(_StepVisual.StepVisual_ColourRgb_SetRed)

    def __init__(self, *args):
        r"""
        * Returns a ColourRgb
        	:rtype: None
        """
        _StepVisual.StepVisual_ColourRgb_swiginit(self, _StepVisual.new_StepVisual_ColourRgb(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ColourRgb_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ColourRgb

# Register StepVisual_ColourRgb in _StepVisual:
_StepVisual.StepVisual_ColourRgb_swigregister(StepVisual_ColourRgb)

class StepVisual_ContextDependentOverRidingStyledItem(StepVisual_OverRidingStyledItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_Init)
    NbStyleContext = _swig_new_instance_method(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_NbStyleContext)
    SetStyleContext = _swig_new_instance_method(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_SetStyleContext)

    def __init__(self, *args):
        r"""
        * Returns a ContextDependentOverRidingStyledItem
        	:rtype: None
        """
        _StepVisual.StepVisual_ContextDependentOverRidingStyledItem_swiginit(self, _StepVisual.new_StepVisual_ContextDependentOverRidingStyledItem(*args))
    StyleContext = _swig_new_instance_method(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_StyleContext)
    StyleContextValue = _swig_new_instance_method(_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_StyleContextValue)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_ContextDependentOverRidingStyledItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_ContextDependentOverRidingStyledItem

# Register StepVisual_ContextDependentOverRidingStyledItem in _StepVisual:
_StepVisual.StepVisual_ContextDependentOverRidingStyledItem_swigregister(StepVisual_ContextDependentOverRidingStyledItem)

class StepVisual_DraughtingAnnotationOccurrence(StepVisual_AnnotationOccurrence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a DraughtingAnnotationOccurrence
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingAnnotationOccurrence_swiginit(self, _StepVisual.new_StepVisual_DraughtingAnnotationOccurrence(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingAnnotationOccurrence_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingAnnotationOccurrence

# Register StepVisual_DraughtingAnnotationOccurrence in _StepVisual:
_StepVisual.StepVisual_DraughtingAnnotationOccurrence_swigregister(StepVisual_DraughtingAnnotationOccurrence)

class StepVisual_DraughtingPreDefinedColour(StepVisual_PreDefinedColour):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a DraughtingPreDefinedColour
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingPreDefinedColour_swiginit(self, _StepVisual.new_StepVisual_DraughtingPreDefinedColour(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingPreDefinedColour_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingPreDefinedColour

# Register StepVisual_DraughtingPreDefinedColour in _StepVisual:
_StepVisual.StepVisual_DraughtingPreDefinedColour_swigregister(StepVisual_DraughtingPreDefinedColour)

class StepVisual_DraughtingPreDefinedCurveFont(StepVisual_PreDefinedCurveFont):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a DraughtingPreDefinedCurveFont
        	:rtype: None
        """
        _StepVisual.StepVisual_DraughtingPreDefinedCurveFont_swiginit(self, _StepVisual.new_StepVisual_DraughtingPreDefinedCurveFont(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_DraughtingPreDefinedCurveFont_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_DraughtingPreDefinedCurveFont

# Register StepVisual_DraughtingPreDefinedCurveFont in _StepVisual:
_StepVisual.StepVisual_DraughtingPreDefinedCurveFont_swigregister(StepVisual_DraughtingPreDefinedCurveFont)

class StepVisual_MechanicalDesignGeometricPresentationArea(StepVisual_PresentationArea):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a MechanicalDesignGeometricPresentationArea
        	:rtype: None
        """
        _StepVisual.StepVisual_MechanicalDesignGeometricPresentationArea_swiginit(self, _StepVisual.new_StepVisual_MechanicalDesignGeometricPresentationArea(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_MechanicalDesignGeometricPresentationArea_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_MechanicalDesignGeometricPresentationArea

# Register StepVisual_MechanicalDesignGeometricPresentationArea in _StepVisual:
_StepVisual.StepVisual_MechanicalDesignGeometricPresentationArea_swigregister(StepVisual_MechanicalDesignGeometricPresentationArea)

class StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem(StepVisual_AnnotationCurveOccurrence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r""":rtype: None"""
        _StepVisual.StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_swiginit(self, _StepVisual.new_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepVisual.delete_StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem

# Register StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem in _StepVisual:
_StepVisual.StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem_swigregister(StepVisual_AnnotationCurveOccurrenceAndAnnotationOccurrenceAndGeomReprItemAndReprItemAndStyledItem)

class StepVisual_HArray1OfAnnotationPlaneElement(StepVisual_Array1OfAnnotationPlaneElement, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfAnnotationPlaneElement_swiginit(self, _StepVisual.new_StepVisual_HArray1OfAnnotationPlaneElement(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfAnnotationPlaneElement_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfAnnotationPlaneElement_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfAnnotationPlaneElement_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfAnnotationPlaneElement

# Register StepVisual_HArray1OfAnnotationPlaneElement in _StepVisual:
_StepVisual.StepVisual_HArray1OfAnnotationPlaneElement_swigregister(StepVisual_HArray1OfAnnotationPlaneElement)

class StepVisual_HArray1OfDraughtingCalloutElement(StepVisual_Array1OfDraughtingCalloutElement, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfDraughtingCalloutElement_swiginit(self, _StepVisual.new_StepVisual_HArray1OfDraughtingCalloutElement(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfDraughtingCalloutElement_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfDraughtingCalloutElement_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfDraughtingCalloutElement_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfDraughtingCalloutElement

# Register StepVisual_HArray1OfDraughtingCalloutElement in _StepVisual:
_StepVisual.StepVisual_HArray1OfDraughtingCalloutElement_swigregister(StepVisual_HArray1OfDraughtingCalloutElement)

class StepVisual_HArray1OfDirectionCountSelect(StepVisual_Array1OfDirectionCountSelect, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfDirectionCountSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfDirectionCountSelect(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfDirectionCountSelect_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfDirectionCountSelect_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfDirectionCountSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfDirectionCountSelect

# Register StepVisual_HArray1OfDirectionCountSelect in _StepVisual:
_StepVisual.StepVisual_HArray1OfDirectionCountSelect_swigregister(StepVisual_HArray1OfDirectionCountSelect)

class StepVisual_HArray1OfStyleContextSelect(StepVisual_Array1OfStyleContextSelect, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfStyleContextSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfStyleContextSelect(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfStyleContextSelect_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfStyleContextSelect_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfStyleContextSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfStyleContextSelect

# Register StepVisual_HArray1OfStyleContextSelect in _StepVisual:
_StepVisual.StepVisual_HArray1OfStyleContextSelect_swigregister(StepVisual_HArray1OfStyleContextSelect)

class StepVisual_HArray1OfPresentationStyleSelect(StepVisual_Array1OfPresentationStyleSelect, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfPresentationStyleSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfPresentationStyleSelect(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfPresentationStyleSelect_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfPresentationStyleSelect_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfPresentationStyleSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfPresentationStyleSelect

# Register StepVisual_HArray1OfPresentationStyleSelect in _StepVisual:
_StepVisual.StepVisual_HArray1OfPresentationStyleSelect_swigregister(StepVisual_HArray1OfPresentationStyleSelect)

class StepVisual_HArray1OfCurveStyleFontPattern(StepVisual_Array1OfCurveStyleFontPattern, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfCurveStyleFontPattern_swiginit(self, _StepVisual.new_StepVisual_HArray1OfCurveStyleFontPattern(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfCurveStyleFontPattern_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfCurveStyleFontPattern_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfCurveStyleFontPattern_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfCurveStyleFontPattern

# Register StepVisual_HArray1OfCurveStyleFontPattern in _StepVisual:
_StepVisual.StepVisual_HArray1OfCurveStyleFontPattern_swigregister(StepVisual_HArray1OfCurveStyleFontPattern)

class StepVisual_HArray1OfBoxCharacteristicSelect(StepVisual_Array1OfBoxCharacteristicSelect, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfBoxCharacteristicSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfBoxCharacteristicSelect(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfBoxCharacteristicSelect_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfBoxCharacteristicSelect_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfBoxCharacteristicSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfBoxCharacteristicSelect

# Register StepVisual_HArray1OfBoxCharacteristicSelect in _StepVisual:
_StepVisual.StepVisual_HArray1OfBoxCharacteristicSelect_swigregister(StepVisual_HArray1OfBoxCharacteristicSelect)

class StepVisual_HArray1OfPresentationStyleAssignment(StepVisual_Array1OfPresentationStyleAssignment, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfPresentationStyleAssignment_swiginit(self, _StepVisual.new_StepVisual_HArray1OfPresentationStyleAssignment(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfPresentationStyleAssignment_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfPresentationStyleAssignment_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfPresentationStyleAssignment_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfPresentationStyleAssignment

# Register StepVisual_HArray1OfPresentationStyleAssignment in _StepVisual:
_StepVisual.StepVisual_HArray1OfPresentationStyleAssignment_swigregister(StepVisual_HArray1OfPresentationStyleAssignment)

class StepVisual_HArray1OfFillStyleSelect(StepVisual_Array1OfFillStyleSelect, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfFillStyleSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfFillStyleSelect(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfFillStyleSelect_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfFillStyleSelect_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfFillStyleSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfFillStyleSelect

# Register StepVisual_HArray1OfFillStyleSelect in _StepVisual:
_StepVisual.StepVisual_HArray1OfFillStyleSelect_swigregister(StepVisual_HArray1OfFillStyleSelect)

class StepVisual_HArray1OfTextOrCharacter(StepVisual_Array1OfTextOrCharacter, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfTextOrCharacter_swiginit(self, _StepVisual.new_StepVisual_HArray1OfTextOrCharacter(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfTextOrCharacter_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfTextOrCharacter_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfTextOrCharacter_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfTextOrCharacter

# Register StepVisual_HArray1OfTextOrCharacter in _StepVisual:
_StepVisual.StepVisual_HArray1OfTextOrCharacter_swigregister(StepVisual_HArray1OfTextOrCharacter)

class StepVisual_HArray1OfSurfaceStyleElementSelect(StepVisual_Array1OfSurfaceStyleElementSelect, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfSurfaceStyleElementSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfSurfaceStyleElementSelect(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfSurfaceStyleElementSelect_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfSurfaceStyleElementSelect_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfSurfaceStyleElementSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfSurfaceStyleElementSelect

# Register StepVisual_HArray1OfSurfaceStyleElementSelect in _StepVisual:
_StepVisual.StepVisual_HArray1OfSurfaceStyleElementSelect_swigregister(StepVisual_HArray1OfSurfaceStyleElementSelect)

class StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect(StepVisual_Array1OfCameraModelD3MultiClippingUnionSelect, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect

# Register StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect in _StepVisual:
_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect_swigregister(StepVisual_HArray1OfCameraModelD3MultiClippingUnionSelect)

class StepVisual_HArray1OfLayeredItem(StepVisual_Array1OfLayeredItem, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfLayeredItem_swiginit(self, _StepVisual.new_StepVisual_HArray1OfLayeredItem(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfLayeredItem_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfLayeredItem_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfLayeredItem_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfLayeredItem

# Register StepVisual_HArray1OfLayeredItem in _StepVisual:
_StepVisual.StepVisual_HArray1OfLayeredItem_swigregister(StepVisual_HArray1OfLayeredItem)

class StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect(StepVisual_Array1OfCameraModelD3MultiClippingInterectionSelect, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_swiginit(self, _StepVisual.new_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect

# Register StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect in _StepVisual:
_StepVisual.StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect_swigregister(StepVisual_HArray1OfCameraModelD3MultiClippingInterectionSelect)

class StepVisual_HArray1OfInvisibleItem(StepVisual_Array1OfInvisibleItem, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepVisual.StepVisual_HArray1OfInvisibleItem_swiginit(self, _StepVisual.new_StepVisual_HArray1OfInvisibleItem(*args))
    Array1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfInvisibleItem_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepVisual.StepVisual_HArray1OfInvisibleItem_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepVisual_HArray1OfInvisibleItem_DownCast(t)

    __swig_destroy__ = _StepVisual.delete_StepVisual_HArray1OfInvisibleItem

# Register StepVisual_HArray1OfInvisibleItem in _StepVisual:
_StepVisual.StepVisual_HArray1OfInvisibleItem_swigregister(StepVisual_HArray1OfInvisibleItem)



