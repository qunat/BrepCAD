# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
XmlTObjDrivers module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_xmltobjdrivers.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _XmlTObjDrivers
else:
    import _XmlTObjDrivers

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _XmlTObjDrivers.SWIG_PyInstanceMethod_New
_swig_new_static_method = _XmlTObjDrivers.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _XmlTObjDrivers.delete_SwigPyIterator
    value = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator_value)
    incr = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator_copy)
    next = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_XmlTObjDrivers.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _XmlTObjDrivers:
_XmlTObjDrivers.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.XmlMDF
import OCC.Core.Message
import OCC.Core.TDF
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.XmlObjMgt
import OCC.Core.LDOM
import OCC.Core.gp
import OCC.Core.Storage
import OCC.Core.TDocStd
import OCC.Core.CDF
import OCC.Core.CDM
import OCC.Core.Resource
import OCC.Core.PCDM
import OCC.Core.XmlLDrivers
Handle_XmlTObjDrivers_DocumentRetrievalDriver_Create = _XmlTObjDrivers.Handle_XmlTObjDrivers_DocumentRetrievalDriver_Create
Handle_XmlTObjDrivers_DocumentRetrievalDriver_DownCast = _XmlTObjDrivers.Handle_XmlTObjDrivers_DocumentRetrievalDriver_DownCast
Handle_XmlTObjDrivers_DocumentRetrievalDriver_IsNull = _XmlTObjDrivers.Handle_XmlTObjDrivers_DocumentRetrievalDriver_IsNull
Handle_XmlTObjDrivers_DocumentStorageDriver_Create = _XmlTObjDrivers.Handle_XmlTObjDrivers_DocumentStorageDriver_Create
Handle_XmlTObjDrivers_DocumentStorageDriver_DownCast = _XmlTObjDrivers.Handle_XmlTObjDrivers_DocumentStorageDriver_DownCast
Handle_XmlTObjDrivers_DocumentStorageDriver_IsNull = _XmlTObjDrivers.Handle_XmlTObjDrivers_DocumentStorageDriver_IsNull
Handle_XmlTObjDrivers_IntSparseArrayDriver_Create = _XmlTObjDrivers.Handle_XmlTObjDrivers_IntSparseArrayDriver_Create
Handle_XmlTObjDrivers_IntSparseArrayDriver_DownCast = _XmlTObjDrivers.Handle_XmlTObjDrivers_IntSparseArrayDriver_DownCast
Handle_XmlTObjDrivers_IntSparseArrayDriver_IsNull = _XmlTObjDrivers.Handle_XmlTObjDrivers_IntSparseArrayDriver_IsNull
Handle_XmlTObjDrivers_ModelDriver_Create = _XmlTObjDrivers.Handle_XmlTObjDrivers_ModelDriver_Create
Handle_XmlTObjDrivers_ModelDriver_DownCast = _XmlTObjDrivers.Handle_XmlTObjDrivers_ModelDriver_DownCast
Handle_XmlTObjDrivers_ModelDriver_IsNull = _XmlTObjDrivers.Handle_XmlTObjDrivers_ModelDriver_IsNull
Handle_XmlTObjDrivers_ObjectDriver_Create = _XmlTObjDrivers.Handle_XmlTObjDrivers_ObjectDriver_Create
Handle_XmlTObjDrivers_ObjectDriver_DownCast = _XmlTObjDrivers.Handle_XmlTObjDrivers_ObjectDriver_DownCast
Handle_XmlTObjDrivers_ObjectDriver_IsNull = _XmlTObjDrivers.Handle_XmlTObjDrivers_ObjectDriver_IsNull
Handle_XmlTObjDrivers_ReferenceDriver_Create = _XmlTObjDrivers.Handle_XmlTObjDrivers_ReferenceDriver_Create
Handle_XmlTObjDrivers_ReferenceDriver_DownCast = _XmlTObjDrivers.Handle_XmlTObjDrivers_ReferenceDriver_DownCast
Handle_XmlTObjDrivers_ReferenceDriver_IsNull = _XmlTObjDrivers.Handle_XmlTObjDrivers_ReferenceDriver_IsNull
Handle_XmlTObjDrivers_XYZDriver_Create = _XmlTObjDrivers.Handle_XmlTObjDrivers_XYZDriver_Create
Handle_XmlTObjDrivers_XYZDriver_DownCast = _XmlTObjDrivers.Handle_XmlTObjDrivers_XYZDriver_DownCast
Handle_XmlTObjDrivers_XYZDriver_IsNull = _XmlTObjDrivers.Handle_XmlTObjDrivers_XYZDriver_IsNull
class xmltobjdrivers(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddDrivers = _swig_new_static_method(_XmlTObjDrivers.xmltobjdrivers_AddDrivers)
    DefineFormat = _swig_new_static_method(_XmlTObjDrivers.xmltobjdrivers_DefineFormat)
    Factory = _swig_new_static_method(_XmlTObjDrivers.xmltobjdrivers_Factory)

    __repr__ = _dumps_object


    def __init__(self):
        _XmlTObjDrivers.xmltobjdrivers_swiginit(self, _XmlTObjDrivers.new_xmltobjdrivers())
    __swig_destroy__ = _XmlTObjDrivers.delete_xmltobjdrivers

# Register xmltobjdrivers in _XmlTObjDrivers:
_XmlTObjDrivers.xmltobjdrivers_swigregister(xmltobjdrivers)
xmltobjdrivers_AddDrivers = _XmlTObjDrivers.xmltobjdrivers_AddDrivers
xmltobjdrivers_DefineFormat = _XmlTObjDrivers.xmltobjdrivers_DefineFormat
xmltobjdrivers_Factory = _XmlTObjDrivers.xmltobjdrivers_Factory

class XmlTObjDrivers_DocumentRetrievalDriver(OCC.Core.XmlLDrivers.XmlLDrivers_DocumentRetrievalDriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r""":rtype: None"""
        _XmlTObjDrivers.XmlTObjDrivers_DocumentRetrievalDriver_swiginit(self, _XmlTObjDrivers.new_XmlTObjDrivers_DocumentRetrievalDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlTObjDrivers_DocumentRetrievalDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlTObjDrivers.delete_XmlTObjDrivers_DocumentRetrievalDriver

# Register XmlTObjDrivers_DocumentRetrievalDriver in _XmlTObjDrivers:
_XmlTObjDrivers.XmlTObjDrivers_DocumentRetrievalDriver_swigregister(XmlTObjDrivers_DocumentRetrievalDriver)

class XmlTObjDrivers_DocumentStorageDriver(OCC.Core.XmlLDrivers.XmlLDrivers_DocumentStorageDriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theCopyright:
        	:type theCopyright: TCollection_ExtendedString
        	:rtype: None
        """
        _XmlTObjDrivers.XmlTObjDrivers_DocumentStorageDriver_swiginit(self, _XmlTObjDrivers.new_XmlTObjDrivers_DocumentStorageDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlTObjDrivers_DocumentStorageDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlTObjDrivers.delete_XmlTObjDrivers_DocumentStorageDriver

# Register XmlTObjDrivers_DocumentStorageDriver in _XmlTObjDrivers:
_XmlTObjDrivers.XmlTObjDrivers_DocumentStorageDriver_swigregister(XmlTObjDrivers_DocumentStorageDriver)

class XmlTObjDrivers_IntSparseArrayDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlTObjDrivers.XmlTObjDrivers_IntSparseArrayDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlTObjDrivers.XmlTObjDrivers_IntSparseArrayDriver_swiginit(self, _XmlTObjDrivers.new_XmlTObjDrivers_IntSparseArrayDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlTObjDrivers_IntSparseArrayDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlTObjDrivers.delete_XmlTObjDrivers_IntSparseArrayDriver

# Register XmlTObjDrivers_IntSparseArrayDriver in _XmlTObjDrivers:
_XmlTObjDrivers.XmlTObjDrivers_IntSparseArrayDriver_swigregister(XmlTObjDrivers_IntSparseArrayDriver)

class XmlTObjDrivers_ModelDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlTObjDrivers.XmlTObjDrivers_ModelDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlTObjDrivers.XmlTObjDrivers_ModelDriver_swiginit(self, _XmlTObjDrivers.new_XmlTObjDrivers_ModelDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlTObjDrivers_ModelDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlTObjDrivers.delete_XmlTObjDrivers_ModelDriver

# Register XmlTObjDrivers_ModelDriver in _XmlTObjDrivers:
_XmlTObjDrivers.XmlTObjDrivers_ModelDriver_swigregister(XmlTObjDrivers_ModelDriver)

class XmlTObjDrivers_ObjectDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlTObjDrivers.XmlTObjDrivers_ObjectDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlTObjDrivers.XmlTObjDrivers_ObjectDriver_swiginit(self, _XmlTObjDrivers.new_XmlTObjDrivers_ObjectDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlTObjDrivers_ObjectDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlTObjDrivers.delete_XmlTObjDrivers_ObjectDriver

# Register XmlTObjDrivers_ObjectDriver in _XmlTObjDrivers:
_XmlTObjDrivers.XmlTObjDrivers_ObjectDriver_swigregister(XmlTObjDrivers_ObjectDriver)

class XmlTObjDrivers_ReferenceDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlTObjDrivers.XmlTObjDrivers_ReferenceDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlTObjDrivers.XmlTObjDrivers_ReferenceDriver_swiginit(self, _XmlTObjDrivers.new_XmlTObjDrivers_ReferenceDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlTObjDrivers_ReferenceDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlTObjDrivers.delete_XmlTObjDrivers_ReferenceDriver

# Register XmlTObjDrivers_ReferenceDriver in _XmlTObjDrivers:
_XmlTObjDrivers.XmlTObjDrivers_ReferenceDriver_swigregister(XmlTObjDrivers_ReferenceDriver)

class XmlTObjDrivers_XYZDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlTObjDrivers.XmlTObjDrivers_XYZDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlTObjDrivers.XmlTObjDrivers_XYZDriver_swiginit(self, _XmlTObjDrivers.new_XmlTObjDrivers_XYZDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlTObjDrivers_XYZDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlTObjDrivers.delete_XmlTObjDrivers_XYZDriver

# Register XmlTObjDrivers_XYZDriver in _XmlTObjDrivers:
_XmlTObjDrivers.XmlTObjDrivers_XYZDriver_swigregister(XmlTObjDrivers_XYZDriver)



