# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
BinMDataXtd module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_binmdataxtd.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _BinMDataXtd
else:
    import _BinMDataXtd

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _BinMDataXtd.SWIG_PyInstanceMethod_New
_swig_new_static_method = _BinMDataXtd.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _BinMDataXtd.delete_SwigPyIterator
    value = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator_value)
    incr = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator_copy)
    next = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_BinMDataXtd.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _BinMDataXtd:
_BinMDataXtd.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.BinMDF
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.Message
import OCC.Core.TDF
import OCC.Core.BinObjMgt
import OCC.Core.Storage
Handle_BinMDataXtd_AxisDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_AxisDriver_Create
Handle_BinMDataXtd_AxisDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_AxisDriver_DownCast
Handle_BinMDataXtd_AxisDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_AxisDriver_IsNull
Handle_BinMDataXtd_ConstraintDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_ConstraintDriver_Create
Handle_BinMDataXtd_ConstraintDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_ConstraintDriver_DownCast
Handle_BinMDataXtd_ConstraintDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_ConstraintDriver_IsNull
Handle_BinMDataXtd_GeometryDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_GeometryDriver_Create
Handle_BinMDataXtd_GeometryDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_GeometryDriver_DownCast
Handle_BinMDataXtd_GeometryDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_GeometryDriver_IsNull
Handle_BinMDataXtd_PatternStdDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_PatternStdDriver_Create
Handle_BinMDataXtd_PatternStdDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_PatternStdDriver_DownCast
Handle_BinMDataXtd_PatternStdDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_PatternStdDriver_IsNull
Handle_BinMDataXtd_PlacementDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_PlacementDriver_Create
Handle_BinMDataXtd_PlacementDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_PlacementDriver_DownCast
Handle_BinMDataXtd_PlacementDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_PlacementDriver_IsNull
Handle_BinMDataXtd_PlaneDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_PlaneDriver_Create
Handle_BinMDataXtd_PlaneDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_PlaneDriver_DownCast
Handle_BinMDataXtd_PlaneDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_PlaneDriver_IsNull
Handle_BinMDataXtd_PointDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_PointDriver_Create
Handle_BinMDataXtd_PointDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_PointDriver_DownCast
Handle_BinMDataXtd_PointDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_PointDriver_IsNull
Handle_BinMDataXtd_PositionDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_PositionDriver_Create
Handle_BinMDataXtd_PositionDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_PositionDriver_DownCast
Handle_BinMDataXtd_PositionDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_PositionDriver_IsNull
Handle_BinMDataXtd_PresentationDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_PresentationDriver_Create
Handle_BinMDataXtd_PresentationDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_PresentationDriver_DownCast
Handle_BinMDataXtd_PresentationDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_PresentationDriver_IsNull
Handle_BinMDataXtd_ShapeDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_ShapeDriver_Create
Handle_BinMDataXtd_ShapeDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_ShapeDriver_DownCast
Handle_BinMDataXtd_ShapeDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_ShapeDriver_IsNull
Handle_BinMDataXtd_TriangulationDriver_Create = _BinMDataXtd.Handle_BinMDataXtd_TriangulationDriver_Create
Handle_BinMDataXtd_TriangulationDriver_DownCast = _BinMDataXtd.Handle_BinMDataXtd_TriangulationDriver_DownCast
Handle_BinMDataXtd_TriangulationDriver_IsNull = _BinMDataXtd.Handle_BinMDataXtd_TriangulationDriver_IsNull
class binmdataxtd(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddDrivers = _swig_new_static_method(_BinMDataXtd.binmdataxtd_AddDrivers)
    DocumentVersion = _swig_new_static_method(_BinMDataXtd.binmdataxtd_DocumentVersion)
    SetDocumentVersion = _swig_new_static_method(_BinMDataXtd.binmdataxtd_SetDocumentVersion)

    __repr__ = _dumps_object


    def __init__(self):
        _BinMDataXtd.binmdataxtd_swiginit(self, _BinMDataXtd.new_binmdataxtd())
    __swig_destroy__ = _BinMDataXtd.delete_binmdataxtd

# Register binmdataxtd in _BinMDataXtd:
_BinMDataXtd.binmdataxtd_swigregister(binmdataxtd)
binmdataxtd_AddDrivers = _BinMDataXtd.binmdataxtd_AddDrivers
binmdataxtd_DocumentVersion = _BinMDataXtd.binmdataxtd_DocumentVersion
binmdataxtd_SetDocumentVersion = _BinMDataXtd.binmdataxtd_SetDocumentVersion

class BinMDataXtd_AxisDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_AxisDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_AxisDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_AxisDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_AxisDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_AxisDriver

# Register BinMDataXtd_AxisDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_AxisDriver_swigregister(BinMDataXtd_AxisDriver)

class BinMDataXtd_ConstraintDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_ConstraintDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_ConstraintDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_ConstraintDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_ConstraintDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_ConstraintDriver

# Register BinMDataXtd_ConstraintDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_ConstraintDriver_swigregister(BinMDataXtd_ConstraintDriver)

class BinMDataXtd_GeometryDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_GeometryDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_GeometryDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_GeometryDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_GeometryDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_GeometryDriver

# Register BinMDataXtd_GeometryDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_GeometryDriver_swigregister(BinMDataXtd_GeometryDriver)

class BinMDataXtd_PatternStdDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_PatternStdDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_PatternStdDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_PatternStdDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_PatternStdDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_PatternStdDriver

# Register BinMDataXtd_PatternStdDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_PatternStdDriver_swigregister(BinMDataXtd_PatternStdDriver)

class BinMDataXtd_PlacementDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_PlacementDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_PlacementDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_PlacementDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_PlacementDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_PlacementDriver

# Register BinMDataXtd_PlacementDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_PlacementDriver_swigregister(BinMDataXtd_PlacementDriver)

class BinMDataXtd_PlaneDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_PlaneDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_PlaneDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_PlaneDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_PlaneDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_PlaneDriver

# Register BinMDataXtd_PlaneDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_PlaneDriver_swigregister(BinMDataXtd_PlaneDriver)

class BinMDataXtd_PointDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_PointDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_PointDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_PointDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_PointDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_PointDriver

# Register BinMDataXtd_PointDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_PointDriver_swigregister(BinMDataXtd_PointDriver)

class BinMDataXtd_PositionDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_PositionDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_PositionDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_PositionDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_PositionDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_PositionDriver

# Register BinMDataXtd_PositionDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_PositionDriver_swigregister(BinMDataXtd_PositionDriver)

class BinMDataXtd_PresentationDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_PresentationDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_PresentationDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_PresentationDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_PresentationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_PresentationDriver

# Register BinMDataXtd_PresentationDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_PresentationDriver_swigregister(BinMDataXtd_PresentationDriver)

class BinMDataXtd_ShapeDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_ShapeDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_ShapeDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_ShapeDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_ShapeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_ShapeDriver

# Register BinMDataXtd_ShapeDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_ShapeDriver_swigregister(BinMDataXtd_ShapeDriver)

class BinMDataXtd_TriangulationDriver(OCC.Core.BinMDF.BinMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _BinMDataXtd.BinMDataXtd_TriangulationDriver_swiginit(self, _BinMDataXtd.new_BinMDataXtd_TriangulationDriver(*args))
    Paste = _swig_new_instance_method(_BinMDataXtd.BinMDataXtd_TriangulationDriver_Paste)


    @staticmethod
    def DownCast(t):
      return Handle_BinMDataXtd_TriangulationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _BinMDataXtd.delete_BinMDataXtd_TriangulationDriver

# Register BinMDataXtd_TriangulationDriver in _BinMDataXtd:
_BinMDataXtd.BinMDataXtd_TriangulationDriver_swigregister(BinMDataXtd_TriangulationDriver)



