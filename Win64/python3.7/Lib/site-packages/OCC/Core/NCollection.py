# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
NCollection module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_ncollection.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _NCollection
else:
    import _NCollection

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _NCollection.SWIG_PyInstanceMethod_New
_swig_new_static_method = _NCollection.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _NCollection.delete_SwigPyIterator
    value = _swig_new_instance_method(_NCollection.SwigPyIterator_value)
    incr = _swig_new_instance_method(_NCollection.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_NCollection.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_NCollection.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_NCollection.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_NCollection.SwigPyIterator_copy)
    next = _swig_new_instance_method(_NCollection.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_NCollection.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_NCollection.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_NCollection.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_NCollection.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_NCollection.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_NCollection.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_NCollection.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_NCollection.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_NCollection.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _NCollection:
_NCollection.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
class NCollection_Utf8String(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Iterator = _swig_new_instance_method(_NCollection.NCollection_Utf8String_Iterator)
    Size = _swig_new_instance_method(_NCollection.NCollection_Utf8String_Size)
    Length = _swig_new_instance_method(_NCollection.NCollection_Utf8String_Length)
    GetChar = _swig_new_instance_method(_NCollection.NCollection_Utf8String_GetChar)
    GetCharBuffer = _swig_new_instance_method(_NCollection.NCollection_Utf8String_GetCharBuffer)

    def __init__(self, *args):
        _NCollection.NCollection_Utf8String_swiginit(self, _NCollection.new_NCollection_Utf8String(*args))
    FromLocale = _swig_new_instance_method(_NCollection.NCollection_Utf8String_FromLocale)
    __swig_destroy__ = _NCollection.delete_NCollection_Utf8String
    IsEqual = _swig_new_instance_method(_NCollection.NCollection_Utf8String_IsEqual)
    SubString = _swig_new_instance_method(_NCollection.NCollection_Utf8String_SubString)
    ToCString = _swig_new_instance_method(_NCollection.NCollection_Utf8String_ToCString)
    ToUtf8 = _swig_new_instance_method(_NCollection.NCollection_Utf8String_ToUtf8)
    ToUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf8String_ToUtf16)
    ToUtf32 = _swig_new_instance_method(_NCollection.NCollection_Utf8String_ToUtf32)
    ToUtfWide = _swig_new_instance_method(_NCollection.NCollection_Utf8String_ToUtfWide)
    ToLocale = _swig_new_instance_method(_NCollection.NCollection_Utf8String_ToLocale)
    IsEmpty = _swig_new_instance_method(_NCollection.NCollection_Utf8String_IsEmpty)
    Clear = _swig_new_instance_method(_NCollection.NCollection_Utf8String_Clear)
    Assign = _swig_new_instance_method(_NCollection.NCollection_Utf8String_Assign)
    Swap = _swig_new_instance_method(_NCollection.NCollection_Utf8String_Swap)
    Set = _swig_new_instance_method(_NCollection.NCollection_Utf8String_Set)
    __iadd__ = _swig_new_instance_method(_NCollection.NCollection_Utf8String___iadd__)
    __eq__ = _swig_new_instance_method(_NCollection.NCollection_Utf8String___eq__)
    __ne__ = _swig_new_instance_method(_NCollection.NCollection_Utf8String___ne__)

# Register NCollection_Utf8String in _NCollection:
_NCollection.NCollection_Utf8String_swigregister(NCollection_Utf8String)

class NCollection_Utf16String(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Iterator = _swig_new_instance_method(_NCollection.NCollection_Utf16String_Iterator)
    Size = _swig_new_instance_method(_NCollection.NCollection_Utf16String_Size)
    Length = _swig_new_instance_method(_NCollection.NCollection_Utf16String_Length)
    GetChar = _swig_new_instance_method(_NCollection.NCollection_Utf16String_GetChar)
    GetCharBuffer = _swig_new_instance_method(_NCollection.NCollection_Utf16String_GetCharBuffer)

    def __init__(self, *args):
        _NCollection.NCollection_Utf16String_swiginit(self, _NCollection.new_NCollection_Utf16String(*args))
    FromLocale = _swig_new_instance_method(_NCollection.NCollection_Utf16String_FromLocale)
    __swig_destroy__ = _NCollection.delete_NCollection_Utf16String
    IsEqual = _swig_new_instance_method(_NCollection.NCollection_Utf16String_IsEqual)
    SubString = _swig_new_instance_method(_NCollection.NCollection_Utf16String_SubString)
    ToCString = _swig_new_instance_method(_NCollection.NCollection_Utf16String_ToCString)
    ToUtf8 = _swig_new_instance_method(_NCollection.NCollection_Utf16String_ToUtf8)
    ToUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf16String_ToUtf16)
    ToUtf32 = _swig_new_instance_method(_NCollection.NCollection_Utf16String_ToUtf32)
    ToUtfWide = _swig_new_instance_method(_NCollection.NCollection_Utf16String_ToUtfWide)
    ToLocale = _swig_new_instance_method(_NCollection.NCollection_Utf16String_ToLocale)
    IsEmpty = _swig_new_instance_method(_NCollection.NCollection_Utf16String_IsEmpty)
    Clear = _swig_new_instance_method(_NCollection.NCollection_Utf16String_Clear)
    Assign = _swig_new_instance_method(_NCollection.NCollection_Utf16String_Assign)
    Swap = _swig_new_instance_method(_NCollection.NCollection_Utf16String_Swap)
    Set = _swig_new_instance_method(_NCollection.NCollection_Utf16String_Set)
    __iadd__ = _swig_new_instance_method(_NCollection.NCollection_Utf16String___iadd__)
    __eq__ = _swig_new_instance_method(_NCollection.NCollection_Utf16String___eq__)
    __ne__ = _swig_new_instance_method(_NCollection.NCollection_Utf16String___ne__)

# Register NCollection_Utf16String in _NCollection:
_NCollection.NCollection_Utf16String_swigregister(NCollection_Utf16String)

class NCollection_Utf32String(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Iterator = _swig_new_instance_method(_NCollection.NCollection_Utf32String_Iterator)
    Size = _swig_new_instance_method(_NCollection.NCollection_Utf32String_Size)
    Length = _swig_new_instance_method(_NCollection.NCollection_Utf32String_Length)
    GetChar = _swig_new_instance_method(_NCollection.NCollection_Utf32String_GetChar)
    GetCharBuffer = _swig_new_instance_method(_NCollection.NCollection_Utf32String_GetCharBuffer)

    def __init__(self, *args):
        _NCollection.NCollection_Utf32String_swiginit(self, _NCollection.new_NCollection_Utf32String(*args))
    FromLocale = _swig_new_instance_method(_NCollection.NCollection_Utf32String_FromLocale)
    __swig_destroy__ = _NCollection.delete_NCollection_Utf32String
    IsEqual = _swig_new_instance_method(_NCollection.NCollection_Utf32String_IsEqual)
    SubString = _swig_new_instance_method(_NCollection.NCollection_Utf32String_SubString)
    ToCString = _swig_new_instance_method(_NCollection.NCollection_Utf32String_ToCString)
    ToUtf8 = _swig_new_instance_method(_NCollection.NCollection_Utf32String_ToUtf8)
    ToUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf32String_ToUtf16)
    ToUtf32 = _swig_new_instance_method(_NCollection.NCollection_Utf32String_ToUtf32)
    ToUtfWide = _swig_new_instance_method(_NCollection.NCollection_Utf32String_ToUtfWide)
    ToLocale = _swig_new_instance_method(_NCollection.NCollection_Utf32String_ToLocale)
    IsEmpty = _swig_new_instance_method(_NCollection.NCollection_Utf32String_IsEmpty)
    Clear = _swig_new_instance_method(_NCollection.NCollection_Utf32String_Clear)
    Assign = _swig_new_instance_method(_NCollection.NCollection_Utf32String_Assign)
    Swap = _swig_new_instance_method(_NCollection.NCollection_Utf32String_Swap)
    Set = _swig_new_instance_method(_NCollection.NCollection_Utf32String_Set)
    __iadd__ = _swig_new_instance_method(_NCollection.NCollection_Utf32String___iadd__)
    __eq__ = _swig_new_instance_method(_NCollection.NCollection_Utf32String___eq__)
    __ne__ = _swig_new_instance_method(_NCollection.NCollection_Utf32String___ne__)

# Register NCollection_Utf32String in _NCollection:
_NCollection.NCollection_Utf32String_swigregister(NCollection_Utf32String)

class NCollection_UtfWideString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Iterator = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_Iterator)
    Size = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_Size)
    Length = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_Length)
    GetChar = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_GetChar)
    GetCharBuffer = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_GetCharBuffer)

    def __init__(self, *args):
        _NCollection.NCollection_UtfWideString_swiginit(self, _NCollection.new_NCollection_UtfWideString(*args))
    FromLocale = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_FromLocale)
    __swig_destroy__ = _NCollection.delete_NCollection_UtfWideString
    IsEqual = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_IsEqual)
    SubString = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_SubString)
    ToCString = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_ToCString)
    ToUtf8 = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_ToUtf8)
    ToUtf16 = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_ToUtf16)
    ToUtf32 = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_ToUtf32)
    ToUtfWide = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_ToUtfWide)
    ToLocale = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_ToLocale)
    IsEmpty = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_IsEmpty)
    Clear = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_Clear)
    Assign = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_Assign)
    Swap = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_Swap)
    Set = _swig_new_instance_method(_NCollection.NCollection_UtfWideString_Set)
    __iadd__ = _swig_new_instance_method(_NCollection.NCollection_UtfWideString___iadd__)
    __eq__ = _swig_new_instance_method(_NCollection.NCollection_UtfWideString___eq__)
    __ne__ = _swig_new_instance_method(_NCollection.NCollection_UtfWideString___ne__)

# Register NCollection_UtfWideString in _NCollection:
_NCollection.NCollection_UtfWideString_swigregister(NCollection_UtfWideString)

class NCollection_Utf8Iter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, theString: "char const *"):
        _NCollection.NCollection_Utf8Iter_swiginit(self, _NCollection.new_NCollection_Utf8Iter(theString))
    Init = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_Init)
    __eq__ = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter___eq__)
    IsValid = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_IsValid)
    __ref__ = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter___ref__)
    BufferHere = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_BufferHere)
    ChangeBufferHere = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_ChangeBufferHere)
    BufferNext = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_BufferNext)
    Index = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_Index)
    AdvanceBytesUtf8 = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_AdvanceBytesUtf8)
    AdvanceBytesUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_AdvanceBytesUtf16)
    AdvanceCodeUnitsUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_AdvanceCodeUnitsUtf16)
    AdvanceBytesUtf32 = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_AdvanceBytesUtf32)
    GetUtf8 = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_GetUtf8)
    GetUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_GetUtf16)
    GetUtf32 = _swig_new_instance_method(_NCollection.NCollection_Utf8Iter_GetUtf32)
    __swig_destroy__ = _NCollection.delete_NCollection_Utf8Iter

# Register NCollection_Utf8Iter in _NCollection:
_NCollection.NCollection_Utf8Iter_swigregister(NCollection_Utf8Iter)

class NCollection_Utf16Iter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, theString: "char16_t const *"):
        _NCollection.NCollection_Utf16Iter_swiginit(self, _NCollection.new_NCollection_Utf16Iter(theString))
    Init = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_Init)
    __eq__ = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter___eq__)
    IsValid = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_IsValid)
    __ref__ = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter___ref__)
    BufferHere = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_BufferHere)
    ChangeBufferHere = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_ChangeBufferHere)
    BufferNext = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_BufferNext)
    Index = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_Index)
    AdvanceBytesUtf8 = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_AdvanceBytesUtf8)
    AdvanceBytesUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_AdvanceBytesUtf16)
    AdvanceCodeUnitsUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_AdvanceCodeUnitsUtf16)
    AdvanceBytesUtf32 = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_AdvanceBytesUtf32)
    GetUtf8 = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_GetUtf8)
    GetUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_GetUtf16)
    GetUtf32 = _swig_new_instance_method(_NCollection.NCollection_Utf16Iter_GetUtf32)
    __swig_destroy__ = _NCollection.delete_NCollection_Utf16Iter

# Register NCollection_Utf16Iter in _NCollection:
_NCollection.NCollection_Utf16Iter_swigregister(NCollection_Utf16Iter)

class NCollection_Utf32Iter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, theString: "char32_t const *"):
        _NCollection.NCollection_Utf32Iter_swiginit(self, _NCollection.new_NCollection_Utf32Iter(theString))
    Init = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_Init)
    __eq__ = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter___eq__)
    IsValid = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_IsValid)
    __ref__ = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter___ref__)
    BufferHere = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_BufferHere)
    ChangeBufferHere = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_ChangeBufferHere)
    BufferNext = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_BufferNext)
    Index = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_Index)
    AdvanceBytesUtf8 = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_AdvanceBytesUtf8)
    AdvanceBytesUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_AdvanceBytesUtf16)
    AdvanceCodeUnitsUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_AdvanceCodeUnitsUtf16)
    AdvanceBytesUtf32 = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_AdvanceBytesUtf32)
    GetUtf8 = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_GetUtf8)
    GetUtf16 = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_GetUtf16)
    GetUtf32 = _swig_new_instance_method(_NCollection.NCollection_Utf32Iter_GetUtf32)
    __swig_destroy__ = _NCollection.delete_NCollection_Utf32Iter

# Register NCollection_Utf32Iter in _NCollection:
_NCollection.NCollection_Utf32Iter_swigregister(NCollection_Utf32Iter)

class NCollection_UtfWideIter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, theString: "wchar_t const *"):
        _NCollection.NCollection_UtfWideIter_swiginit(self, _NCollection.new_NCollection_UtfWideIter(theString))
    Init = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_Init)
    __eq__ = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter___eq__)
    IsValid = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_IsValid)
    __ref__ = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter___ref__)
    BufferHere = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_BufferHere)
    ChangeBufferHere = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_ChangeBufferHere)
    BufferNext = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_BufferNext)
    Index = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_Index)
    AdvanceBytesUtf8 = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_AdvanceBytesUtf8)
    AdvanceBytesUtf16 = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_AdvanceBytesUtf16)
    AdvanceCodeUnitsUtf16 = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_AdvanceCodeUnitsUtf16)
    AdvanceBytesUtf32 = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_AdvanceBytesUtf32)
    GetUtf8 = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_GetUtf8)
    GetUtf16 = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_GetUtf16)
    GetUtf32 = _swig_new_instance_method(_NCollection.NCollection_UtfWideIter_GetUtf32)
    __swig_destroy__ = _NCollection.delete_NCollection_UtfWideIter

# Register NCollection_UtfWideIter in _NCollection:
_NCollection.NCollection_UtfWideIter_swigregister(NCollection_UtfWideIter)



