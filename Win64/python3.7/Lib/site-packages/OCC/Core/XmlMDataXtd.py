# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
XmlMDataXtd module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_xmlmdataxtd.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _XmlMDataXtd
else:
    import _XmlMDataXtd

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _XmlMDataXtd.SWIG_PyInstanceMethod_New
_swig_new_static_method = _XmlMDataXtd.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _XmlMDataXtd.delete_SwigPyIterator
    value = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator_value)
    incr = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator_copy)
    next = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_XmlMDataXtd.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _XmlMDataXtd:
_XmlMDataXtd.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.XmlMDF
import OCC.Core.Message
import OCC.Core.TDF
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.XmlObjMgt
import OCC.Core.LDOM
import OCC.Core.gp
import OCC.Core.Storage
Handle_XmlMDataXtd_AxisDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_AxisDriver_Create
Handle_XmlMDataXtd_AxisDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_AxisDriver_DownCast
Handle_XmlMDataXtd_AxisDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_AxisDriver_IsNull
Handle_XmlMDataXtd_ConstraintDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_ConstraintDriver_Create
Handle_XmlMDataXtd_ConstraintDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_ConstraintDriver_DownCast
Handle_XmlMDataXtd_ConstraintDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_ConstraintDriver_IsNull
Handle_XmlMDataXtd_GeometryDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_GeometryDriver_Create
Handle_XmlMDataXtd_GeometryDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_GeometryDriver_DownCast
Handle_XmlMDataXtd_GeometryDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_GeometryDriver_IsNull
Handle_XmlMDataXtd_PatternStdDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_PatternStdDriver_Create
Handle_XmlMDataXtd_PatternStdDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_PatternStdDriver_DownCast
Handle_XmlMDataXtd_PatternStdDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_PatternStdDriver_IsNull
Handle_XmlMDataXtd_PlacementDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_PlacementDriver_Create
Handle_XmlMDataXtd_PlacementDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_PlacementDriver_DownCast
Handle_XmlMDataXtd_PlacementDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_PlacementDriver_IsNull
Handle_XmlMDataXtd_PlaneDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_PlaneDriver_Create
Handle_XmlMDataXtd_PlaneDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_PlaneDriver_DownCast
Handle_XmlMDataXtd_PlaneDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_PlaneDriver_IsNull
Handle_XmlMDataXtd_PointDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_PointDriver_Create
Handle_XmlMDataXtd_PointDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_PointDriver_DownCast
Handle_XmlMDataXtd_PointDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_PointDriver_IsNull
Handle_XmlMDataXtd_PositionDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_PositionDriver_Create
Handle_XmlMDataXtd_PositionDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_PositionDriver_DownCast
Handle_XmlMDataXtd_PositionDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_PositionDriver_IsNull
Handle_XmlMDataXtd_PresentationDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_PresentationDriver_Create
Handle_XmlMDataXtd_PresentationDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_PresentationDriver_DownCast
Handle_XmlMDataXtd_PresentationDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_PresentationDriver_IsNull
Handle_XmlMDataXtd_ShapeDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_ShapeDriver_Create
Handle_XmlMDataXtd_ShapeDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_ShapeDriver_DownCast
Handle_XmlMDataXtd_ShapeDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_ShapeDriver_IsNull
Handle_XmlMDataXtd_TriangulationDriver_Create = _XmlMDataXtd.Handle_XmlMDataXtd_TriangulationDriver_Create
Handle_XmlMDataXtd_TriangulationDriver_DownCast = _XmlMDataXtd.Handle_XmlMDataXtd_TriangulationDriver_DownCast
Handle_XmlMDataXtd_TriangulationDriver_IsNull = _XmlMDataXtd.Handle_XmlMDataXtd_TriangulationDriver_IsNull
class xmlmdataxtd(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddDrivers = _swig_new_static_method(_XmlMDataXtd.xmlmdataxtd_AddDrivers)
    DocumentVersion = _swig_new_static_method(_XmlMDataXtd.xmlmdataxtd_DocumentVersion)
    SetDocumentVersion = _swig_new_static_method(_XmlMDataXtd.xmlmdataxtd_SetDocumentVersion)

    __repr__ = _dumps_object


    def __init__(self):
        _XmlMDataXtd.xmlmdataxtd_swiginit(self, _XmlMDataXtd.new_xmlmdataxtd())
    __swig_destroy__ = _XmlMDataXtd.delete_xmlmdataxtd

# Register xmlmdataxtd in _XmlMDataXtd:
_XmlMDataXtd.xmlmdataxtd_swigregister(xmlmdataxtd)
xmlmdataxtd_AddDrivers = _XmlMDataXtd.xmlmdataxtd_AddDrivers
xmlmdataxtd_DocumentVersion = _XmlMDataXtd.xmlmdataxtd_DocumentVersion
xmlmdataxtd_SetDocumentVersion = _XmlMDataXtd.xmlmdataxtd_SetDocumentVersion

class XmlMDataXtd_AxisDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_AxisDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_AxisDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_AxisDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_AxisDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_AxisDriver

# Register XmlMDataXtd_AxisDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_AxisDriver_swigregister(XmlMDataXtd_AxisDriver)

class XmlMDataXtd_ConstraintDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_ConstraintDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_ConstraintDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_ConstraintDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_ConstraintDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_ConstraintDriver

# Register XmlMDataXtd_ConstraintDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_ConstraintDriver_swigregister(XmlMDataXtd_ConstraintDriver)

class XmlMDataXtd_GeometryDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_GeometryDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_GeometryDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_GeometryDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_GeometryDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_GeometryDriver

# Register XmlMDataXtd_GeometryDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_GeometryDriver_swigregister(XmlMDataXtd_GeometryDriver)

class XmlMDataXtd_PatternStdDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_PatternStdDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_PatternStdDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_PatternStdDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_PatternStdDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_PatternStdDriver

# Register XmlMDataXtd_PatternStdDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_PatternStdDriver_swigregister(XmlMDataXtd_PatternStdDriver)

class XmlMDataXtd_PlacementDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_PlacementDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_PlacementDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_PlacementDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_PlacementDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_PlacementDriver

# Register XmlMDataXtd_PlacementDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_PlacementDriver_swigregister(XmlMDataXtd_PlacementDriver)

class XmlMDataXtd_PlaneDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_PlaneDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_PlaneDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_PlaneDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_PlaneDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_PlaneDriver

# Register XmlMDataXtd_PlaneDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_PlaneDriver_swigregister(XmlMDataXtd_PlaneDriver)

class XmlMDataXtd_PointDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_PointDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_PointDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_PointDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_PointDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_PointDriver

# Register XmlMDataXtd_PointDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_PointDriver_swigregister(XmlMDataXtd_PointDriver)

class XmlMDataXtd_PositionDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_PositionDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_PositionDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_PositionDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_PositionDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_PositionDriver

# Register XmlMDataXtd_PositionDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_PositionDriver_swigregister(XmlMDataXtd_PositionDriver)

class XmlMDataXtd_PresentationDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_PresentationDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_PresentationDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_PresentationDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_PresentationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_PresentationDriver

# Register XmlMDataXtd_PresentationDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_PresentationDriver_swigregister(XmlMDataXtd_PresentationDriver)

class XmlMDataXtd_ShapeDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_ShapeDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_ShapeDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_ShapeDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_ShapeDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_ShapeDriver

# Register XmlMDataXtd_ShapeDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_ShapeDriver_swigregister(XmlMDataXtd_ShapeDriver)

class XmlMDataXtd_TriangulationDriver(OCC.Core.XmlMDF.XmlMDF_ADriver):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Paste = _swig_new_instance_method(_XmlMDataXtd.XmlMDataXtd_TriangulationDriver_Paste)

    def __init__(self, *args):
        r"""
        :param theMessageDriver:
        	:type theMessageDriver: Message_Messenger
        	:rtype: None
        """
        _XmlMDataXtd.XmlMDataXtd_TriangulationDriver_swiginit(self, _XmlMDataXtd.new_XmlMDataXtd_TriangulationDriver(*args))


    @staticmethod
    def DownCast(t):
      return Handle_XmlMDataXtd_TriangulationDriver_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _XmlMDataXtd.delete_XmlMDataXtd_TriangulationDriver

# Register XmlMDataXtd_TriangulationDriver in _XmlMDataXtd:
_XmlMDataXtd.XmlMDataXtd_TriangulationDriver_swigregister(XmlMDataXtd_TriangulationDriver)



