# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TColStd module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_tcolstd.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _TColStd
else:
    import _TColStd

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _TColStd.SWIG_PyInstanceMethod_New
_swig_new_static_method = _TColStd.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TColStd.delete_SwigPyIterator
    value = _swig_new_instance_method(_TColStd.SwigPyIterator_value)
    incr = _swig_new_instance_method(_TColStd.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_TColStd.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_TColStd.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_TColStd.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_TColStd.SwigPyIterator_copy)
    next = _swig_new_instance_method(_TColStd.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_TColStd.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_TColStd.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_TColStd.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_TColStd.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_TColStd.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_TColStd.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_TColStd.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_TColStd.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_TColStd.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _TColStd:
_TColStd.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TCollection
Handle_TColStd_HPackedMapOfInteger_Create = _TColStd.Handle_TColStd_HPackedMapOfInteger_Create
Handle_TColStd_HPackedMapOfInteger_DownCast = _TColStd.Handle_TColStd_HPackedMapOfInteger_DownCast
Handle_TColStd_HPackedMapOfInteger_IsNull = _TColStd.Handle_TColStd_HPackedMapOfInteger_IsNull
Handle_TColStd_HArray1OfExtendedString_Create = _TColStd.Handle_TColStd_HArray1OfExtendedString_Create
Handle_TColStd_HArray1OfExtendedString_DownCast = _TColStd.Handle_TColStd_HArray1OfExtendedString_DownCast
Handle_TColStd_HArray1OfExtendedString_IsNull = _TColStd.Handle_TColStd_HArray1OfExtendedString_IsNull
Handle_TColStd_HArray1OfCharacter_Create = _TColStd.Handle_TColStd_HArray1OfCharacter_Create
Handle_TColStd_HArray1OfCharacter_DownCast = _TColStd.Handle_TColStd_HArray1OfCharacter_DownCast
Handle_TColStd_HArray1OfCharacter_IsNull = _TColStd.Handle_TColStd_HArray1OfCharacter_IsNull
Handle_TColStd_HArray1OfBoolean_Create = _TColStd.Handle_TColStd_HArray1OfBoolean_Create
Handle_TColStd_HArray1OfBoolean_DownCast = _TColStd.Handle_TColStd_HArray1OfBoolean_DownCast
Handle_TColStd_HArray1OfBoolean_IsNull = _TColStd.Handle_TColStd_HArray1OfBoolean_IsNull
Handle_TColStd_HArray1OfAsciiString_Create = _TColStd.Handle_TColStd_HArray1OfAsciiString_Create
Handle_TColStd_HArray1OfAsciiString_DownCast = _TColStd.Handle_TColStd_HArray1OfAsciiString_DownCast
Handle_TColStd_HArray1OfAsciiString_IsNull = _TColStd.Handle_TColStd_HArray1OfAsciiString_IsNull
Handle_TColStd_HArray1OfReal_Create = _TColStd.Handle_TColStd_HArray1OfReal_Create
Handle_TColStd_HArray1OfReal_DownCast = _TColStd.Handle_TColStd_HArray1OfReal_DownCast
Handle_TColStd_HArray1OfReal_IsNull = _TColStd.Handle_TColStd_HArray1OfReal_IsNull
Handle_TColStd_HArray1OfInteger_Create = _TColStd.Handle_TColStd_HArray1OfInteger_Create
Handle_TColStd_HArray1OfInteger_DownCast = _TColStd.Handle_TColStd_HArray1OfInteger_DownCast
Handle_TColStd_HArray1OfInteger_IsNull = _TColStd.Handle_TColStd_HArray1OfInteger_IsNull
Handle_TColStd_HArray1OfListOfInteger_Create = _TColStd.Handle_TColStd_HArray1OfListOfInteger_Create
Handle_TColStd_HArray1OfListOfInteger_DownCast = _TColStd.Handle_TColStd_HArray1OfListOfInteger_DownCast
Handle_TColStd_HArray1OfListOfInteger_IsNull = _TColStd.Handle_TColStd_HArray1OfListOfInteger_IsNull
Handle_TColStd_HArray1OfTransient_Create = _TColStd.Handle_TColStd_HArray1OfTransient_Create
Handle_TColStd_HArray1OfTransient_DownCast = _TColStd.Handle_TColStd_HArray1OfTransient_DownCast
Handle_TColStd_HArray1OfTransient_IsNull = _TColStd.Handle_TColStd_HArray1OfTransient_IsNull
Handle_TColStd_HArray1OfByte_Create = _TColStd.Handle_TColStd_HArray1OfByte_Create
Handle_TColStd_HArray1OfByte_DownCast = _TColStd.Handle_TColStd_HArray1OfByte_DownCast
Handle_TColStd_HArray1OfByte_IsNull = _TColStd.Handle_TColStd_HArray1OfByte_IsNull
Handle_TColStd_HArray2OfBoolean_Create = _TColStd.Handle_TColStd_HArray2OfBoolean_Create
Handle_TColStd_HArray2OfBoolean_DownCast = _TColStd.Handle_TColStd_HArray2OfBoolean_DownCast
Handle_TColStd_HArray2OfBoolean_IsNull = _TColStd.Handle_TColStd_HArray2OfBoolean_IsNull
Handle_TColStd_HArray2OfTransient_Create = _TColStd.Handle_TColStd_HArray2OfTransient_Create
Handle_TColStd_HArray2OfTransient_DownCast = _TColStd.Handle_TColStd_HArray2OfTransient_DownCast
Handle_TColStd_HArray2OfTransient_IsNull = _TColStd.Handle_TColStd_HArray2OfTransient_IsNull
Handle_TColStd_HArray2OfReal_Create = _TColStd.Handle_TColStd_HArray2OfReal_Create
Handle_TColStd_HArray2OfReal_DownCast = _TColStd.Handle_TColStd_HArray2OfReal_DownCast
Handle_TColStd_HArray2OfReal_IsNull = _TColStd.Handle_TColStd_HArray2OfReal_IsNull
Handle_TColStd_HArray2OfInteger_Create = _TColStd.Handle_TColStd_HArray2OfInteger_Create
Handle_TColStd_HArray2OfInteger_DownCast = _TColStd.Handle_TColStd_HArray2OfInteger_DownCast
Handle_TColStd_HArray2OfInteger_IsNull = _TColStd.Handle_TColStd_HArray2OfInteger_IsNull
Handle_TColStd_HArray2OfCharacter_Create = _TColStd.Handle_TColStd_HArray2OfCharacter_Create
Handle_TColStd_HArray2OfCharacter_DownCast = _TColStd.Handle_TColStd_HArray2OfCharacter_DownCast
Handle_TColStd_HArray2OfCharacter_IsNull = _TColStd.Handle_TColStd_HArray2OfCharacter_IsNull
Handle_TColStd_HSequenceOfHAsciiString_Create = _TColStd.Handle_TColStd_HSequenceOfHAsciiString_Create
Handle_TColStd_HSequenceOfHAsciiString_DownCast = _TColStd.Handle_TColStd_HSequenceOfHAsciiString_DownCast
Handle_TColStd_HSequenceOfHAsciiString_IsNull = _TColStd.Handle_TColStd_HSequenceOfHAsciiString_IsNull
Handle_TColStd_HSequenceOfTransient_Create = _TColStd.Handle_TColStd_HSequenceOfTransient_Create
Handle_TColStd_HSequenceOfTransient_DownCast = _TColStd.Handle_TColStd_HSequenceOfTransient_DownCast
Handle_TColStd_HSequenceOfTransient_IsNull = _TColStd.Handle_TColStd_HSequenceOfTransient_IsNull
Handle_TColStd_HSequenceOfAsciiString_Create = _TColStd.Handle_TColStd_HSequenceOfAsciiString_Create
Handle_TColStd_HSequenceOfAsciiString_DownCast = _TColStd.Handle_TColStd_HSequenceOfAsciiString_DownCast
Handle_TColStd_HSequenceOfAsciiString_IsNull = _TColStd.Handle_TColStd_HSequenceOfAsciiString_IsNull
Handle_TColStd_HSequenceOfHExtendedString_Create = _TColStd.Handle_TColStd_HSequenceOfHExtendedString_Create
Handle_TColStd_HSequenceOfHExtendedString_DownCast = _TColStd.Handle_TColStd_HSequenceOfHExtendedString_DownCast
Handle_TColStd_HSequenceOfHExtendedString_IsNull = _TColStd.Handle_TColStd_HSequenceOfHExtendedString_IsNull
Handle_TColStd_HSequenceOfInteger_Create = _TColStd.Handle_TColStd_HSequenceOfInteger_Create
Handle_TColStd_HSequenceOfInteger_DownCast = _TColStd.Handle_TColStd_HSequenceOfInteger_DownCast
Handle_TColStd_HSequenceOfInteger_IsNull = _TColStd.Handle_TColStd_HSequenceOfInteger_IsNull
Handle_TColStd_HSequenceOfExtendedString_Create = _TColStd.Handle_TColStd_HSequenceOfExtendedString_Create
Handle_TColStd_HSequenceOfExtendedString_DownCast = _TColStd.Handle_TColStd_HSequenceOfExtendedString_DownCast
Handle_TColStd_HSequenceOfExtendedString_IsNull = _TColStd.Handle_TColStd_HSequenceOfExtendedString_IsNull
Handle_TColStd_HSequenceOfReal_Create = _TColStd.Handle_TColStd_HSequenceOfReal_Create
Handle_TColStd_HSequenceOfReal_DownCast = _TColStd.Handle_TColStd_HSequenceOfReal_DownCast
Handle_TColStd_HSequenceOfReal_IsNull = _TColStd.Handle_TColStd_HSequenceOfReal_IsNull
class TColStd_Array2OfBoolean(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_Array2OfBoolean_swiginit(self, _TColStd.new_TColStd_Array2OfBoolean(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_Length)
    NbRows = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_NbRows)
    NbColumns = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_NbColumns)
    RowLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_RowLength)
    ColLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_ColLength)
    LowerRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_LowerRow)
    UpperRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_UpperRow)
    LowerCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_LowerCol)
    UpperCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_IsDeletable)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_Set)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array2OfBoolean_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array2OfBoolean

# Register TColStd_Array2OfBoolean in _TColStd:
_TColStd.TColStd_Array2OfBoolean_swigregister(TColStd_Array2OfBoolean)

class TColStd_DataMapOfIntegerTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_cend)

    def __init__(self, *args):
        _TColStd.TColStd_DataMapOfIntegerTransient_swiginit(self, _TColStd.new_TColStd_DataMapOfIntegerTransient(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_ReSize)
    Bind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Bind)
    Bound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Bound)
    IsBound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_IsBound)
    UnBind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_UnBind)
    Seek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Seek)
    Find = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Find)
    ChangeSeek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_ChangeFind)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient___call__)
    Clear = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_DataMapOfIntegerTransient
    Size = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Size)
    Keys = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerTransient_Keys)

# Register TColStd_DataMapOfIntegerTransient in _TColStd:
_TColStd.TColStd_DataMapOfIntegerTransient_swigregister(TColStd_DataMapOfIntegerTransient)

class TColStd_ListOfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_ListOfInteger_swiginit(self, _TColStd.new_TColStd_ListOfInteger(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_Size)
    Assign = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_Set)
    Clear = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_Clear)
    First = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_First)
    Last = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_Last)
    Append = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_Prepend)
    RemoveFirst = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_RemoveFirst)
    Remove = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_Remove)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_InsertAfter)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_ListOfInteger_Reverse)
    __swig_destroy__ = _TColStd.delete_TColStd_ListOfInteger

# Register TColStd_ListOfInteger in _TColStd:
_TColStd.TColStd_ListOfInteger_swigregister(TColStd_ListOfInteger)

class TColStd_ListIteratorOfListOfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_ListIteratorOfListOfInteger_swiginit(self, _TColStd.new_TColStd_ListIteratorOfListOfInteger(*args))
    More = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfInteger_More)
    Next = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfInteger_Next)
    Value = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfInteger_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfInteger_ChangeValue)
    __swig_destroy__ = _TColStd.delete_TColStd_ListIteratorOfListOfInteger

# Register TColStd_ListIteratorOfListOfInteger in _TColStd:
_TColStd.TColStd_ListIteratorOfListOfInteger_swigregister(TColStd_ListIteratorOfListOfInteger)

class TColStd_SequenceOfAddress(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_cend)

    def __init__(self, *args):
        _TColStd.TColStd_SequenceOfAddress_swiginit(self, _TColStd.new_TColStd_SequenceOfAddress(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Length)
    Lower = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Upper)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_IsEmpty)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Reverse)
    Exchange = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Exchange)
    delNode = _swig_new_static_method(_TColStd.TColStd_SequenceOfAddress_delNode)
    Clear = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Clear)
    Assign = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Set)
    Remove = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Remove)
    Append = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Prepend)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_InsertAfter)
    Split = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Split)
    First = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAddress_SetValue)
    __swig_destroy__ = _TColStd.delete_TColStd_SequenceOfAddress

# Register TColStd_SequenceOfAddress in _TColStd:
_TColStd.TColStd_SequenceOfAddress_swigregister(TColStd_SequenceOfAddress)
TColStd_SequenceOfAddress_delNode = _TColStd.TColStd_SequenceOfAddress_delNode

class TColStd_DataMapOfIntegerInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_DataMapOfIntegerInteger_swiginit(self, _TColStd.new_TColStd_DataMapOfIntegerInteger(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_ReSize)
    Bind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Bind)
    Bound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Bound)
    IsBound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_IsBound)
    UnBind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_UnBind)
    Seek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Seek)
    Find = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Find)
    ChangeSeek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_ChangeFind)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger___call__)
    Clear = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_DataMapOfIntegerInteger
    Size = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Size)
    Keys = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerInteger_Keys)

# Register TColStd_DataMapOfIntegerInteger in _TColStd:
_TColStd.TColStd_DataMapOfIntegerInteger_swigregister(TColStd_DataMapOfIntegerInteger)

class TColStd_Array2OfCharacter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_Array2OfCharacter_swiginit(self, _TColStd.new_TColStd_Array2OfCharacter(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_Length)
    NbRows = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_NbRows)
    NbColumns = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_NbColumns)
    RowLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_RowLength)
    ColLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_ColLength)
    LowerRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_LowerRow)
    UpperRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_UpperRow)
    LowerCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_LowerCol)
    UpperCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_IsDeletable)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_Set)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array2OfCharacter_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array2OfCharacter

# Register TColStd_Array2OfCharacter in _TColStd:
_TColStd.TColStd_Array2OfCharacter_swigregister(TColStd_Array2OfCharacter)

class TColStd_IndexedMapOfTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    cbegin = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_cend)

    def __init__(self, *args):
        _TColStd.TColStd_IndexedMapOfTransient_swiginit(self, _TColStd.new_TColStd_IndexedMapOfTransient(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_ReSize)
    Add = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_Add)
    Contains = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_Contains)
    Substitute = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_Substitute)
    Swap = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_Swap)
    RemoveLast = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_RemoveLast)
    RemoveFromIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_RemoveFromIndex)
    RemoveKey = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_RemoveKey)
    FindKey = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_FindKey)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient___call__)
    FindIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_FindIndex)
    Clear = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_IndexedMapOfTransient
    Size = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfTransient_Size)

# Register TColStd_IndexedMapOfTransient in _TColStd:
_TColStd.TColStd_IndexedMapOfTransient_swigregister(TColStd_IndexedMapOfTransient)

class TColStd_Array1OfReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_cend)

    def __init__(self, *args):
        _TColStd.TColStd_Array1OfReal_swiginit(self, _TColStd.new_TColStd_Array1OfReal(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Length)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_IsEmpty)
    Lower = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Upper)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_IsAllocated)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Set)
    First = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array1OfReal_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array1OfReal

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColStd_Array1OfReal in _TColStd:
_TColStd.TColStd_Array1OfReal_swigregister(TColStd_Array1OfReal)

class TColStd_MapOfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    cbegin = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_MapOfInteger_swiginit(self, _TColStd.new_TColStd_MapOfInteger(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_ReSize)
    Add = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Add)
    Added = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Added)
    Remove = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Remove)
    Clear = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_MapOfInteger
    Size = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Size)
    IsEqual = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_IsEqual)
    Contains = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Contains)
    Union = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Union)
    Unite = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Unite)
    HasIntersection = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_HasIntersection)
    Intersection = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Intersection)
    Intersect = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Intersect)
    Subtraction = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Subtraction)
    Subtract = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Subtract)
    Difference = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Difference)
    Differ = _swig_new_instance_method(_TColStd.TColStd_MapOfInteger_Differ)

# Register TColStd_MapOfInteger in _TColStd:
_TColStd.TColStd_MapOfInteger_swigregister(TColStd_MapOfInteger)

class TColStd_SequenceOfAsciiString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_cend)

    def __init__(self, *args):
        _TColStd.TColStd_SequenceOfAsciiString_swiginit(self, _TColStd.new_TColStd_SequenceOfAsciiString(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Length)
    Lower = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Upper)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_IsEmpty)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Reverse)
    Exchange = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Exchange)
    delNode = _swig_new_static_method(_TColStd.TColStd_SequenceOfAsciiString_delNode)
    Clear = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Clear)
    Assign = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Set)
    Remove = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Remove)
    Append = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Prepend)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_InsertAfter)
    Split = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Split)
    First = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfAsciiString_SetValue)
    __swig_destroy__ = _TColStd.delete_TColStd_SequenceOfAsciiString

# Register TColStd_SequenceOfAsciiString in _TColStd:
_TColStd.TColStd_SequenceOfAsciiString_swigregister(TColStd_SequenceOfAsciiString)
TColStd_SequenceOfAsciiString_delNode = _TColStd.TColStd_SequenceOfAsciiString_delNode

class TColStd_Array1OfByte(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_cend)

    def __init__(self, *args):
        _TColStd.TColStd_Array1OfByte_swiginit(self, _TColStd.new_TColStd_Array1OfByte(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Length)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_IsEmpty)
    Lower = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Upper)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_IsAllocated)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Set)
    First = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array1OfByte_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array1OfByte

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColStd_Array1OfByte in _TColStd:
_TColStd.TColStd_Array1OfByte_swigregister(TColStd_Array1OfByte)

class TColStd_ListOfAsciiString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_cend)

    def __init__(self, *args):
        _TColStd.TColStd_ListOfAsciiString_swiginit(self, _TColStd.new_TColStd_ListOfAsciiString(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_Size)
    Assign = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_Set)
    Clear = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_Clear)
    First = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_First)
    Last = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_Last)
    Append = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_Prepend)
    RemoveFirst = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_RemoveFirst)
    Remove = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_Remove)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_InsertAfter)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_ListOfAsciiString_Reverse)
    __swig_destroy__ = _TColStd.delete_TColStd_ListOfAsciiString

# Register TColStd_ListOfAsciiString in _TColStd:
_TColStd.TColStd_ListOfAsciiString_swigregister(TColStd_ListOfAsciiString)

class TColStd_ListIteratorOfListOfAsciiString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_ListIteratorOfListOfAsciiString_swiginit(self, _TColStd.new_TColStd_ListIteratorOfListOfAsciiString(*args))
    More = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfAsciiString_More)
    Next = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfAsciiString_Next)
    Value = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfAsciiString_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfAsciiString_ChangeValue)
    __swig_destroy__ = _TColStd.delete_TColStd_ListIteratorOfListOfAsciiString

# Register TColStd_ListIteratorOfListOfAsciiString in _TColStd:
_TColStd.TColStd_ListIteratorOfListOfAsciiString_swigregister(TColStd_ListIteratorOfListOfAsciiString)

class TColStd_Array2OfReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_Array2OfReal_swiginit(self, _TColStd.new_TColStd_Array2OfReal(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_Length)
    NbRows = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_NbRows)
    NbColumns = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_NbColumns)
    RowLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_RowLength)
    ColLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_ColLength)
    LowerRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_LowerRow)
    UpperRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_UpperRow)
    LowerCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_LowerCol)
    UpperCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_IsDeletable)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_Set)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array2OfReal_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array2OfReal

# Register TColStd_Array2OfReal in _TColStd:
_TColStd.TColStd_Array2OfReal_swigregister(TColStd_Array2OfReal)

class TColStd_MapOfTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    cbegin = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_cend)

    def __init__(self, *args):
        _TColStd.TColStd_MapOfTransient_swiginit(self, _TColStd.new_TColStd_MapOfTransient(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_ReSize)
    Add = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Add)
    Added = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Added)
    Remove = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Remove)
    Clear = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_MapOfTransient
    Size = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Size)
    IsEqual = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_IsEqual)
    Contains = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Contains)
    Union = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Union)
    Unite = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Unite)
    HasIntersection = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_HasIntersection)
    Intersection = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Intersection)
    Intersect = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Intersect)
    Subtraction = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Subtraction)
    Subtract = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Subtract)
    Difference = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Difference)
    Differ = _swig_new_instance_method(_TColStd.TColStd_MapOfTransient_Differ)

# Register TColStd_MapOfTransient in _TColStd:
_TColStd.TColStd_MapOfTransient_swigregister(TColStd_MapOfTransient)

class TColStd_ListOfTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_cend)

    def __init__(self, *args):
        _TColStd.TColStd_ListOfTransient_swiginit(self, _TColStd.new_TColStd_ListOfTransient(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_Size)
    Assign = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_Set)
    Clear = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_Clear)
    First = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_First)
    Last = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_Last)
    Append = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_Prepend)
    RemoveFirst = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_RemoveFirst)
    Remove = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_Remove)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_InsertAfter)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_ListOfTransient_Reverse)
    __swig_destroy__ = _TColStd.delete_TColStd_ListOfTransient

# Register TColStd_ListOfTransient in _TColStd:
_TColStd.TColStd_ListOfTransient_swigregister(TColStd_ListOfTransient)

class TColStd_ListIteratorOfListOfTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_ListIteratorOfListOfTransient_swiginit(self, _TColStd.new_TColStd_ListIteratorOfListOfTransient(*args))
    More = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfTransient_More)
    Next = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfTransient_Next)
    Value = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfTransient_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfTransient_ChangeValue)
    __swig_destroy__ = _TColStd.delete_TColStd_ListIteratorOfListOfTransient

# Register TColStd_ListIteratorOfListOfTransient in _TColStd:
_TColStd.TColStd_ListIteratorOfListOfTransient_swigregister(TColStd_ListIteratorOfListOfTransient)

class TColStd_SequenceOfTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_cend)

    def __init__(self, *args):
        _TColStd.TColStd_SequenceOfTransient_swiginit(self, _TColStd.new_TColStd_SequenceOfTransient(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Length)
    Lower = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Upper)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_IsEmpty)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Reverse)
    Exchange = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Exchange)
    delNode = _swig_new_static_method(_TColStd.TColStd_SequenceOfTransient_delNode)
    Clear = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Clear)
    Assign = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Set)
    Remove = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Remove)
    Append = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Prepend)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_InsertAfter)
    Split = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Split)
    First = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfTransient_SetValue)
    __swig_destroy__ = _TColStd.delete_TColStd_SequenceOfTransient

# Register TColStd_SequenceOfTransient in _TColStd:
_TColStd.TColStd_SequenceOfTransient_swigregister(TColStd_SequenceOfTransient)
TColStd_SequenceOfTransient_delNode = _TColStd.TColStd_SequenceOfTransient_delNode

class TColStd_SequenceOfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_SequenceOfInteger_swiginit(self, _TColStd.new_TColStd_SequenceOfInteger(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Length)
    Lower = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Upper)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_IsEmpty)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Reverse)
    Exchange = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Exchange)
    delNode = _swig_new_static_method(_TColStd.TColStd_SequenceOfInteger_delNode)
    Clear = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Clear)
    Assign = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Set)
    Remove = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Remove)
    Append = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Prepend)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_InsertAfter)
    Split = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Split)
    First = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfInteger_SetValue)
    __swig_destroy__ = _TColStd.delete_TColStd_SequenceOfInteger

# Register TColStd_SequenceOfInteger in _TColStd:
_TColStd.TColStd_SequenceOfInteger_swigregister(TColStd_SequenceOfInteger)
TColStd_SequenceOfInteger_delNode = _TColStd.TColStd_SequenceOfInteger_delNode

class TColStd_Array1OfBoolean(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_cend)

    def __init__(self, *args):
        _TColStd.TColStd_Array1OfBoolean_swiginit(self, _TColStd.new_TColStd_Array1OfBoolean(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Length)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_IsEmpty)
    Lower = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Upper)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_IsAllocated)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Set)
    First = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array1OfBoolean_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array1OfBoolean

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColStd_Array1OfBoolean in _TColStd:
_TColStd.TColStd_Array1OfBoolean_swigregister(TColStd_Array1OfBoolean)

class TColStd_SequenceOfBoolean(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_cend)

    def __init__(self, *args):
        _TColStd.TColStd_SequenceOfBoolean_swiginit(self, _TColStd.new_TColStd_SequenceOfBoolean(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Length)
    Lower = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Upper)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_IsEmpty)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Reverse)
    Exchange = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Exchange)
    delNode = _swig_new_static_method(_TColStd.TColStd_SequenceOfBoolean_delNode)
    Clear = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Clear)
    Assign = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Set)
    Remove = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Remove)
    Append = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Prepend)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_InsertAfter)
    Split = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Split)
    First = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfBoolean_SetValue)
    __swig_destroy__ = _TColStd.delete_TColStd_SequenceOfBoolean

# Register TColStd_SequenceOfBoolean in _TColStd:
_TColStd.TColStd_SequenceOfBoolean_swigregister(TColStd_SequenceOfBoolean)
TColStd_SequenceOfBoolean_delNode = _TColStd.TColStd_SequenceOfBoolean_delNode

class TColStd_DataMapOfTransientTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_cend)

    def __init__(self, *args):
        _TColStd.TColStd_DataMapOfTransientTransient_swiginit(self, _TColStd.new_TColStd_DataMapOfTransientTransient(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_ReSize)
    Bind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_Bind)
    Bound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_Bound)
    IsBound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_IsBound)
    UnBind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_UnBind)
    Seek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_Seek)
    Find = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_Find)
    ChangeSeek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_ChangeFind)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient___call__)
    Clear = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_DataMapOfTransientTransient
    Size = _swig_new_instance_method(_TColStd.TColStd_DataMapOfTransientTransient_Size)

# Register TColStd_DataMapOfTransientTransient in _TColStd:
_TColStd.TColStd_DataMapOfTransientTransient_swigregister(TColStd_DataMapOfTransientTransient)

class TColStd_Array1OfListOfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_Array1OfListOfInteger_swiginit(self, _TColStd.new_TColStd_Array1OfListOfInteger(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Length)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_IsEmpty)
    Lower = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Upper)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_IsAllocated)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Set)
    First = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array1OfListOfInteger_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array1OfListOfInteger

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColStd_Array1OfListOfInteger in _TColStd:
_TColStd.TColStd_Array1OfListOfInteger_swigregister(TColStd_Array1OfListOfInteger)

class TColStd_Array2OfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_Array2OfInteger_swiginit(self, _TColStd.new_TColStd_Array2OfInteger(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_Length)
    NbRows = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_NbRows)
    NbColumns = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_NbColumns)
    RowLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_RowLength)
    ColLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_ColLength)
    LowerRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_LowerRow)
    UpperRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_UpperRow)
    LowerCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_LowerCol)
    UpperCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_IsDeletable)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_Set)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array2OfInteger_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array2OfInteger

# Register TColStd_Array2OfInteger in _TColStd:
_TColStd.TColStd_Array2OfInteger_swigregister(TColStd_Array2OfInteger)

class TColStd_SequenceOfHExtendedString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_cend)

    def __init__(self, *args):
        _TColStd.TColStd_SequenceOfHExtendedString_swiginit(self, _TColStd.new_TColStd_SequenceOfHExtendedString(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Length)
    Lower = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Upper)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_IsEmpty)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Reverse)
    Exchange = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Exchange)
    delNode = _swig_new_static_method(_TColStd.TColStd_SequenceOfHExtendedString_delNode)
    Clear = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Clear)
    Assign = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Set)
    Remove = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Remove)
    Append = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Prepend)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_InsertAfter)
    Split = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Split)
    First = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHExtendedString_SetValue)
    __swig_destroy__ = _TColStd.delete_TColStd_SequenceOfHExtendedString

# Register TColStd_SequenceOfHExtendedString in _TColStd:
_TColStd.TColStd_SequenceOfHExtendedString_swigregister(TColStd_SequenceOfHExtendedString)
TColStd_SequenceOfHExtendedString_delNode = _TColStd.TColStd_SequenceOfHExtendedString_delNode

class TColStd_IndexedDataMapOfStringString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_cend)

    def __init__(self, *args):
        _TColStd.TColStd_IndexedDataMapOfStringString_swiginit(self, _TColStd.new_TColStd_IndexedDataMapOfStringString(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_ReSize)
    Add = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Add)
    Contains = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Contains)
    Substitute = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Substitute)
    Swap = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Swap)
    RemoveLast = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_RemoveLast)
    RemoveFromIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_RemoveFromIndex)
    RemoveKey = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_RemoveKey)
    FindKey = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_FindKey)
    FindFromIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_FindFromIndex)
    ChangeFromIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_ChangeFromIndex)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString___call__)
    FindIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_FindIndex)
    ChangeFromKey = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_ChangeFromKey)
    Seek = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Seek)
    ChangeSeek = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_ChangeSeek)
    FindFromKey = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_FindFromKey)
    Clear = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_IndexedDataMapOfStringString
    Size = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfStringString_Size)

# Register TColStd_IndexedDataMapOfStringString in _TColStd:
_TColStd.TColStd_IndexedDataMapOfStringString_swigregister(TColStd_IndexedDataMapOfStringString)

class TColStd_SequenceOfReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_cend)

    def __init__(self, *args):
        _TColStd.TColStd_SequenceOfReal_swiginit(self, _TColStd.new_TColStd_SequenceOfReal(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Length)
    Lower = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Upper)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_IsEmpty)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Reverse)
    Exchange = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Exchange)
    delNode = _swig_new_static_method(_TColStd.TColStd_SequenceOfReal_delNode)
    Clear = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Clear)
    Assign = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Set)
    Remove = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Remove)
    Append = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Prepend)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_InsertAfter)
    Split = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Split)
    First = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfReal_SetValue)
    __swig_destroy__ = _TColStd.delete_TColStd_SequenceOfReal

# Register TColStd_SequenceOfReal in _TColStd:
_TColStd.TColStd_SequenceOfReal_swigregister(TColStd_SequenceOfReal)
TColStd_SequenceOfReal_delNode = _TColStd.TColStd_SequenceOfReal_delNode

class TColStd_MapOfReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    cbegin = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_cend)

    def __init__(self, *args):
        _TColStd.TColStd_MapOfReal_swiginit(self, _TColStd.new_TColStd_MapOfReal(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_ReSize)
    Add = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Add)
    Added = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Added)
    Remove = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Remove)
    Clear = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_MapOfReal
    Size = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Size)
    IsEqual = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_IsEqual)
    Contains = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Contains)
    Union = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Union)
    Unite = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Unite)
    HasIntersection = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_HasIntersection)
    Intersection = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Intersection)
    Intersect = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Intersect)
    Subtraction = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Subtraction)
    Subtract = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Subtract)
    Difference = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Difference)
    Differ = _swig_new_instance_method(_TColStd.TColStd_MapOfReal_Differ)

# Register TColStd_MapOfReal in _TColStd:
_TColStd.TColStd_MapOfReal_swigregister(TColStd_MapOfReal)

class TColStd_ListOfReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_cend)

    def __init__(self, *args):
        _TColStd.TColStd_ListOfReal_swiginit(self, _TColStd.new_TColStd_ListOfReal(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_Size)
    Assign = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_Set)
    Clear = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_Clear)
    First = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_First)
    Last = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_Last)
    Append = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_Prepend)
    RemoveFirst = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_RemoveFirst)
    Remove = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_Remove)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_InsertAfter)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_ListOfReal_Reverse)
    __swig_destroy__ = _TColStd.delete_TColStd_ListOfReal

# Register TColStd_ListOfReal in _TColStd:
_TColStd.TColStd_ListOfReal_swigregister(TColStd_ListOfReal)

class TColStd_ListIteratorOfListOfReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_ListIteratorOfListOfReal_swiginit(self, _TColStd.new_TColStd_ListIteratorOfListOfReal(*args))
    More = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfReal_More)
    Next = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfReal_Next)
    Value = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfReal_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_ListIteratorOfListOfReal_ChangeValue)
    __swig_destroy__ = _TColStd.delete_TColStd_ListIteratorOfListOfReal

# Register TColStd_ListIteratorOfListOfReal in _TColStd:
_TColStd.TColStd_ListIteratorOfListOfReal_swigregister(TColStd_ListIteratorOfListOfReal)

class TColStd_MapIntegerHasher(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HashCode = _swig_new_static_method(_TColStd.TColStd_MapIntegerHasher_HashCode)
    IsEqual = _swig_new_static_method(_TColStd.TColStd_MapIntegerHasher_IsEqual)

    def __init__(self):
        _TColStd.TColStd_MapIntegerHasher_swiginit(self, _TColStd.new_TColStd_MapIntegerHasher())
    __swig_destroy__ = _TColStd.delete_TColStd_MapIntegerHasher

# Register TColStd_MapIntegerHasher in _TColStd:
_TColStd.TColStd_MapIntegerHasher_swigregister(TColStd_MapIntegerHasher)
TColStd_MapIntegerHasher_HashCode = _TColStd.TColStd_MapIntegerHasher_HashCode
TColStd_MapIntegerHasher_IsEqual = _TColStd.TColStd_MapIntegerHasher_IsEqual

class TColStd_Array1OfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_Array1OfInteger_swiginit(self, _TColStd.new_TColStd_Array1OfInteger(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Length)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_IsEmpty)
    Lower = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Upper)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_IsAllocated)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Set)
    First = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array1OfInteger_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array1OfInteger

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColStd_Array1OfInteger in _TColStd:
_TColStd.TColStd_Array1OfInteger_swigregister(TColStd_Array1OfInteger)

class TColStd_Array2OfTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_Array2OfTransient_swiginit(self, _TColStd.new_TColStd_Array2OfTransient(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_Length)
    NbRows = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_NbRows)
    NbColumns = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_NbColumns)
    RowLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_RowLength)
    ColLength = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_ColLength)
    LowerRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_LowerRow)
    UpperRow = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_UpperRow)
    LowerCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_LowerCol)
    UpperCol = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_IsDeletable)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_Set)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array2OfTransient_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array2OfTransient

# Register TColStd_Array2OfTransient in _TColStd:
_TColStd.TColStd_Array2OfTransient_swigregister(TColStd_Array2OfTransient)

class TColStd_DataMapOfIntegerReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_cend)

    def __init__(self, *args):
        _TColStd.TColStd_DataMapOfIntegerReal_swiginit(self, _TColStd.new_TColStd_DataMapOfIntegerReal(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_ReSize)
    Bind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Bind)
    Bound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Bound)
    IsBound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_IsBound)
    UnBind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_UnBind)
    Seek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Seek)
    Find = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Find)
    ChangeSeek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_ChangeFind)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal___call__)
    Clear = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_DataMapOfIntegerReal
    Size = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Size)
    Keys = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerReal_Keys)

# Register TColStd_DataMapOfIntegerReal in _TColStd:
_TColStd.TColStd_DataMapOfIntegerReal_swigregister(TColStd_DataMapOfIntegerReal)

class TColStd_DataMapOfIntegerListOfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_DataMapOfIntegerListOfInteger_swiginit(self, _TColStd.new_TColStd_DataMapOfIntegerListOfInteger(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_ReSize)
    Bind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Bind)
    Bound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Bound)
    IsBound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_IsBound)
    UnBind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_UnBind)
    Seek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Seek)
    Find = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Find)
    ChangeSeek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_ChangeFind)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger___call__)
    Clear = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_DataMapOfIntegerListOfInteger
    Size = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Size)
    Keys = _swig_new_instance_method(_TColStd.TColStd_DataMapOfIntegerListOfInteger_Keys)

# Register TColStd_DataMapOfIntegerListOfInteger in _TColStd:
_TColStd.TColStd_DataMapOfIntegerListOfInteger_swigregister(TColStd_DataMapOfIntegerListOfInteger)

class TColStd_IndexedMapOfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    cbegin = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_IndexedMapOfInteger_swiginit(self, _TColStd.new_TColStd_IndexedMapOfInteger(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_ReSize)
    Add = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_Add)
    Contains = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_Contains)
    Substitute = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_Substitute)
    Swap = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_Swap)
    RemoveLast = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_RemoveLast)
    RemoveFromIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_RemoveFromIndex)
    RemoveKey = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_RemoveKey)
    FindKey = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_FindKey)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger___call__)
    FindIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_FindIndex)
    Clear = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_IndexedMapOfInteger
    Size = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfInteger_Size)

# Register TColStd_IndexedMapOfInteger in _TColStd:
_TColStd.TColStd_IndexedMapOfInteger_swigregister(TColStd_IndexedMapOfInteger)

class TColStd_MapTransientHasher(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HashCode = _swig_new_static_method(_TColStd.TColStd_MapTransientHasher_HashCode)
    IsEqual = _swig_new_static_method(_TColStd.TColStd_MapTransientHasher_IsEqual)

    def __init__(self):
        _TColStd.TColStd_MapTransientHasher_swiginit(self, _TColStd.new_TColStd_MapTransientHasher())
    __swig_destroy__ = _TColStd.delete_TColStd_MapTransientHasher

# Register TColStd_MapTransientHasher in _TColStd:
_TColStd.TColStd_MapTransientHasher_swigregister(TColStd_MapTransientHasher)
TColStd_MapTransientHasher_HashCode = _TColStd.TColStd_MapTransientHasher_HashCode
TColStd_MapTransientHasher_IsEqual = _TColStd.TColStd_MapTransientHasher_IsEqual

class TColStd_SequenceOfExtendedString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_cend)

    def __init__(self, *args):
        _TColStd.TColStd_SequenceOfExtendedString_swiginit(self, _TColStd.new_TColStd_SequenceOfExtendedString(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Length)
    Lower = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Upper)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_IsEmpty)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Reverse)
    Exchange = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Exchange)
    delNode = _swig_new_static_method(_TColStd.TColStd_SequenceOfExtendedString_delNode)
    Clear = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Clear)
    Assign = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Set)
    Remove = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Remove)
    Append = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Prepend)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_InsertAfter)
    Split = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Split)
    First = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfExtendedString_SetValue)
    __swig_destroy__ = _TColStd.delete_TColStd_SequenceOfExtendedString

# Register TColStd_SequenceOfExtendedString in _TColStd:
_TColStd.TColStd_SequenceOfExtendedString_swigregister(TColStd_SequenceOfExtendedString)
TColStd_SequenceOfExtendedString_delNode = _TColStd.TColStd_SequenceOfExtendedString_delNode

class TColStd_IndexedDataMapOfTransientTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_cend)

    def __init__(self, *args):
        _TColStd.TColStd_IndexedDataMapOfTransientTransient_swiginit(self, _TColStd.new_TColStd_IndexedDataMapOfTransientTransient(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_ReSize)
    Add = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Add)
    Contains = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Contains)
    Substitute = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Substitute)
    Swap = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Swap)
    RemoveLast = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_RemoveLast)
    RemoveFromIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_RemoveFromIndex)
    RemoveKey = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_RemoveKey)
    FindKey = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_FindKey)
    FindFromIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_FindFromIndex)
    ChangeFromIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_ChangeFromIndex)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient___call__)
    FindIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_FindIndex)
    ChangeFromKey = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_ChangeFromKey)
    Seek = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Seek)
    ChangeSeek = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_ChangeSeek)
    FindFromKey = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_FindFromKey)
    Clear = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_IndexedDataMapOfTransientTransient
    Size = _swig_new_instance_method(_TColStd.TColStd_IndexedDataMapOfTransientTransient_Size)

# Register TColStd_IndexedDataMapOfTransientTransient in _TColStd:
_TColStd.TColStd_IndexedDataMapOfTransientTransient_swigregister(TColStd_IndexedDataMapOfTransientTransient)

class TColStd_Array1OfTransient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_cend)

    def __init__(self, *args):
        _TColStd.TColStd_Array1OfTransient_swiginit(self, _TColStd.new_TColStd_Array1OfTransient(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Length)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_IsEmpty)
    Lower = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Upper)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_IsAllocated)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Set)
    First = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array1OfTransient_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array1OfTransient

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColStd_Array1OfTransient in _TColStd:
_TColStd.TColStd_Array1OfTransient_swigregister(TColStd_Array1OfTransient)

class TColStd_SequenceOfHAsciiString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_cend)

    def __init__(self, *args):
        _TColStd.TColStd_SequenceOfHAsciiString_swiginit(self, _TColStd.new_TColStd_SequenceOfHAsciiString(*args))
    Size = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Length)
    Lower = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Upper)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_IsEmpty)
    Reverse = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Reverse)
    Exchange = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Exchange)
    delNode = _swig_new_static_method(_TColStd.TColStd_SequenceOfHAsciiString_delNode)
    Clear = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Clear)
    Assign = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Set)
    Remove = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Remove)
    Append = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Append)
    Prepend = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Prepend)
    InsertBefore = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_InsertAfter)
    Split = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Split)
    First = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_SequenceOfHAsciiString_SetValue)
    __swig_destroy__ = _TColStd.delete_TColStd_SequenceOfHAsciiString

# Register TColStd_SequenceOfHAsciiString in _TColStd:
_TColStd.TColStd_SequenceOfHAsciiString_swigregister(TColStd_SequenceOfHAsciiString)
TColStd_SequenceOfHAsciiString_delNode = _TColStd.TColStd_SequenceOfHAsciiString_delNode

class TColStd_Array1OfCharacter(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_cend)

    def __init__(self, *args):
        _TColStd.TColStd_Array1OfCharacter_swiginit(self, _TColStd.new_TColStd_Array1OfCharacter(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Length)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_IsEmpty)
    Lower = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Upper)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_IsAllocated)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Set)
    First = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array1OfCharacter_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array1OfCharacter

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColStd_Array1OfCharacter in _TColStd:
_TColStd.TColStd_Array1OfCharacter_swigregister(TColStd_Array1OfCharacter)

class TColStd_Array1OfAsciiString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_cend)

    def __init__(self, *args):
        _TColStd.TColStd_Array1OfAsciiString_swiginit(self, _TColStd.new_TColStd_Array1OfAsciiString(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Length)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_IsEmpty)
    Lower = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Upper)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_IsAllocated)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Set)
    First = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array1OfAsciiString_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array1OfAsciiString

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColStd_Array1OfAsciiString in _TColStd:
_TColStd.TColStd_Array1OfAsciiString_swigregister(TColStd_Array1OfAsciiString)

class TColStd_MapOfAsciiString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    cbegin = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_cend)

    def __init__(self, *args):
        _TColStd.TColStd_MapOfAsciiString_swiginit(self, _TColStd.new_TColStd_MapOfAsciiString(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_ReSize)
    Add = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Add)
    Added = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Added)
    Remove = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Remove)
    Clear = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_MapOfAsciiString
    Size = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Size)
    IsEqual = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_IsEqual)
    Contains = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Contains)
    Union = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Union)
    Unite = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Unite)
    HasIntersection = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_HasIntersection)
    Intersection = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Intersection)
    Intersect = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Intersect)
    Subtraction = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Subtraction)
    Subtract = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Subtract)
    Difference = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Difference)
    Differ = _swig_new_instance_method(_TColStd.TColStd_MapOfAsciiString_Differ)

# Register TColStd_MapOfAsciiString in _TColStd:
_TColStd.TColStd_MapOfAsciiString_swigregister(TColStd_MapOfAsciiString)

class TColStd_MapRealHasher(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HashCode = _swig_new_static_method(_TColStd.TColStd_MapRealHasher_HashCode)
    IsEqual = _swig_new_static_method(_TColStd.TColStd_MapRealHasher_IsEqual)

    def __init__(self):
        _TColStd.TColStd_MapRealHasher_swiginit(self, _TColStd.new_TColStd_MapRealHasher())
    __swig_destroy__ = _TColStd.delete_TColStd_MapRealHasher

# Register TColStd_MapRealHasher in _TColStd:
_TColStd.TColStd_MapRealHasher_swigregister(TColStd_MapRealHasher)
TColStd_MapRealHasher_HashCode = _TColStd.TColStd_MapRealHasher_HashCode
TColStd_MapRealHasher_IsEqual = _TColStd.TColStd_MapRealHasher_IsEqual

class TColStd_DataMapOfStringInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_DataMapOfStringInteger_swiginit(self, _TColStd.new_TColStd_DataMapOfStringInteger(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_ReSize)
    Bind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_Bind)
    Bound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_Bound)
    IsBound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_IsBound)
    UnBind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_UnBind)
    Seek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_Seek)
    Find = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_Find)
    ChangeSeek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_ChangeFind)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger___call__)
    Clear = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_DataMapOfStringInteger
    Size = _swig_new_instance_method(_TColStd.TColStd_DataMapOfStringInteger_Size)

# Register TColStd_DataMapOfStringInteger in _TColStd:
_TColStd.TColStd_DataMapOfStringInteger_swigregister(TColStd_DataMapOfStringInteger)

class TColStd_IndexedMapOfReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    cbegin = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_cend)

    def __init__(self, *args):
        _TColStd.TColStd_IndexedMapOfReal_swiginit(self, _TColStd.new_TColStd_IndexedMapOfReal(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_ReSize)
    Add = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_Add)
    Contains = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_Contains)
    Substitute = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_Substitute)
    Swap = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_Swap)
    RemoveLast = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_RemoveLast)
    RemoveFromIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_RemoveFromIndex)
    RemoveKey = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_RemoveKey)
    FindKey = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_FindKey)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal___call__)
    FindIndex = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_FindIndex)
    Clear = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_IndexedMapOfReal
    Size = _swig_new_instance_method(_TColStd.TColStd_IndexedMapOfReal_Size)

# Register TColStd_IndexedMapOfReal in _TColStd:
_TColStd.TColStd_IndexedMapOfReal_swigregister(TColStd_IndexedMapOfReal)

class TColStd_Array1OfExtendedString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_cend)

    def __init__(self, *args):
        _TColStd.TColStd_Array1OfExtendedString_swiginit(self, _TColStd.new_TColStd_Array1OfExtendedString(*args))
    Init = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Init)
    Size = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Size)
    Length = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Length)
    IsEmpty = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_IsEmpty)
    Lower = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Lower)
    Upper = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Upper)
    IsDeletable = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_IsAllocated)
    Assign = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Assign)
    Move = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Move)
    Set = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Set)
    First = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_First)
    ChangeFirst = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_ChangeFirst)
    Last = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Last)
    ChangeLast = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_ChangeLast)
    Value = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Value)
    ChangeValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_ChangeValue)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString___call__)
    SetValue = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_SetValue)
    Resize = _swig_new_instance_method(_TColStd.TColStd_Array1OfExtendedString_Resize)
    __swig_destroy__ = _TColStd.delete_TColStd_Array1OfExtendedString

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColStd_Array1OfExtendedString in _TColStd:
_TColStd.TColStd_Array1OfExtendedString_swigregister(TColStd_Array1OfExtendedString)

class TColStd_DataMapOfAsciiStringInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_begin)
    end = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_end)
    cbegin = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_cbegin)
    cend = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_cend)

    def __init__(self, *args):
        _TColStd.TColStd_DataMapOfAsciiStringInteger_swiginit(self, _TColStd.new_TColStd_DataMapOfAsciiStringInteger(*args))
    Exchange = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_Exchange)
    Assign = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_Assign)
    Set = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_Set)
    ReSize = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_ReSize)
    Bind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_Bind)
    Bound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_Bound)
    IsBound = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_IsBound)
    UnBind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_UnBind)
    Seek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_Seek)
    Find = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_Find)
    ChangeSeek = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_ChangeFind)
    __call__ = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger___call__)
    Clear = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_Clear)
    __swig_destroy__ = _TColStd.delete_TColStd_DataMapOfAsciiStringInteger
    Size = _swig_new_instance_method(_TColStd.TColStd_DataMapOfAsciiStringInteger_Size)

# Register TColStd_DataMapOfAsciiStringInteger in _TColStd:
_TColStd.TColStd_DataMapOfAsciiStringInteger_swigregister(TColStd_DataMapOfAsciiStringInteger)

class TColStd_HPackedMapOfInteger(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeMap = _swig_new_instance_method(_TColStd.TColStd_HPackedMapOfInteger_ChangeMap)
    Map = _swig_new_instance_method(_TColStd.TColStd_HPackedMapOfInteger_Map)

    def __init__(self, *args):
        r"""
        :param NbBuckets: default value is 1
        	:type NbBuckets: int
        	:rtype: None:param theOther:
        	:type theOther: TColStd_PackedMapOfInteger
        	:rtype: None
        """
        _TColStd.TColStd_HPackedMapOfInteger_swiginit(self, _TColStd.new_TColStd_HPackedMapOfInteger(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HPackedMapOfInteger_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TColStd.delete_TColStd_HPackedMapOfInteger

# Register TColStd_HPackedMapOfInteger in _TColStd:
_TColStd.TColStd_HPackedMapOfInteger_swigregister(TColStd_HPackedMapOfInteger)

class TColStd_HArray1OfExtendedString(TColStd_Array1OfExtendedString, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray1OfExtendedString_swiginit(self, _TColStd.new_TColStd_HArray1OfExtendedString(*args))
    Array1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfExtendedString_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfExtendedString_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray1OfExtendedString_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray1OfExtendedString

# Register TColStd_HArray1OfExtendedString in _TColStd:
_TColStd.TColStd_HArray1OfExtendedString_swigregister(TColStd_HArray1OfExtendedString)

class TColStd_HArray1OfCharacter(TColStd_Array1OfCharacter, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray1OfCharacter_swiginit(self, _TColStd.new_TColStd_HArray1OfCharacter(*args))
    Array1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfCharacter_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfCharacter_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray1OfCharacter_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray1OfCharacter

# Register TColStd_HArray1OfCharacter in _TColStd:
_TColStd.TColStd_HArray1OfCharacter_swigregister(TColStd_HArray1OfCharacter)

class TColStd_HArray1OfBoolean(TColStd_Array1OfBoolean, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray1OfBoolean_swiginit(self, _TColStd.new_TColStd_HArray1OfBoolean(*args))
    Array1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfBoolean_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfBoolean_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray1OfBoolean_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray1OfBoolean

# Register TColStd_HArray1OfBoolean in _TColStd:
_TColStd.TColStd_HArray1OfBoolean_swigregister(TColStd_HArray1OfBoolean)

class TColStd_HArray1OfAsciiString(TColStd_Array1OfAsciiString, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray1OfAsciiString_swiginit(self, _TColStd.new_TColStd_HArray1OfAsciiString(*args))
    Array1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfAsciiString_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfAsciiString_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray1OfAsciiString_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray1OfAsciiString

# Register TColStd_HArray1OfAsciiString in _TColStd:
_TColStd.TColStd_HArray1OfAsciiString_swigregister(TColStd_HArray1OfAsciiString)

class TColStd_HArray1OfReal(TColStd_Array1OfReal, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray1OfReal_swiginit(self, _TColStd.new_TColStd_HArray1OfReal(*args))
    Array1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfReal_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfReal_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray1OfReal_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray1OfReal

# Register TColStd_HArray1OfReal in _TColStd:
_TColStd.TColStd_HArray1OfReal_swigregister(TColStd_HArray1OfReal)

class TColStd_HArray1OfInteger(TColStd_Array1OfInteger, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray1OfInteger_swiginit(self, _TColStd.new_TColStd_HArray1OfInteger(*args))
    Array1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfInteger_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfInteger_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray1OfInteger_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray1OfInteger

# Register TColStd_HArray1OfInteger in _TColStd:
_TColStd.TColStd_HArray1OfInteger_swigregister(TColStd_HArray1OfInteger)

class TColStd_HArray1OfListOfInteger(TColStd_Array1OfListOfInteger, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray1OfListOfInteger_swiginit(self, _TColStd.new_TColStd_HArray1OfListOfInteger(*args))
    Array1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfListOfInteger_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfListOfInteger_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray1OfListOfInteger_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray1OfListOfInteger

# Register TColStd_HArray1OfListOfInteger in _TColStd:
_TColStd.TColStd_HArray1OfListOfInteger_swigregister(TColStd_HArray1OfListOfInteger)

class TColStd_HArray1OfTransient(TColStd_Array1OfTransient, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray1OfTransient_swiginit(self, _TColStd.new_TColStd_HArray1OfTransient(*args))
    Array1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfTransient_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfTransient_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray1OfTransient_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray1OfTransient

# Register TColStd_HArray1OfTransient in _TColStd:
_TColStd.TColStd_HArray1OfTransient_swigregister(TColStd_HArray1OfTransient)

class TColStd_HArray1OfByte(TColStd_Array1OfByte, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray1OfByte_swiginit(self, _TColStd.new_TColStd_HArray1OfByte(*args))
    Array1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfByte_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColStd.TColStd_HArray1OfByte_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray1OfByte_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray1OfByte

# Register TColStd_HArray1OfByte in _TColStd:
_TColStd.TColStd_HArray1OfByte_swigregister(TColStd_HArray1OfByte)

class TColStd_HArray2OfBoolean(TColStd_Array2OfBoolean, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray2OfBoolean_swiginit(self, _TColStd.new_TColStd_HArray2OfBoolean(*args))
    Array2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfBoolean_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfBoolean_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray2OfBoolean_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray2OfBoolean

# Register TColStd_HArray2OfBoolean in _TColStd:
_TColStd.TColStd_HArray2OfBoolean_swigregister(TColStd_HArray2OfBoolean)

class TColStd_HArray2OfTransient(TColStd_Array2OfTransient, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray2OfTransient_swiginit(self, _TColStd.new_TColStd_HArray2OfTransient(*args))
    Array2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfTransient_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfTransient_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray2OfTransient_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray2OfTransient

# Register TColStd_HArray2OfTransient in _TColStd:
_TColStd.TColStd_HArray2OfTransient_swigregister(TColStd_HArray2OfTransient)

class TColStd_HArray2OfReal(TColStd_Array2OfReal, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray2OfReal_swiginit(self, _TColStd.new_TColStd_HArray2OfReal(*args))
    Array2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfReal_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfReal_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray2OfReal_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray2OfReal

# Register TColStd_HArray2OfReal in _TColStd:
_TColStd.TColStd_HArray2OfReal_swigregister(TColStd_HArray2OfReal)

class TColStd_HArray2OfInteger(TColStd_Array2OfInteger, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray2OfInteger_swiginit(self, _TColStd.new_TColStd_HArray2OfInteger(*args))
    Array2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfInteger_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfInteger_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray2OfInteger_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray2OfInteger

# Register TColStd_HArray2OfInteger in _TColStd:
_TColStd.TColStd_HArray2OfInteger_swigregister(TColStd_HArray2OfInteger)

class TColStd_HArray2OfCharacter(TColStd_Array2OfCharacter, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HArray2OfCharacter_swiginit(self, _TColStd.new_TColStd_HArray2OfCharacter(*args))
    Array2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfCharacter_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColStd.TColStd_HArray2OfCharacter_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HArray2OfCharacter_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HArray2OfCharacter

# Register TColStd_HArray2OfCharacter in _TColStd:
_TColStd.TColStd_HArray2OfCharacter_swigregister(TColStd_HArray2OfCharacter)

class TColStd_HSequenceOfHAsciiString(TColStd_SequenceOfHAsciiString, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HSequenceOfHAsciiString_swiginit(self, _TColStd.new_TColStd_HSequenceOfHAsciiString(*args))
    Sequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfHAsciiString_Sequence)
    Append = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfHAsciiString_Append)
    ChangeSequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfHAsciiString_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HSequenceOfHAsciiString_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HSequenceOfHAsciiString

# Register TColStd_HSequenceOfHAsciiString in _TColStd:
_TColStd.TColStd_HSequenceOfHAsciiString_swigregister(TColStd_HSequenceOfHAsciiString)

class TColStd_HSequenceOfTransient(TColStd_SequenceOfTransient, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HSequenceOfTransient_swiginit(self, _TColStd.new_TColStd_HSequenceOfTransient(*args))
    Sequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfTransient_Sequence)
    Append = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfTransient_Append)
    ChangeSequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfTransient_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HSequenceOfTransient_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HSequenceOfTransient

# Register TColStd_HSequenceOfTransient in _TColStd:
_TColStd.TColStd_HSequenceOfTransient_swigregister(TColStd_HSequenceOfTransient)

class TColStd_HSequenceOfAsciiString(TColStd_SequenceOfAsciiString, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HSequenceOfAsciiString_swiginit(self, _TColStd.new_TColStd_HSequenceOfAsciiString(*args))
    Sequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfAsciiString_Sequence)
    Append = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfAsciiString_Append)
    ChangeSequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfAsciiString_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HSequenceOfAsciiString_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HSequenceOfAsciiString

# Register TColStd_HSequenceOfAsciiString in _TColStd:
_TColStd.TColStd_HSequenceOfAsciiString_swigregister(TColStd_HSequenceOfAsciiString)

class TColStd_HSequenceOfHExtendedString(TColStd_SequenceOfHExtendedString, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HSequenceOfHExtendedString_swiginit(self, _TColStd.new_TColStd_HSequenceOfHExtendedString(*args))
    Sequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfHExtendedString_Sequence)
    Append = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfHExtendedString_Append)
    ChangeSequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfHExtendedString_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HSequenceOfHExtendedString_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HSequenceOfHExtendedString

# Register TColStd_HSequenceOfHExtendedString in _TColStd:
_TColStd.TColStd_HSequenceOfHExtendedString_swigregister(TColStd_HSequenceOfHExtendedString)

class TColStd_HSequenceOfInteger(TColStd_SequenceOfInteger, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HSequenceOfInteger_swiginit(self, _TColStd.new_TColStd_HSequenceOfInteger(*args))
    Sequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfInteger_Sequence)
    Append = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfInteger_Append)
    ChangeSequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfInteger_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HSequenceOfInteger_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HSequenceOfInteger

# Register TColStd_HSequenceOfInteger in _TColStd:
_TColStd.TColStd_HSequenceOfInteger_swigregister(TColStd_HSequenceOfInteger)

class TColStd_HSequenceOfExtendedString(TColStd_SequenceOfExtendedString, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HSequenceOfExtendedString_swiginit(self, _TColStd.new_TColStd_HSequenceOfExtendedString(*args))
    Sequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfExtendedString_Sequence)
    Append = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfExtendedString_Append)
    ChangeSequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfExtendedString_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HSequenceOfExtendedString_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HSequenceOfExtendedString

# Register TColStd_HSequenceOfExtendedString in _TColStd:
_TColStd.TColStd_HSequenceOfExtendedString_swigregister(TColStd_HSequenceOfExtendedString)

class TColStd_HSequenceOfReal(TColStd_SequenceOfReal, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColStd.TColStd_HSequenceOfReal_swiginit(self, _TColStd.new_TColStd_HSequenceOfReal(*args))
    Sequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfReal_Sequence)
    Append = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfReal_Append)
    ChangeSequence = _swig_new_instance_method(_TColStd.TColStd_HSequenceOfReal_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColStd_HSequenceOfReal_DownCast(t)

    __swig_destroy__ = _TColStd.delete_TColStd_HSequenceOfReal

# Register TColStd_HSequenceOfReal in _TColStd:
_TColStd.TColStd_HSequenceOfReal_swigregister(TColStd_HSequenceOfReal)



