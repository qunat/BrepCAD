# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
IGESControl module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_igescontrol.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _IGESControl
else:
    import _IGESControl

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _IGESControl.SWIG_PyInstanceMethod_New
_swig_new_static_method = _IGESControl.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _IGESControl.delete_SwigPyIterator
    value = _swig_new_instance_method(_IGESControl.SwigPyIterator_value)
    incr = _swig_new_instance_method(_IGESControl.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_IGESControl.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_IGESControl.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_IGESControl.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_IGESControl.SwigPyIterator_copy)
    next = _swig_new_instance_method(_IGESControl.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_IGESControl.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_IGESControl.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_IGESControl.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_IGESControl.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_IGESControl.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_IGESControl.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_IGESControl.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_IGESControl.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_IGESControl.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _IGESControl:
_IGESControl.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.Transfer
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.IGESToBRep
import OCC.Core.IGESData
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.ShapeExtend
import OCC.Core.TColGeom
import OCC.Core.TopTools
import OCC.Core.Geom2d
import OCC.Core.XSControl
import OCC.Core.IFSelect
Handle_IGESControl_ActorWrite_Create = _IGESControl.Handle_IGESControl_ActorWrite_Create
Handle_IGESControl_ActorWrite_DownCast = _IGESControl.Handle_IGESControl_ActorWrite_DownCast
Handle_IGESControl_ActorWrite_IsNull = _IGESControl.Handle_IGESControl_ActorWrite_IsNull
Handle_IGESControl_AlgoContainer_Create = _IGESControl.Handle_IGESControl_AlgoContainer_Create
Handle_IGESControl_AlgoContainer_DownCast = _IGESControl.Handle_IGESControl_AlgoContainer_DownCast
Handle_IGESControl_AlgoContainer_IsNull = _IGESControl.Handle_IGESControl_AlgoContainer_IsNull
Handle_IGESControl_Controller_Create = _IGESControl.Handle_IGESControl_Controller_Create
Handle_IGESControl_Controller_DownCast = _IGESControl.Handle_IGESControl_Controller_DownCast
Handle_IGESControl_Controller_IsNull = _IGESControl.Handle_IGESControl_Controller_IsNull
Handle_IGESControl_IGESBoundary_Create = _IGESControl.Handle_IGESControl_IGESBoundary_Create
Handle_IGESControl_IGESBoundary_DownCast = _IGESControl.Handle_IGESControl_IGESBoundary_DownCast
Handle_IGESControl_IGESBoundary_IsNull = _IGESControl.Handle_IGESControl_IGESBoundary_IsNull
Handle_IGESControl_ToolContainer_Create = _IGESControl.Handle_IGESControl_ToolContainer_Create
Handle_IGESControl_ToolContainer_DownCast = _IGESControl.Handle_IGESControl_ToolContainer_DownCast
Handle_IGESControl_ToolContainer_IsNull = _IGESControl.Handle_IGESControl_ToolContainer_IsNull
class IGESControl_ActorWrite(OCC.Core.Transfer.Transfer_ActorOfFinderProcess):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r""":rtype: None"""
        _IGESControl.IGESControl_ActorWrite_swiginit(self, _IGESControl.new_IGESControl_ActorWrite(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IGESControl_ActorWrite_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IGESControl.delete_IGESControl_ActorWrite

# Register IGESControl_ActorWrite in _IGESControl:
_IGESControl.IGESControl_ActorWrite_swigregister(IGESControl_ActorWrite)

class IGESControl_AlgoContainer(OCC.Core.IGESToBRep.IGESToBRep_AlgoContainer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _IGESControl.IGESControl_AlgoContainer_swiginit(self, _IGESControl.new_IGESControl_AlgoContainer(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IGESControl_AlgoContainer_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IGESControl.delete_IGESControl_AlgoContainer

# Register IGESControl_AlgoContainer in _IGESControl:
_IGESControl.IGESControl_AlgoContainer_swigregister(IGESControl_AlgoContainer)

class IGESControl_Controller(OCC.Core.XSControl.XSControl_Controller):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Initializes the use of IGES Norm (the first time) and returns a Controller for IGES-5.1 If <modefnes> is True, sets it to internal FNES format
        	:param modefnes: default value is Standard_False
        	:type modefnes: bool
        	:rtype: None
        """
        _IGESControl.IGESControl_Controller_swiginit(self, _IGESControl.new_IGESControl_Controller(*args))
    Init = _swig_new_static_method(_IGESControl.IGESControl_Controller_Init)


    @staticmethod
    def DownCast(t):
      return Handle_IGESControl_Controller_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IGESControl.delete_IGESControl_Controller

# Register IGESControl_Controller in _IGESControl:
_IGESControl.IGESControl_Controller_swigregister(IGESControl_Controller)
IGESControl_Controller_Init = _IGESControl.IGESControl_Controller_Init

class IGESControl_IGESBoundary(OCC.Core.IGESToBRep.IGESToBRep_IGESBoundary):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates an object and calls inherited constuctor.
        	:rtype: None* Creates an object and calls inherited constuctor.
        	:param CS:
        	:type CS: IGESToBRep_CurveAndSurface
        	:rtype: None
        """
        _IGESControl.IGESControl_IGESBoundary_swiginit(self, _IGESControl.new_IGESControl_IGESBoundary(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IGESControl_IGESBoundary_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IGESControl.delete_IGESControl_IGESBoundary

# Register IGESControl_IGESBoundary in _IGESControl:
_IGESControl.IGESControl_IGESBoundary_swigregister(IGESControl_IGESBoundary)

class IGESControl_Reader(OCC.Core.XSControl.XSControl_Reader):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetReadVisible = _swig_new_instance_method(_IGESControl.IGESControl_Reader_GetReadVisible)

    def __init__(self, *args):
        r"""
        * Creates a Reader from scratch
        	:rtype: None* Creates a Reader from an already existing Session
        	:param WS:
        	:type WS: XSControl_WorkSession
        	:param scratch: default value is Standard_True
        	:type scratch: bool
        	:rtype: None
        """
        _IGESControl.IGESControl_Reader_swiginit(self, _IGESControl.new_IGESControl_Reader(*args))
    IGESModel = _swig_new_instance_method(_IGESControl.IGESControl_Reader_IGESModel)
    PrintTransferInfo = _swig_new_instance_method(_IGESControl.IGESControl_Reader_PrintTransferInfo)
    SetReadVisible = _swig_new_instance_method(_IGESControl.IGESControl_Reader_SetReadVisible)

    __repr__ = _dumps_object

    __swig_destroy__ = _IGESControl.delete_IGESControl_Reader

# Register IGESControl_Reader in _IGESControl:
_IGESControl.IGESControl_Reader_swigregister(IGESControl_Reader)

class IGESControl_ToolContainer(OCC.Core.IGESToBRep.IGESToBRep_ToolContainer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _IGESControl.IGESControl_ToolContainer_swiginit(self, _IGESControl.new_IGESControl_ToolContainer(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IGESControl_ToolContainer_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IGESControl.delete_IGESControl_ToolContainer

# Register IGESControl_ToolContainer in _IGESControl:
_IGESControl.IGESControl_ToolContainer_swigregister(IGESControl_ToolContainer)

class IGESControl_Writer(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddEntity = _swig_new_instance_method(_IGESControl.IGESControl_Writer_AddEntity)
    AddGeom = _swig_new_instance_method(_IGESControl.IGESControl_Writer_AddGeom)
    AddShape = _swig_new_instance_method(_IGESControl.IGESControl_Writer_AddShape)
    ComputeModel = _swig_new_instance_method(_IGESControl.IGESControl_Writer_ComputeModel)

    def __init__(self, *args):
        r"""
        * Creates a writer object with the default unit (millimeters) and write mode (Face). IGESControl_Writer (const Standard_CString unit, const Standard_Integer modecr = 0);
        	:rtype: None* Creates a writer with given values for units and for write mode. unit may be any unit that is accepted by the IGES standard. By default, it is the millimeter. modecr defines the write mode and may be: - 0: Faces (default) - 1: BRep.
        	:param unit:
        	:type unit: char *
        	:param modecr: default value is 0
        	:type modecr: int
        	:rtype: None* Creates a writer object with the prepared IGES model model in write mode. modecr defines the write mode and may be: - 0: Faces (default) - 1: BRep.
        	:param model:
        	:type model: IGESData_IGESModel
        	:param modecr: default value is 0
        	:type modecr: int
        	:rtype: None
        """
        _IGESControl.IGESControl_Writer_swiginit(self, _IGESControl.new_IGESControl_Writer(*args))
    Model = _swig_new_instance_method(_IGESControl.IGESControl_Writer_Model)
    SetTransferProcess = _swig_new_instance_method(_IGESControl.IGESControl_Writer_SetTransferProcess)
    TransferProcess = _swig_new_instance_method(_IGESControl.IGESControl_Writer_TransferProcess)
    Write = _swig_new_instance_method(_IGESControl.IGESControl_Writer_Write)

    __repr__ = _dumps_object

    __swig_destroy__ = _IGESControl.delete_IGESControl_Writer

# Register IGESControl_Writer in _IGESControl:
_IGESControl.IGESControl_Writer_swigregister(IGESControl_Writer)



