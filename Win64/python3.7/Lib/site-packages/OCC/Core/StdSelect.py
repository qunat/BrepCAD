# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StdSelect module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stdselect.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _StdSelect
else:
    import _StdSelect

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _StdSelect.SWIG_PyInstanceMethod_New
_swig_new_static_method = _StdSelect.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StdSelect.delete_SwigPyIterator
    value = _swig_new_instance_method(_StdSelect.SwigPyIterator_value)
    incr = _swig_new_instance_method(_StdSelect.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_StdSelect.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_StdSelect.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_StdSelect.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_StdSelect.SwigPyIterator_copy)
    next = _swig_new_instance_method(_StdSelect.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_StdSelect.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_StdSelect.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_StdSelect.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_StdSelect.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_StdSelect.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_StdSelect.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_StdSelect.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_StdSelect.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_StdSelect.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _StdSelect:
_StdSelect.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.SelectMgr
import OCC.Core.PrsMgr
import OCC.Core.Prs3d
import OCC.Core.TColgp
import OCC.Core.Graphic3d
import OCC.Core.BVH
import OCC.Core.Quantity
import OCC.Core.TCollection
import OCC.Core.gp
import OCC.Core.Aspect
import OCC.Core.Geom
import OCC.Core.GeomAbs
import OCC.Core.TColStd
import OCC.Core.Bnd
import OCC.Core.Image
import OCC.Core.OSD
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.HLRAlgo
import OCC.Core.Poly
import OCC.Core.TShort
import OCC.Core.TopTools
import OCC.Core.V3d
import OCC.Core.SelectBasics
import OCC.Core.Select3D
StdSelect_TOR_SIMPLE = _StdSelect.StdSelect_TOR_SIMPLE
StdSelect_TOR_MULTIPLE = _StdSelect.StdSelect_TOR_MULTIPLE
StdSelect_SM_WINDOW = _StdSelect.StdSelect_SM_WINDOW
StdSelect_SM_VIEW = _StdSelect.StdSelect_SM_VIEW
StdSelect_AnyFace = _StdSelect.StdSelect_AnyFace
StdSelect_Plane = _StdSelect.StdSelect_Plane
StdSelect_Cylinder = _StdSelect.StdSelect_Cylinder
StdSelect_Sphere = _StdSelect.StdSelect_Sphere
StdSelect_Torus = _StdSelect.StdSelect_Torus
StdSelect_Revol = _StdSelect.StdSelect_Revol
StdSelect_Cone = _StdSelect.StdSelect_Cone
StdSelect_AnyEdge = _StdSelect.StdSelect_AnyEdge
StdSelect_Line = _StdSelect.StdSelect_Line
StdSelect_Circle = _StdSelect.StdSelect_Circle
StdSelect_DM_Wireframe = _StdSelect.StdSelect_DM_Wireframe
StdSelect_DM_Shading = _StdSelect.StdSelect_DM_Shading
StdSelect_DM_HLR = _StdSelect.StdSelect_DM_HLR
StdSelect_TypeOfSelectionImage_NormalizedDepth = _StdSelect.StdSelect_TypeOfSelectionImage_NormalizedDepth
StdSelect_TypeOfSelectionImage_NormalizedDepthInverted = _StdSelect.StdSelect_TypeOfSelectionImage_NormalizedDepthInverted
StdSelect_TypeOfSelectionImage_UnnormalizedDepth = _StdSelect.StdSelect_TypeOfSelectionImage_UnnormalizedDepth
StdSelect_TypeOfSelectionImage_ColoredDetectedObject = _StdSelect.StdSelect_TypeOfSelectionImage_ColoredDetectedObject
StdSelect_TypeOfSelectionImage_ColoredEntity = _StdSelect.StdSelect_TypeOfSelectionImage_ColoredEntity
StdSelect_TypeOfSelectionImage_ColoredOwner = _StdSelect.StdSelect_TypeOfSelectionImage_ColoredOwner
StdSelect_TypeOfSelectionImage_ColoredSelectionMode = _StdSelect.StdSelect_TypeOfSelectionImage_ColoredSelectionMode
Handle_StdSelect_BRepOwner_Create = _StdSelect.Handle_StdSelect_BRepOwner_Create
Handle_StdSelect_BRepOwner_DownCast = _StdSelect.Handle_StdSelect_BRepOwner_DownCast
Handle_StdSelect_BRepOwner_IsNull = _StdSelect.Handle_StdSelect_BRepOwner_IsNull
Handle_StdSelect_EdgeFilter_Create = _StdSelect.Handle_StdSelect_EdgeFilter_Create
Handle_StdSelect_EdgeFilter_DownCast = _StdSelect.Handle_StdSelect_EdgeFilter_DownCast
Handle_StdSelect_EdgeFilter_IsNull = _StdSelect.Handle_StdSelect_EdgeFilter_IsNull
Handle_StdSelect_FaceFilter_Create = _StdSelect.Handle_StdSelect_FaceFilter_Create
Handle_StdSelect_FaceFilter_DownCast = _StdSelect.Handle_StdSelect_FaceFilter_DownCast
Handle_StdSelect_FaceFilter_IsNull = _StdSelect.Handle_StdSelect_FaceFilter_IsNull
Handle_StdSelect_Prs_Create = _StdSelect.Handle_StdSelect_Prs_Create
Handle_StdSelect_Prs_DownCast = _StdSelect.Handle_StdSelect_Prs_DownCast
Handle_StdSelect_Prs_IsNull = _StdSelect.Handle_StdSelect_Prs_IsNull
Handle_StdSelect_Shape_Create = _StdSelect.Handle_StdSelect_Shape_Create
Handle_StdSelect_Shape_DownCast = _StdSelect.Handle_StdSelect_Shape_DownCast
Handle_StdSelect_Shape_IsNull = _StdSelect.Handle_StdSelect_Shape_IsNull
Handle_StdSelect_ShapeTypeFilter_Create = _StdSelect.Handle_StdSelect_ShapeTypeFilter_Create
Handle_StdSelect_ShapeTypeFilter_DownCast = _StdSelect.Handle_StdSelect_ShapeTypeFilter_DownCast
Handle_StdSelect_ShapeTypeFilter_IsNull = _StdSelect.Handle_StdSelect_ShapeTypeFilter_IsNull
Handle_StdSelect_ViewerSelector3d_Create = _StdSelect.Handle_StdSelect_ViewerSelector3d_Create
Handle_StdSelect_ViewerSelector3d_DownCast = _StdSelect.Handle_StdSelect_ViewerSelector3d_DownCast
Handle_StdSelect_ViewerSelector3d_IsNull = _StdSelect.Handle_StdSelect_ViewerSelector3d_IsNull
class StdSelect_IndexedDataMapOfOwnerPrs(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_begin)
    end = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_end)
    cbegin = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_cbegin)
    cend = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_cend)

    def __init__(self, *args):
        _StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_swiginit(self, _StdSelect.new_StdSelect_IndexedDataMapOfOwnerPrs(*args))
    Exchange = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Exchange)
    Assign = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Assign)
    Set = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Set)
    ReSize = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_ReSize)
    Add = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Add)
    Contains = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Contains)
    Substitute = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Substitute)
    Swap = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Swap)
    RemoveLast = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_RemoveLast)
    RemoveFromIndex = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_RemoveFromIndex)
    RemoveKey = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_RemoveKey)
    FindKey = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_FindKey)
    FindFromIndex = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_FindFromIndex)
    ChangeFromIndex = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_ChangeFromIndex)
    __call__ = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs___call__)
    FindIndex = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_FindIndex)
    ChangeFromKey = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_ChangeFromKey)
    Seek = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Seek)
    ChangeSeek = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_ChangeSeek)
    FindFromKey = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_FindFromKey)
    Clear = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Clear)
    __swig_destroy__ = _StdSelect.delete_StdSelect_IndexedDataMapOfOwnerPrs
    Size = _swig_new_instance_method(_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_Size)

# Register StdSelect_IndexedDataMapOfOwnerPrs in _StdSelect:
_StdSelect.StdSelect_IndexedDataMapOfOwnerPrs_swigregister(StdSelect_IndexedDataMapOfOwnerPrs)

class stdselect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SetDrawerForBRepOwner = _swig_new_static_method(_StdSelect.stdselect_SetDrawerForBRepOwner)

    __repr__ = _dumps_object


    def __init__(self):
        _StdSelect.stdselect_swiginit(self, _StdSelect.new_stdselect())
    __swig_destroy__ = _StdSelect.delete_stdselect

# Register stdselect in _StdSelect:
_StdSelect.stdselect_swigregister(stdselect)
stdselect_SetDrawerForBRepOwner = _StdSelect.stdselect_SetDrawerForBRepOwner

class StdSelect_BRepOwner(OCC.Core.SelectMgr.SelectMgr_EntityOwner):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Clear = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_Clear)
    HasHilightMode = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_HasHilightMode)
    HasShape = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_HasShape)
    HilightMode = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_HilightMode)
    IsHilighted = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_IsHilighted)
    ResetHilightMode = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_ResetHilightMode)
    SetHilightMode = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_SetHilightMode)
    SetLocation = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_SetLocation)
    Shape = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_Shape)

    def __init__(self, *args):
        r"""
        * Constructs an owner specification framework defined by the priority aPriority.
        	:param aPriority:
        	:type aPriority: int
        	:rtype: None* Constructs an owner specification framework defined by the shape aShape and the priority aPriority. aShape and aPriority are stored in this framework. If more than one owner are detected during dynamic selection, the one with the highest priority is the one stored.
        	:param aShape:
        	:type aShape: TopoDS_Shape
        	:param aPriority: default value is 0
        	:type aPriority: int
        	:param ComesFromDecomposition: default value is Standard_False
        	:type ComesFromDecomposition: bool
        	:rtype: None* Constructs an owner specification framework defined by the shape aShape, the selectable object theOrigin and the priority aPriority. aShape, theOrigin and aPriority are stored in this framework. If more than one owner are detected during dynamic selection, the one with the highest priority is the one stored.
        	:param aShape:
        	:type aShape: TopoDS_Shape
        	:param theOrigin:
        	:type theOrigin: SelectMgr_SelectableObject
        	:param aPriority: default value is 0
        	:type aPriority: int
        	:param FromDecomposition: default value is Standard_False
        	:type FromDecomposition: bool
        	:rtype: None
        """
        _StdSelect.StdSelect_BRepOwner_swiginit(self, _StdSelect.new_StdSelect_BRepOwner(*args))
    Unhilight = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_Unhilight)
    UpdateHighlightTrsf = _swig_new_instance_method(_StdSelect.StdSelect_BRepOwner_UpdateHighlightTrsf)


    @staticmethod
    def DownCast(t):
      return Handle_StdSelect_BRepOwner_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StdSelect.delete_StdSelect_BRepOwner

# Register StdSelect_BRepOwner in _StdSelect:
_StdSelect.StdSelect_BRepOwner_swigregister(StdSelect_BRepOwner)

class StdSelect_BRepSelectionTool(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ComputeSensitive = _swig_new_static_method(_StdSelect.StdSelect_BRepSelectionTool_ComputeSensitive)
    GetEdgeSensitive = _swig_new_static_method(_StdSelect.StdSelect_BRepSelectionTool_GetEdgeSensitive)
    GetSensitiveForFace = _swig_new_static_method(_StdSelect.StdSelect_BRepSelectionTool_GetSensitiveForFace)
    GetStandardPriority = _swig_new_static_method(_StdSelect.StdSelect_BRepSelectionTool_GetStandardPriority)
    Load = _swig_new_static_method(_StdSelect.StdSelect_BRepSelectionTool_Load)
    PreBuildBVH = _swig_new_static_method(_StdSelect.StdSelect_BRepSelectionTool_PreBuildBVH)

    __repr__ = _dumps_object


    def __init__(self):
        _StdSelect.StdSelect_BRepSelectionTool_swiginit(self, _StdSelect.new_StdSelect_BRepSelectionTool())
    __swig_destroy__ = _StdSelect.delete_StdSelect_BRepSelectionTool

# Register StdSelect_BRepSelectionTool in _StdSelect:
_StdSelect.StdSelect_BRepSelectionTool_swigregister(StdSelect_BRepSelectionTool)
StdSelect_BRepSelectionTool_ComputeSensitive = _StdSelect.StdSelect_BRepSelectionTool_ComputeSensitive
StdSelect_BRepSelectionTool_GetEdgeSensitive = _StdSelect.StdSelect_BRepSelectionTool_GetEdgeSensitive
StdSelect_BRepSelectionTool_GetSensitiveForFace = _StdSelect.StdSelect_BRepSelectionTool_GetSensitiveForFace
StdSelect_BRepSelectionTool_GetStandardPriority = _StdSelect.StdSelect_BRepSelectionTool_GetStandardPriority
StdSelect_BRepSelectionTool_Load = _StdSelect.StdSelect_BRepSelectionTool_Load
StdSelect_BRepSelectionTool_PreBuildBVH = _StdSelect.StdSelect_BRepSelectionTool_PreBuildBVH

class StdSelect_EdgeFilter(OCC.Core.SelectMgr.SelectMgr_Filter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SetType = _swig_new_instance_method(_StdSelect.StdSelect_EdgeFilter_SetType)

    def __init__(self, *args):
        r"""
        * Constructs an edge filter object defined by the type of edge Edge.
        	:param Edge:
        	:type Edge: StdSelect_TypeOfEdge
        	:rtype: None
        """
        _StdSelect.StdSelect_EdgeFilter_swiginit(self, _StdSelect.new_StdSelect_EdgeFilter(*args))
    Type = _swig_new_instance_method(_StdSelect.StdSelect_EdgeFilter_Type)


    @staticmethod
    def DownCast(t):
      return Handle_StdSelect_EdgeFilter_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StdSelect.delete_StdSelect_EdgeFilter

# Register StdSelect_EdgeFilter in _StdSelect:
_StdSelect.StdSelect_EdgeFilter_swigregister(StdSelect_EdgeFilter)

class StdSelect_FaceFilter(OCC.Core.SelectMgr.SelectMgr_Filter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SetType = _swig_new_instance_method(_StdSelect.StdSelect_FaceFilter_SetType)

    def __init__(self, *args):
        r"""
        * Constructs a face filter object defined by the type of face aTypeOfFace.
        	:param aTypeOfFace:
        	:type aTypeOfFace: StdSelect_TypeOfFace
        	:rtype: None
        """
        _StdSelect.StdSelect_FaceFilter_swiginit(self, _StdSelect.new_StdSelect_FaceFilter(*args))
    Type = _swig_new_instance_method(_StdSelect.StdSelect_FaceFilter_Type)


    @staticmethod
    def DownCast(t):
      return Handle_StdSelect_FaceFilter_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StdSelect.delete_StdSelect_FaceFilter

# Register StdSelect_FaceFilter in _StdSelect:
_StdSelect.StdSelect_FaceFilter_swigregister(StdSelect_FaceFilter)

class StdSelect_Prs(OCC.Core.Graphic3d.Graphic3d_Structure):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Manager = _swig_new_instance_method(_StdSelect.StdSelect_Prs_Manager)

    def __init__(self, *args):
        r"""
        :param aStructureManager:
        	:type aStructureManager: Graphic3d_StructureManager
        	:rtype: None
        """
        _StdSelect.StdSelect_Prs_swiginit(self, _StdSelect.new_StdSelect_Prs(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StdSelect_Prs_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StdSelect.delete_StdSelect_Prs

# Register StdSelect_Prs in _StdSelect:
_StdSelect.StdSelect_Prs_swigregister(StdSelect_Prs)

class StdSelect_Shape(OCC.Core.PrsMgr.PrsMgr_PresentableObject):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Compute = _swig_new_instance_method(_StdSelect.StdSelect_Shape_Compute)
    Shape = _swig_new_instance_method(_StdSelect.StdSelect_Shape_Shape)

    def __init__(self, *args):
        r"""
        :param theShape:
        	:type theShape: TopoDS_Shape
        	:param theDrawer: default value is opencascade::handle<Prs3d_Drawer>()
        	:type theDrawer: Prs3d_Drawer
        	:rtype: None
        """
        _StdSelect.StdSelect_Shape_swiginit(self, _StdSelect.new_StdSelect_Shape(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StdSelect_Shape_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StdSelect.delete_StdSelect_Shape

# Register StdSelect_Shape in _StdSelect:
_StdSelect.StdSelect_Shape_swigregister(StdSelect_Shape)

class StdSelect_ShapeTypeFilter(OCC.Core.SelectMgr.SelectMgr_Filter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Constructs a filter object defined by the shape type aType.
        	:param aType:
        	:type aType: TopAbs_ShapeEnum
        	:rtype: None
        """
        _StdSelect.StdSelect_ShapeTypeFilter_swiginit(self, _StdSelect.new_StdSelect_ShapeTypeFilter(*args))
    Type = _swig_new_instance_method(_StdSelect.StdSelect_ShapeTypeFilter_Type)


    @staticmethod
    def DownCast(t):
      return Handle_StdSelect_ShapeTypeFilter_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StdSelect.delete_StdSelect_ShapeTypeFilter

# Register StdSelect_ShapeTypeFilter in _StdSelect:
_StdSelect.StdSelect_ShapeTypeFilter_swigregister(StdSelect_ShapeTypeFilter)

class StdSelect_ViewerSelector3d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ClearSensitive = _swig_new_instance_method(_StdSelect.StdSelect_ViewerSelector3d_ClearSensitive)
    DisplaySensitive = _swig_new_instance_method(_StdSelect.StdSelect_ViewerSelector3d_DisplaySensitive)
    Pick = _swig_new_instance_method(_StdSelect.StdSelect_ViewerSelector3d_Pick)
    PixelTolerance = _swig_new_instance_method(_StdSelect.StdSelect_ViewerSelector3d_PixelTolerance)
    SetPixelTolerance = _swig_new_instance_method(_StdSelect.StdSelect_ViewerSelector3d_SetPixelTolerance)

    def __init__(self, *args):
        r"""
        * Constructs an empty 3D selector object.
        	:rtype: None
        """
        _StdSelect.StdSelect_ViewerSelector3d_swiginit(self, _StdSelect.new_StdSelect_ViewerSelector3d(*args))
    ToPixMap = _swig_new_instance_method(_StdSelect.StdSelect_ViewerSelector3d_ToPixMap)


    @staticmethod
    def DownCast(t):
      return Handle_StdSelect_ViewerSelector3d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StdSelect.delete_StdSelect_ViewerSelector3d

# Register StdSelect_ViewerSelector3d in _StdSelect:
_StdSelect.StdSelect_ViewerSelector3d_swigregister(StdSelect_ViewerSelector3d)



