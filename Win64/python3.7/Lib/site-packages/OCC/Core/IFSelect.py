# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
IFSelect module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_ifselect.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _IFSelect
else:
    import _IFSelect

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _IFSelect.SWIG_PyInstanceMethod_New
_swig_new_static_method = _IFSelect.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _IFSelect.delete_SwigPyIterator
    value = _swig_new_instance_method(_IFSelect.SwigPyIterator_value)
    incr = _swig_new_instance_method(_IFSelect.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_IFSelect.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_IFSelect.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_IFSelect.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_IFSelect.SwigPyIterator_copy)
    next = _swig_new_instance_method(_IFSelect.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_IFSelect.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_IFSelect.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_IFSelect.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_IFSelect.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_IFSelect.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_IFSelect.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_IFSelect.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_IFSelect.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_IFSelect.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _IFSelect:
_IFSelect.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.Interface
import OCC.Core.TCollection
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
IFSelect_FailOnly = _IFSelect.IFSelect_FailOnly
IFSelect_FailAndWarn = _IFSelect.IFSelect_FailAndWarn
IFSelect_RemainForget = _IFSelect.IFSelect_RemainForget
IFSelect_RemainCompute = _IFSelect.IFSelect_RemainCompute
IFSelect_RemainDisplay = _IFSelect.IFSelect_RemainDisplay
IFSelect_RemainUndo = _IFSelect.IFSelect_RemainUndo
IFSelect_Optional = _IFSelect.IFSelect_Optional
IFSelect_Editable = _IFSelect.IFSelect_Editable
IFSelect_EditProtected = _IFSelect.IFSelect_EditProtected
IFSelect_EditComputed = _IFSelect.IFSelect_EditComputed
IFSelect_EditRead = _IFSelect.IFSelect_EditRead
IFSelect_EditDynamic = _IFSelect.IFSelect_EditDynamic
IFSelect_RetVoid = _IFSelect.IFSelect_RetVoid
IFSelect_RetDone = _IFSelect.IFSelect_RetDone
IFSelect_RetError = _IFSelect.IFSelect_RetError
IFSelect_RetFail = _IFSelect.IFSelect_RetFail
IFSelect_RetStop = _IFSelect.IFSelect_RetStop
IFSelect_ItemsByEntity = _IFSelect.IFSelect_ItemsByEntity
IFSelect_CountByItem = _IFSelect.IFSelect_CountByItem
IFSelect_ShortByItem = _IFSelect.IFSelect_ShortByItem
IFSelect_ListByItem = _IFSelect.IFSelect_ListByItem
IFSelect_EntitiesByItem = _IFSelect.IFSelect_EntitiesByItem
IFSelect_CountSummary = _IFSelect.IFSelect_CountSummary
IFSelect_GeneralInfo = _IFSelect.IFSelect_GeneralInfo
IFSelect_Mapping = _IFSelect.IFSelect_Mapping
IFSelect_ResultCount = _IFSelect.IFSelect_ResultCount
Handle_IFSelect_Activator_Create = _IFSelect.Handle_IFSelect_Activator_Create
Handle_IFSelect_Activator_DownCast = _IFSelect.Handle_IFSelect_Activator_DownCast
Handle_IFSelect_Activator_IsNull = _IFSelect.Handle_IFSelect_Activator_IsNull
Handle_IFSelect_AppliedModifiers_Create = _IFSelect.Handle_IFSelect_AppliedModifiers_Create
Handle_IFSelect_AppliedModifiers_DownCast = _IFSelect.Handle_IFSelect_AppliedModifiers_DownCast
Handle_IFSelect_AppliedModifiers_IsNull = _IFSelect.Handle_IFSelect_AppliedModifiers_IsNull
Handle_IFSelect_Dispatch_Create = _IFSelect.Handle_IFSelect_Dispatch_Create
Handle_IFSelect_Dispatch_DownCast = _IFSelect.Handle_IFSelect_Dispatch_DownCast
Handle_IFSelect_Dispatch_IsNull = _IFSelect.Handle_IFSelect_Dispatch_IsNull
Handle_IFSelect_EditForm_Create = _IFSelect.Handle_IFSelect_EditForm_Create
Handle_IFSelect_EditForm_DownCast = _IFSelect.Handle_IFSelect_EditForm_DownCast
Handle_IFSelect_EditForm_IsNull = _IFSelect.Handle_IFSelect_EditForm_IsNull
Handle_IFSelect_Editor_Create = _IFSelect.Handle_IFSelect_Editor_Create
Handle_IFSelect_Editor_DownCast = _IFSelect.Handle_IFSelect_Editor_DownCast
Handle_IFSelect_Editor_IsNull = _IFSelect.Handle_IFSelect_Editor_IsNull
Handle_IFSelect_GeneralModifier_Create = _IFSelect.Handle_IFSelect_GeneralModifier_Create
Handle_IFSelect_GeneralModifier_DownCast = _IFSelect.Handle_IFSelect_GeneralModifier_DownCast
Handle_IFSelect_GeneralModifier_IsNull = _IFSelect.Handle_IFSelect_GeneralModifier_IsNull
Handle_IFSelect_IntParam_Create = _IFSelect.Handle_IFSelect_IntParam_Create
Handle_IFSelect_IntParam_DownCast = _IFSelect.Handle_IFSelect_IntParam_DownCast
Handle_IFSelect_IntParam_IsNull = _IFSelect.Handle_IFSelect_IntParam_IsNull
Handle_IFSelect_ListEditor_Create = _IFSelect.Handle_IFSelect_ListEditor_Create
Handle_IFSelect_ListEditor_DownCast = _IFSelect.Handle_IFSelect_ListEditor_DownCast
Handle_IFSelect_ListEditor_IsNull = _IFSelect.Handle_IFSelect_ListEditor_IsNull
Handle_IFSelect_ModelCopier_Create = _IFSelect.Handle_IFSelect_ModelCopier_Create
Handle_IFSelect_ModelCopier_DownCast = _IFSelect.Handle_IFSelect_ModelCopier_DownCast
Handle_IFSelect_ModelCopier_IsNull = _IFSelect.Handle_IFSelect_ModelCopier_IsNull
Handle_IFSelect_PacketList_Create = _IFSelect.Handle_IFSelect_PacketList_Create
Handle_IFSelect_PacketList_DownCast = _IFSelect.Handle_IFSelect_PacketList_DownCast
Handle_IFSelect_PacketList_IsNull = _IFSelect.Handle_IFSelect_PacketList_IsNull
Handle_IFSelect_Selection_Create = _IFSelect.Handle_IFSelect_Selection_Create
Handle_IFSelect_Selection_DownCast = _IFSelect.Handle_IFSelect_Selection_DownCast
Handle_IFSelect_Selection_IsNull = _IFSelect.Handle_IFSelect_Selection_IsNull
Handle_IFSelect_SessionDumper_Create = _IFSelect.Handle_IFSelect_SessionDumper_Create
Handle_IFSelect_SessionDumper_DownCast = _IFSelect.Handle_IFSelect_SessionDumper_DownCast
Handle_IFSelect_SessionDumper_IsNull = _IFSelect.Handle_IFSelect_SessionDumper_IsNull
Handle_IFSelect_ShareOut_Create = _IFSelect.Handle_IFSelect_ShareOut_Create
Handle_IFSelect_ShareOut_DownCast = _IFSelect.Handle_IFSelect_ShareOut_DownCast
Handle_IFSelect_ShareOut_IsNull = _IFSelect.Handle_IFSelect_ShareOut_IsNull
Handle_IFSelect_Signature_Create = _IFSelect.Handle_IFSelect_Signature_Create
Handle_IFSelect_Signature_DownCast = _IFSelect.Handle_IFSelect_Signature_DownCast
Handle_IFSelect_Signature_IsNull = _IFSelect.Handle_IFSelect_Signature_IsNull
Handle_IFSelect_SignatureList_Create = _IFSelect.Handle_IFSelect_SignatureList_Create
Handle_IFSelect_SignatureList_DownCast = _IFSelect.Handle_IFSelect_SignatureList_DownCast
Handle_IFSelect_SignatureList_IsNull = _IFSelect.Handle_IFSelect_SignatureList_IsNull
Handle_IFSelect_Transformer_Create = _IFSelect.Handle_IFSelect_Transformer_Create
Handle_IFSelect_Transformer_DownCast = _IFSelect.Handle_IFSelect_Transformer_DownCast
Handle_IFSelect_Transformer_IsNull = _IFSelect.Handle_IFSelect_Transformer_IsNull
Handle_IFSelect_WorkLibrary_Create = _IFSelect.Handle_IFSelect_WorkLibrary_Create
Handle_IFSelect_WorkLibrary_DownCast = _IFSelect.Handle_IFSelect_WorkLibrary_DownCast
Handle_IFSelect_WorkLibrary_IsNull = _IFSelect.Handle_IFSelect_WorkLibrary_IsNull
Handle_IFSelect_WorkSession_Create = _IFSelect.Handle_IFSelect_WorkSession_Create
Handle_IFSelect_WorkSession_DownCast = _IFSelect.Handle_IFSelect_WorkSession_DownCast
Handle_IFSelect_WorkSession_IsNull = _IFSelect.Handle_IFSelect_WorkSession_IsNull
Handle_IFSelect_Act_Create = _IFSelect.Handle_IFSelect_Act_Create
Handle_IFSelect_Act_DownCast = _IFSelect.Handle_IFSelect_Act_DownCast
Handle_IFSelect_Act_IsNull = _IFSelect.Handle_IFSelect_Act_IsNull
Handle_IFSelect_BasicDumper_Create = _IFSelect.Handle_IFSelect_BasicDumper_Create
Handle_IFSelect_BasicDumper_DownCast = _IFSelect.Handle_IFSelect_BasicDumper_DownCast
Handle_IFSelect_BasicDumper_IsNull = _IFSelect.Handle_IFSelect_BasicDumper_IsNull
Handle_IFSelect_CheckCounter_Create = _IFSelect.Handle_IFSelect_CheckCounter_Create
Handle_IFSelect_CheckCounter_DownCast = _IFSelect.Handle_IFSelect_CheckCounter_DownCast
Handle_IFSelect_CheckCounter_IsNull = _IFSelect.Handle_IFSelect_CheckCounter_IsNull
Handle_IFSelect_DispGlobal_Create = _IFSelect.Handle_IFSelect_DispGlobal_Create
Handle_IFSelect_DispGlobal_DownCast = _IFSelect.Handle_IFSelect_DispGlobal_DownCast
Handle_IFSelect_DispGlobal_IsNull = _IFSelect.Handle_IFSelect_DispGlobal_IsNull
Handle_IFSelect_DispPerCount_Create = _IFSelect.Handle_IFSelect_DispPerCount_Create
Handle_IFSelect_DispPerCount_DownCast = _IFSelect.Handle_IFSelect_DispPerCount_DownCast
Handle_IFSelect_DispPerCount_IsNull = _IFSelect.Handle_IFSelect_DispPerCount_IsNull
Handle_IFSelect_DispPerFiles_Create = _IFSelect.Handle_IFSelect_DispPerFiles_Create
Handle_IFSelect_DispPerFiles_DownCast = _IFSelect.Handle_IFSelect_DispPerFiles_DownCast
Handle_IFSelect_DispPerFiles_IsNull = _IFSelect.Handle_IFSelect_DispPerFiles_IsNull
Handle_IFSelect_DispPerOne_Create = _IFSelect.Handle_IFSelect_DispPerOne_Create
Handle_IFSelect_DispPerOne_DownCast = _IFSelect.Handle_IFSelect_DispPerOne_DownCast
Handle_IFSelect_DispPerOne_IsNull = _IFSelect.Handle_IFSelect_DispPerOne_IsNull
Handle_IFSelect_DispPerSignature_Create = _IFSelect.Handle_IFSelect_DispPerSignature_Create
Handle_IFSelect_DispPerSignature_DownCast = _IFSelect.Handle_IFSelect_DispPerSignature_DownCast
Handle_IFSelect_DispPerSignature_IsNull = _IFSelect.Handle_IFSelect_DispPerSignature_IsNull
Handle_IFSelect_Modifier_Create = _IFSelect.Handle_IFSelect_Modifier_Create
Handle_IFSelect_Modifier_DownCast = _IFSelect.Handle_IFSelect_Modifier_DownCast
Handle_IFSelect_Modifier_IsNull = _IFSelect.Handle_IFSelect_Modifier_IsNull
Handle_IFSelect_ParamEditor_Create = _IFSelect.Handle_IFSelect_ParamEditor_Create
Handle_IFSelect_ParamEditor_DownCast = _IFSelect.Handle_IFSelect_ParamEditor_DownCast
Handle_IFSelect_ParamEditor_IsNull = _IFSelect.Handle_IFSelect_ParamEditor_IsNull
Handle_IFSelect_SelectBase_Create = _IFSelect.Handle_IFSelect_SelectBase_Create
Handle_IFSelect_SelectBase_DownCast = _IFSelect.Handle_IFSelect_SelectBase_DownCast
Handle_IFSelect_SelectBase_IsNull = _IFSelect.Handle_IFSelect_SelectBase_IsNull
Handle_IFSelect_SelectCombine_Create = _IFSelect.Handle_IFSelect_SelectCombine_Create
Handle_IFSelect_SelectCombine_DownCast = _IFSelect.Handle_IFSelect_SelectCombine_DownCast
Handle_IFSelect_SelectCombine_IsNull = _IFSelect.Handle_IFSelect_SelectCombine_IsNull
Handle_IFSelect_SelectControl_Create = _IFSelect.Handle_IFSelect_SelectControl_Create
Handle_IFSelect_SelectControl_DownCast = _IFSelect.Handle_IFSelect_SelectControl_DownCast
Handle_IFSelect_SelectControl_IsNull = _IFSelect.Handle_IFSelect_SelectControl_IsNull
Handle_IFSelect_SelectDeduct_Create = _IFSelect.Handle_IFSelect_SelectDeduct_Create
Handle_IFSelect_SelectDeduct_DownCast = _IFSelect.Handle_IFSelect_SelectDeduct_DownCast
Handle_IFSelect_SelectDeduct_IsNull = _IFSelect.Handle_IFSelect_SelectDeduct_IsNull
Handle_IFSelect_SessionPilot_Create = _IFSelect.Handle_IFSelect_SessionPilot_Create
Handle_IFSelect_SessionPilot_DownCast = _IFSelect.Handle_IFSelect_SessionPilot_DownCast
Handle_IFSelect_SessionPilot_IsNull = _IFSelect.Handle_IFSelect_SessionPilot_IsNull
Handle_IFSelect_SignCategory_Create = _IFSelect.Handle_IFSelect_SignCategory_Create
Handle_IFSelect_SignCategory_DownCast = _IFSelect.Handle_IFSelect_SignCategory_DownCast
Handle_IFSelect_SignCategory_IsNull = _IFSelect.Handle_IFSelect_SignCategory_IsNull
Handle_IFSelect_SignCounter_Create = _IFSelect.Handle_IFSelect_SignCounter_Create
Handle_IFSelect_SignCounter_DownCast = _IFSelect.Handle_IFSelect_SignCounter_DownCast
Handle_IFSelect_SignCounter_IsNull = _IFSelect.Handle_IFSelect_SignCounter_IsNull
Handle_IFSelect_SignMultiple_Create = _IFSelect.Handle_IFSelect_SignMultiple_Create
Handle_IFSelect_SignMultiple_DownCast = _IFSelect.Handle_IFSelect_SignMultiple_DownCast
Handle_IFSelect_SignMultiple_IsNull = _IFSelect.Handle_IFSelect_SignMultiple_IsNull
Handle_IFSelect_SignType_Create = _IFSelect.Handle_IFSelect_SignType_Create
Handle_IFSelect_SignType_DownCast = _IFSelect.Handle_IFSelect_SignType_DownCast
Handle_IFSelect_SignType_IsNull = _IFSelect.Handle_IFSelect_SignType_IsNull
Handle_IFSelect_SignValidity_Create = _IFSelect.Handle_IFSelect_SignValidity_Create
Handle_IFSelect_SignValidity_DownCast = _IFSelect.Handle_IFSelect_SignValidity_DownCast
Handle_IFSelect_SignValidity_IsNull = _IFSelect.Handle_IFSelect_SignValidity_IsNull
Handle_IFSelect_TransformStandard_Create = _IFSelect.Handle_IFSelect_TransformStandard_Create
Handle_IFSelect_TransformStandard_DownCast = _IFSelect.Handle_IFSelect_TransformStandard_DownCast
Handle_IFSelect_TransformStandard_IsNull = _IFSelect.Handle_IFSelect_TransformStandard_IsNull
Handle_IFSelect_GraphCounter_Create = _IFSelect.Handle_IFSelect_GraphCounter_Create
Handle_IFSelect_GraphCounter_DownCast = _IFSelect.Handle_IFSelect_GraphCounter_DownCast
Handle_IFSelect_GraphCounter_IsNull = _IFSelect.Handle_IFSelect_GraphCounter_IsNull
Handle_IFSelect_ModifEditForm_Create = _IFSelect.Handle_IFSelect_ModifEditForm_Create
Handle_IFSelect_ModifEditForm_DownCast = _IFSelect.Handle_IFSelect_ModifEditForm_DownCast
Handle_IFSelect_ModifEditForm_IsNull = _IFSelect.Handle_IFSelect_ModifEditForm_IsNull
Handle_IFSelect_ModifReorder_Create = _IFSelect.Handle_IFSelect_ModifReorder_Create
Handle_IFSelect_ModifReorder_DownCast = _IFSelect.Handle_IFSelect_ModifReorder_DownCast
Handle_IFSelect_ModifReorder_IsNull = _IFSelect.Handle_IFSelect_ModifReorder_IsNull
Handle_IFSelect_SelectAnyList_Create = _IFSelect.Handle_IFSelect_SelectAnyList_Create
Handle_IFSelect_SelectAnyList_DownCast = _IFSelect.Handle_IFSelect_SelectAnyList_DownCast
Handle_IFSelect_SelectAnyList_IsNull = _IFSelect.Handle_IFSelect_SelectAnyList_IsNull
Handle_IFSelect_SelectDiff_Create = _IFSelect.Handle_IFSelect_SelectDiff_Create
Handle_IFSelect_SelectDiff_DownCast = _IFSelect.Handle_IFSelect_SelectDiff_DownCast
Handle_IFSelect_SelectDiff_IsNull = _IFSelect.Handle_IFSelect_SelectDiff_IsNull
Handle_IFSelect_SelectEntityNumber_Create = _IFSelect.Handle_IFSelect_SelectEntityNumber_Create
Handle_IFSelect_SelectEntityNumber_DownCast = _IFSelect.Handle_IFSelect_SelectEntityNumber_DownCast
Handle_IFSelect_SelectEntityNumber_IsNull = _IFSelect.Handle_IFSelect_SelectEntityNumber_IsNull
Handle_IFSelect_SelectExplore_Create = _IFSelect.Handle_IFSelect_SelectExplore_Create
Handle_IFSelect_SelectExplore_DownCast = _IFSelect.Handle_IFSelect_SelectExplore_DownCast
Handle_IFSelect_SelectExplore_IsNull = _IFSelect.Handle_IFSelect_SelectExplore_IsNull
Handle_IFSelect_SelectExtract_Create = _IFSelect.Handle_IFSelect_SelectExtract_Create
Handle_IFSelect_SelectExtract_DownCast = _IFSelect.Handle_IFSelect_SelectExtract_DownCast
Handle_IFSelect_SelectExtract_IsNull = _IFSelect.Handle_IFSelect_SelectExtract_IsNull
Handle_IFSelect_SelectIntersection_Create = _IFSelect.Handle_IFSelect_SelectIntersection_Create
Handle_IFSelect_SelectIntersection_DownCast = _IFSelect.Handle_IFSelect_SelectIntersection_DownCast
Handle_IFSelect_SelectIntersection_IsNull = _IFSelect.Handle_IFSelect_SelectIntersection_IsNull
Handle_IFSelect_SelectModelEntities_Create = _IFSelect.Handle_IFSelect_SelectModelEntities_Create
Handle_IFSelect_SelectModelEntities_DownCast = _IFSelect.Handle_IFSelect_SelectModelEntities_DownCast
Handle_IFSelect_SelectModelEntities_IsNull = _IFSelect.Handle_IFSelect_SelectModelEntities_IsNull
Handle_IFSelect_SelectModelRoots_Create = _IFSelect.Handle_IFSelect_SelectModelRoots_Create
Handle_IFSelect_SelectModelRoots_DownCast = _IFSelect.Handle_IFSelect_SelectModelRoots_DownCast
Handle_IFSelect_SelectModelRoots_IsNull = _IFSelect.Handle_IFSelect_SelectModelRoots_IsNull
Handle_IFSelect_SelectPointed_Create = _IFSelect.Handle_IFSelect_SelectPointed_Create
Handle_IFSelect_SelectPointed_DownCast = _IFSelect.Handle_IFSelect_SelectPointed_DownCast
Handle_IFSelect_SelectPointed_IsNull = _IFSelect.Handle_IFSelect_SelectPointed_IsNull
Handle_IFSelect_SelectShared_Create = _IFSelect.Handle_IFSelect_SelectShared_Create
Handle_IFSelect_SelectShared_DownCast = _IFSelect.Handle_IFSelect_SelectShared_DownCast
Handle_IFSelect_SelectShared_IsNull = _IFSelect.Handle_IFSelect_SelectShared_IsNull
Handle_IFSelect_SelectSharing_Create = _IFSelect.Handle_IFSelect_SelectSharing_Create
Handle_IFSelect_SelectSharing_DownCast = _IFSelect.Handle_IFSelect_SelectSharing_DownCast
Handle_IFSelect_SelectSharing_IsNull = _IFSelect.Handle_IFSelect_SelectSharing_IsNull
Handle_IFSelect_SelectSuite_Create = _IFSelect.Handle_IFSelect_SelectSuite_Create
Handle_IFSelect_SelectSuite_DownCast = _IFSelect.Handle_IFSelect_SelectSuite_DownCast
Handle_IFSelect_SelectSuite_IsNull = _IFSelect.Handle_IFSelect_SelectSuite_IsNull
Handle_IFSelect_SelectUnion_Create = _IFSelect.Handle_IFSelect_SelectUnion_Create
Handle_IFSelect_SelectUnion_DownCast = _IFSelect.Handle_IFSelect_SelectUnion_DownCast
Handle_IFSelect_SelectUnion_IsNull = _IFSelect.Handle_IFSelect_SelectUnion_IsNull
Handle_IFSelect_SignAncestor_Create = _IFSelect.Handle_IFSelect_SignAncestor_Create
Handle_IFSelect_SignAncestor_DownCast = _IFSelect.Handle_IFSelect_SignAncestor_DownCast
Handle_IFSelect_SignAncestor_IsNull = _IFSelect.Handle_IFSelect_SignAncestor_IsNull
Handle_IFSelect_SelectAnyType_Create = _IFSelect.Handle_IFSelect_SelectAnyType_Create
Handle_IFSelect_SelectAnyType_DownCast = _IFSelect.Handle_IFSelect_SelectAnyType_DownCast
Handle_IFSelect_SelectAnyType_IsNull = _IFSelect.Handle_IFSelect_SelectAnyType_IsNull
Handle_IFSelect_SelectErrorEntities_Create = _IFSelect.Handle_IFSelect_SelectErrorEntities_Create
Handle_IFSelect_SelectErrorEntities_DownCast = _IFSelect.Handle_IFSelect_SelectErrorEntities_DownCast
Handle_IFSelect_SelectErrorEntities_IsNull = _IFSelect.Handle_IFSelect_SelectErrorEntities_IsNull
Handle_IFSelect_SelectFlag_Create = _IFSelect.Handle_IFSelect_SelectFlag_Create
Handle_IFSelect_SelectFlag_DownCast = _IFSelect.Handle_IFSelect_SelectFlag_DownCast
Handle_IFSelect_SelectFlag_IsNull = _IFSelect.Handle_IFSelect_SelectFlag_IsNull
Handle_IFSelect_SelectInList_Create = _IFSelect.Handle_IFSelect_SelectInList_Create
Handle_IFSelect_SelectInList_DownCast = _IFSelect.Handle_IFSelect_SelectInList_DownCast
Handle_IFSelect_SelectInList_IsNull = _IFSelect.Handle_IFSelect_SelectInList_IsNull
Handle_IFSelect_SelectRange_Create = _IFSelect.Handle_IFSelect_SelectRange_Create
Handle_IFSelect_SelectRange_DownCast = _IFSelect.Handle_IFSelect_SelectRange_DownCast
Handle_IFSelect_SelectRange_IsNull = _IFSelect.Handle_IFSelect_SelectRange_IsNull
Handle_IFSelect_SelectRootComps_Create = _IFSelect.Handle_IFSelect_SelectRootComps_Create
Handle_IFSelect_SelectRootComps_DownCast = _IFSelect.Handle_IFSelect_SelectRootComps_DownCast
Handle_IFSelect_SelectRootComps_IsNull = _IFSelect.Handle_IFSelect_SelectRootComps_IsNull
Handle_IFSelect_SelectRoots_Create = _IFSelect.Handle_IFSelect_SelectRoots_Create
Handle_IFSelect_SelectRoots_DownCast = _IFSelect.Handle_IFSelect_SelectRoots_DownCast
Handle_IFSelect_SelectRoots_IsNull = _IFSelect.Handle_IFSelect_SelectRoots_IsNull
Handle_IFSelect_SelectSent_Create = _IFSelect.Handle_IFSelect_SelectSent_Create
Handle_IFSelect_SelectSent_DownCast = _IFSelect.Handle_IFSelect_SelectSent_DownCast
Handle_IFSelect_SelectSent_IsNull = _IFSelect.Handle_IFSelect_SelectSent_IsNull
Handle_IFSelect_SelectSignature_Create = _IFSelect.Handle_IFSelect_SelectSignature_Create
Handle_IFSelect_SelectSignature_DownCast = _IFSelect.Handle_IFSelect_SelectSignature_DownCast
Handle_IFSelect_SelectSignature_IsNull = _IFSelect.Handle_IFSelect_SelectSignature_IsNull
Handle_IFSelect_SelectSignedShared_Create = _IFSelect.Handle_IFSelect_SelectSignedShared_Create
Handle_IFSelect_SelectSignedShared_DownCast = _IFSelect.Handle_IFSelect_SelectSignedShared_DownCast
Handle_IFSelect_SelectSignedShared_IsNull = _IFSelect.Handle_IFSelect_SelectSignedShared_IsNull
Handle_IFSelect_SelectSignedSharing_Create = _IFSelect.Handle_IFSelect_SelectSignedSharing_Create
Handle_IFSelect_SelectSignedSharing_DownCast = _IFSelect.Handle_IFSelect_SelectSignedSharing_DownCast
Handle_IFSelect_SelectSignedSharing_IsNull = _IFSelect.Handle_IFSelect_SelectSignedSharing_IsNull
Handle_IFSelect_SelectUnknownEntities_Create = _IFSelect.Handle_IFSelect_SelectUnknownEntities_Create
Handle_IFSelect_SelectUnknownEntities_DownCast = _IFSelect.Handle_IFSelect_SelectUnknownEntities_DownCast
Handle_IFSelect_SelectUnknownEntities_IsNull = _IFSelect.Handle_IFSelect_SelectUnknownEntities_IsNull
Handle_IFSelect_SelectIncorrectEntities_Create = _IFSelect.Handle_IFSelect_SelectIncorrectEntities_Create
Handle_IFSelect_SelectIncorrectEntities_DownCast = _IFSelect.Handle_IFSelect_SelectIncorrectEntities_DownCast
Handle_IFSelect_SelectIncorrectEntities_IsNull = _IFSelect.Handle_IFSelect_SelectIncorrectEntities_IsNull
Handle_IFSelect_SelectType_Create = _IFSelect.Handle_IFSelect_SelectType_Create
Handle_IFSelect_SelectType_DownCast = _IFSelect.Handle_IFSelect_SelectType_DownCast
Handle_IFSelect_SelectType_IsNull = _IFSelect.Handle_IFSelect_SelectType_IsNull
Handle_IFSelect_HSeqOfSelection_Create = _IFSelect.Handle_IFSelect_HSeqOfSelection_Create
Handle_IFSelect_HSeqOfSelection_DownCast = _IFSelect.Handle_IFSelect_HSeqOfSelection_DownCast
Handle_IFSelect_HSeqOfSelection_IsNull = _IFSelect.Handle_IFSelect_HSeqOfSelection_IsNull
class IFSelect_TSeqOfSelection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_begin)
    end = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_end)
    cbegin = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_cbegin)
    cend = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_cend)

    def __init__(self, *args):
        _IFSelect.IFSelect_TSeqOfSelection_swiginit(self, _IFSelect.new_IFSelect_TSeqOfSelection(*args))
    Size = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Size)
    Length = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Length)
    Lower = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Lower)
    Upper = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Upper)
    IsEmpty = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_IsEmpty)
    Reverse = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Reverse)
    Exchange = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Exchange)
    delNode = _swig_new_static_method(_IFSelect.IFSelect_TSeqOfSelection_delNode)
    Clear = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Clear)
    Assign = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Assign)
    Set = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Set)
    Remove = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Remove)
    Append = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Append)
    Prepend = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Prepend)
    InsertBefore = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_InsertBefore)
    InsertAfter = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_InsertAfter)
    Split = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Split)
    First = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_First)
    ChangeFirst = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_ChangeFirst)
    Last = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Last)
    ChangeLast = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_ChangeLast)
    Value = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_Value)
    ChangeValue = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_ChangeValue)
    __call__ = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection___call__)
    SetValue = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfSelection_SetValue)
    __swig_destroy__ = _IFSelect.delete_IFSelect_TSeqOfSelection

# Register IFSelect_TSeqOfSelection in _IFSelect:
_IFSelect.IFSelect_TSeqOfSelection_swigregister(IFSelect_TSeqOfSelection)
IFSelect_TSeqOfSelection_delNode = _IFSelect.IFSelect_TSeqOfSelection_delNode

class IFSelect_SequenceOfGeneralModifier(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_begin)
    end = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_end)
    cbegin = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_cbegin)
    cend = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_cend)

    def __init__(self, *args):
        _IFSelect.IFSelect_SequenceOfGeneralModifier_swiginit(self, _IFSelect.new_IFSelect_SequenceOfGeneralModifier(*args))
    Size = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Size)
    Length = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Length)
    Lower = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Lower)
    Upper = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Upper)
    IsEmpty = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_IsEmpty)
    Reverse = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Reverse)
    Exchange = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Exchange)
    delNode = _swig_new_static_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_delNode)
    Clear = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Clear)
    Assign = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Assign)
    Set = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Set)
    Remove = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Remove)
    Append = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Append)
    Prepend = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Prepend)
    InsertBefore = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_InsertBefore)
    InsertAfter = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_InsertAfter)
    Split = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Split)
    First = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_First)
    ChangeFirst = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_ChangeFirst)
    Last = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Last)
    ChangeLast = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_ChangeLast)
    Value = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_Value)
    ChangeValue = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_ChangeValue)
    __call__ = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier___call__)
    SetValue = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfGeneralModifier_SetValue)
    __swig_destroy__ = _IFSelect.delete_IFSelect_SequenceOfGeneralModifier

# Register IFSelect_SequenceOfGeneralModifier in _IFSelect:
_IFSelect.IFSelect_SequenceOfGeneralModifier_swigregister(IFSelect_SequenceOfGeneralModifier)
IFSelect_SequenceOfGeneralModifier_delNode = _IFSelect.IFSelect_SequenceOfGeneralModifier_delNode

class IFSelect_TSeqOfDispatch(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_begin)
    end = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_end)
    cbegin = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_cbegin)
    cend = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_cend)

    def __init__(self, *args):
        _IFSelect.IFSelect_TSeqOfDispatch_swiginit(self, _IFSelect.new_IFSelect_TSeqOfDispatch(*args))
    Size = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Size)
    Length = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Length)
    Lower = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Lower)
    Upper = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Upper)
    IsEmpty = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_IsEmpty)
    Reverse = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Reverse)
    Exchange = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Exchange)
    delNode = _swig_new_static_method(_IFSelect.IFSelect_TSeqOfDispatch_delNode)
    Clear = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Clear)
    Assign = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Assign)
    Set = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Set)
    Remove = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Remove)
    Append = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Append)
    Prepend = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Prepend)
    InsertBefore = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_InsertBefore)
    InsertAfter = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_InsertAfter)
    Split = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Split)
    First = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_First)
    ChangeFirst = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_ChangeFirst)
    Last = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Last)
    ChangeLast = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_ChangeLast)
    Value = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_Value)
    ChangeValue = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_ChangeValue)
    __call__ = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch___call__)
    SetValue = _swig_new_instance_method(_IFSelect.IFSelect_TSeqOfDispatch_SetValue)
    __swig_destroy__ = _IFSelect.delete_IFSelect_TSeqOfDispatch

# Register IFSelect_TSeqOfDispatch in _IFSelect:
_IFSelect.IFSelect_TSeqOfDispatch_swigregister(IFSelect_TSeqOfDispatch)
IFSelect_TSeqOfDispatch_delNode = _IFSelect.IFSelect_TSeqOfDispatch_delNode

class IFSelect_SequenceOfAppliedModifiers(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_begin)
    end = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_end)
    cbegin = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_cbegin)
    cend = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_cend)

    def __init__(self, *args):
        _IFSelect.IFSelect_SequenceOfAppliedModifiers_swiginit(self, _IFSelect.new_IFSelect_SequenceOfAppliedModifiers(*args))
    Size = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Size)
    Length = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Length)
    Lower = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Lower)
    Upper = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Upper)
    IsEmpty = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_IsEmpty)
    Reverse = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Reverse)
    Exchange = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Exchange)
    delNode = _swig_new_static_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_delNode)
    Clear = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Clear)
    Assign = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Assign)
    Set = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Set)
    Remove = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Remove)
    Append = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Append)
    Prepend = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Prepend)
    InsertBefore = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_InsertBefore)
    InsertAfter = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_InsertAfter)
    Split = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Split)
    First = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_First)
    ChangeFirst = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_ChangeFirst)
    Last = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Last)
    ChangeLast = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_ChangeLast)
    Value = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_Value)
    ChangeValue = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_ChangeValue)
    __call__ = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers___call__)
    SetValue = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfAppliedModifiers_SetValue)
    __swig_destroy__ = _IFSelect.delete_IFSelect_SequenceOfAppliedModifiers

# Register IFSelect_SequenceOfAppliedModifiers in _IFSelect:
_IFSelect.IFSelect_SequenceOfAppliedModifiers_swigregister(IFSelect_SequenceOfAppliedModifiers)
IFSelect_SequenceOfAppliedModifiers_delNode = _IFSelect.IFSelect_SequenceOfAppliedModifiers_delNode

class IFSelect_SequenceOfInterfaceModel(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_begin)
    end = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_end)
    cbegin = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_cbegin)
    cend = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_cend)

    def __init__(self, *args):
        _IFSelect.IFSelect_SequenceOfInterfaceModel_swiginit(self, _IFSelect.new_IFSelect_SequenceOfInterfaceModel(*args))
    Size = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Size)
    Length = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Length)
    Lower = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Lower)
    Upper = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Upper)
    IsEmpty = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_IsEmpty)
    Reverse = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Reverse)
    Exchange = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Exchange)
    delNode = _swig_new_static_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_delNode)
    Clear = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Clear)
    Assign = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Assign)
    Set = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Set)
    Remove = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Remove)
    Append = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Append)
    Prepend = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Prepend)
    InsertBefore = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_InsertBefore)
    InsertAfter = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_InsertAfter)
    Split = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Split)
    First = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_First)
    ChangeFirst = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_ChangeFirst)
    Last = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Last)
    ChangeLast = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_ChangeLast)
    Value = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_Value)
    ChangeValue = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_ChangeValue)
    __call__ = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel___call__)
    SetValue = _swig_new_instance_method(_IFSelect.IFSelect_SequenceOfInterfaceModel_SetValue)
    __swig_destroy__ = _IFSelect.delete_IFSelect_SequenceOfInterfaceModel

# Register IFSelect_SequenceOfInterfaceModel in _IFSelect:
_IFSelect.IFSelect_SequenceOfInterfaceModel_swigregister(IFSelect_SequenceOfInterfaceModel)
IFSelect_SequenceOfInterfaceModel_delNode = _IFSelect.IFSelect_SequenceOfInterfaceModel_delNode

class ifselect(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RestoreSession = _swig_new_static_method(_IFSelect.ifselect_RestoreSession)
    SaveSession = _swig_new_static_method(_IFSelect.ifselect_SaveSession)

    __repr__ = _dumps_object


    def __init__(self):
        _IFSelect.ifselect_swiginit(self, _IFSelect.new_ifselect())
    __swig_destroy__ = _IFSelect.delete_ifselect

# Register ifselect in _IFSelect:
_IFSelect.ifselect_swigregister(ifselect)
ifselect_RestoreSession = _IFSelect.ifselect_RestoreSession
ifselect_SaveSession = _IFSelect.ifselect_SaveSession

class IFSelect_Activator(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Add = _swig_new_instance_method(_IFSelect.IFSelect_Activator_Add)
    AddSet = _swig_new_instance_method(_IFSelect.IFSelect_Activator_AddSet)
    Adding = _swig_new_static_method(_IFSelect.IFSelect_Activator_Adding)
    Commands = _swig_new_static_method(_IFSelect.IFSelect_Activator_Commands)
    Do = _swig_new_instance_method(_IFSelect.IFSelect_Activator_Do)
    File = _swig_new_instance_method(_IFSelect.IFSelect_Activator_File)
    Group = _swig_new_instance_method(_IFSelect.IFSelect_Activator_Group)
    Help = _swig_new_instance_method(_IFSelect.IFSelect_Activator_Help)
    Mode = _swig_new_static_method(_IFSelect.IFSelect_Activator_Mode)
    Remove = _swig_new_static_method(_IFSelect.IFSelect_Activator_Remove)
    Select = _swig_new_static_method(_IFSelect.IFSelect_Activator_Select)
    SetForGroup = _swig_new_instance_method(_IFSelect.IFSelect_Activator_SetForGroup)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_Activator_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_Activator

# Register IFSelect_Activator in _IFSelect:
_IFSelect.IFSelect_Activator_swigregister(IFSelect_Activator)
IFSelect_Activator_Adding = _IFSelect.IFSelect_Activator_Adding
IFSelect_Activator_Commands = _IFSelect.IFSelect_Activator_Commands
IFSelect_Activator_Mode = _IFSelect.IFSelect_Activator_Mode
IFSelect_Activator_Remove = _IFSelect.IFSelect_Activator_Remove
IFSelect_Activator_Select = _IFSelect.IFSelect_Activator_Select

class IFSelect_AppliedModifiers(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddModif = _swig_new_instance_method(_IFSelect.IFSelect_AppliedModifiers_AddModif)
    AddNum = _swig_new_instance_method(_IFSelect.IFSelect_AppliedModifiers_AddNum)
    Count = _swig_new_instance_method(_IFSelect.IFSelect_AppliedModifiers_Count)

    def __init__(self, *args):
        r"""
        * Creates an AppliedModifiers, ready to record up to <nbmax> modifiers, on a model of <nbent> entities
        	:param nbmax:
        	:type nbmax: int
        	:param nbent:
        	:type nbent: int
        	:rtype: None
        """
        _IFSelect.IFSelect_AppliedModifiers_swiginit(self, _IFSelect.new_IFSelect_AppliedModifiers(*args))
    IsForAll = _swig_new_instance_method(_IFSelect.IFSelect_AppliedModifiers_IsForAll)
    Item = _swig_new_instance_method(_IFSelect.IFSelect_AppliedModifiers_Item)
    ItemList = _swig_new_instance_method(_IFSelect.IFSelect_AppliedModifiers_ItemList)
    ItemNum = _swig_new_instance_method(_IFSelect.IFSelect_AppliedModifiers_ItemNum)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_AppliedModifiers_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_AppliedModifiers

# Register IFSelect_AppliedModifiers in _IFSelect:
_IFSelect.IFSelect_AppliedModifiers_swigregister(IFSelect_AppliedModifiers)

class IFSelect_ContextModif(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddCheck = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_AddCheck)
    AddFail = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_AddFail)
    AddWarning = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_AddWarning)
    CCheck = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_CCheck)
    CheckList = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_CheckList)
    Control = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_Control)
    FileName = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_FileName)
    HasFileName = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_HasFileName)

    def __init__(self, *args):
        r"""
        * Prepares a ContextModif with these informations : - the graph established from original model (target passed directly to Modifier) - the CopyTool which detains the CopyControl, which maps starting (in original) and result (in target) entities - an optional file name (for file output) //! Such a ContextModif is considered to be applied on all transferred entities (no filter active)
        	:param graph:
        	:type graph: Interface_Graph
        	:param TC:
        	:type TC: Interface_CopyTool
        	:param filename: default value is 
        	:type filename: char *
        	:rtype: None* Prepares a ContextModif with these informations : - the graph established from original model (target passed directly to Modifier) - an optional file name (for file output) Here, no CopyControl, hence all entities are considered equal as starting and result //! Such a ContextModif is considered to be applied on all transferred entities (no filter active)
        	:param graph:
        	:type graph: Interface_Graph
        	:param filename: default value is 
        	:type filename: char *
        	:rtype: None
        """
        _IFSelect.IFSelect_ContextModif_swiginit(self, _IFSelect.new_IFSelect_ContextModif(*args))
    IsForAll = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_IsForAll)
    IsForNone = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_IsForNone)
    IsSelected = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_IsSelected)
    IsTransferred = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_IsTransferred)
    More = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_More)
    Next = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_Next)
    OriginalGraph = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_OriginalGraph)
    OriginalModel = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_OriginalModel)
    Protocol = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_Protocol)
    Select = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_Select)
    SelectedCount = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_SelectedCount)
    SelectedOriginal = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_SelectedOriginal)
    SelectedResult = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_SelectedResult)
    SetProtocol = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_SetProtocol)
    Start = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_Start)
    Trace = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_Trace)
    TraceModifier = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_TraceModifier)
    ValueOriginal = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_ValueOriginal)
    ValueResult = _swig_new_instance_method(_IFSelect.IFSelect_ContextModif_ValueResult)

    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_ContextModif

# Register IFSelect_ContextModif in _IFSelect:
_IFSelect.IFSelect_ContextModif_swigregister(IFSelect_ContextModif)

class IFSelect_ContextWrite(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddCheck = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_AddCheck)
    AddFail = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_AddFail)
    AddWarning = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_AddWarning)
    AppliedModifiers = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_AppliedModifiers)
    CCheck = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_CCheck)
    CheckList = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_CheckList)
    FileModifier = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_FileModifier)
    FileName = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_FileName)
    Graph = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_Graph)

    def __init__(self, *args):
        r"""
        * Prepares a ContextWrite with these informations : - the model which is to be written - the protocol to be used - the filename - an object AppliedModifiers to work. It gives a list of FileModifiers to be ran, and for each one it can give a restricted list of entities (in the model), else all the model is considered
        	:param model:
        	:type model: Interface_InterfaceModel
        	:param proto:
        	:type proto: Interface_Protocol
        	:param applieds:
        	:type applieds: IFSelect_AppliedModifiers
        	:param filename:
        	:type filename: char *
        	:rtype: None* Same as above but with an already computed Graph
        	:param hgraph:
        	:type hgraph: Interface_HGraph
        	:param proto:
        	:type proto: Interface_Protocol
        	:param applieds:
        	:type applieds: IFSelect_AppliedModifiers
        	:param filename:
        	:type filename: char *
        	:rtype: None
        """
        _IFSelect.IFSelect_ContextWrite_swiginit(self, _IFSelect.new_IFSelect_ContextWrite(*args))
    IsForAll = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_IsForAll)
    IsForNone = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_IsForNone)
    Model = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_Model)
    More = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_More)
    NbEntities = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_NbEntities)
    NbModifiers = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_NbModifiers)
    Next = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_Next)
    Protocol = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_Protocol)
    SetModifier = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_SetModifier)
    Start = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_Start)
    Value = _swig_new_instance_method(_IFSelect.IFSelect_ContextWrite_Value)

    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_ContextWrite

# Register IFSelect_ContextWrite in _IFSelect:
_IFSelect.IFSelect_ContextWrite_swigregister(IFSelect_ContextWrite)

class IFSelect_Dispatch(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    CanHaveRemainder = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_CanHaveRemainder)
    FinalSelection = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_FinalSelection)
    GetEntities = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_GetEntities)
    HasRootName = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_HasRootName)
    Label = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_Label)
    LimitedMax = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_LimitedMax)
    Packeted = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_Packeted)
    Packets = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_Packets)
    Remainder = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_Remainder)
    RootName = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_RootName)
    Selections = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_Selections)
    SetFinalSelection = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_SetFinalSelection)
    SetRootName = _swig_new_instance_method(_IFSelect.IFSelect_Dispatch_SetRootName)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_Dispatch_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_Dispatch

# Register IFSelect_Dispatch in _IFSelect:
_IFSelect.IFSelect_Dispatch_swigregister(IFSelect_Dispatch)

class IFSelect_EditForm(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Apply = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_Apply)
    ApplyData = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_ApplyData)
    ClearData = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_ClearData)
    ClearEdit = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_ClearEdit)
    GetEditKeepStatus = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_GetEditKeepStatus)
    SetEditKeepStatus = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_SetEditKeepStatus)
    EditedList = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_EditedList)
    EditedValue = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_EditedValue)
    Editor = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_Editor)
    Entity = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_Entity)

    def __init__(self, *args):
        r"""
        * Creates a complete EditForm from an Editor A specific Label can be given
        	:param editor:
        	:type editor: IFSelect_Editor
        	:param readonly:
        	:type readonly: bool
        	:param undoable:
        	:type undoable: bool
        	:param label: default value is 
        	:type label: char *
        	:rtype: None* Creates an extracted EditForm from an Editor, limited to the values identified in <nums> A specific Label can be given
        	:param editor:
        	:type editor: IFSelect_Editor
        	:param nums:
        	:type nums: TColStd_SequenceOfInteger
        	:param readonly:
        	:type readonly: bool
        	:param undoable:
        	:type undoable: bool
        	:param label: default value is 
        	:type label: char *
        	:rtype: None
        """
        _IFSelect.IFSelect_EditForm_swiginit(self, _IFSelect.new_IFSelect_EditForm(*args))
    IsComplete = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_IsComplete)
    IsLoaded = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_IsLoaded)
    IsModified = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_IsModified)
    IsTouched = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_IsTouched)
    Label = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_Label)
    ListEditor = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_ListEditor)
    LoadData = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_LoadData)
    LoadDefault = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_LoadDefault)
    LoadEntity = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_LoadEntity)
    LoadList = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_LoadList)
    LoadModel = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_LoadModel)
    LoadValue = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_LoadValue)
    Model = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_Model)
    Modify = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_Modify)
    ModifyList = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_ModifyList)
    ModifyListValue = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_ModifyListValue)
    NameNumber = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_NameNumber)
    NameRank = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_NameRank)
    NbValues = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_NbValues)
    NumberFromRank = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_NumberFromRank)
    OriginalList = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_OriginalList)
    OriginalValue = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_OriginalValue)
    PrintDefs = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_PrintDefs)
    PrintValues = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_PrintValues)
    RankFromNumber = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_RankFromNumber)
    Recognize = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_Recognize)
    SetData = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_SetData)
    SetEntity = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_SetEntity)
    SetModel = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_SetModel)
    TouchList = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_TouchList)
    Undo = _swig_new_instance_method(_IFSelect.IFSelect_EditForm_Undo)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_EditForm_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_EditForm

# Register IFSelect_EditForm in _IFSelect:
_IFSelect.IFSelect_EditForm_swigregister(IFSelect_EditForm)

class IFSelect_Editor(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Apply = _swig_new_instance_method(_IFSelect.IFSelect_Editor_Apply)
    EditMode = _swig_new_instance_method(_IFSelect.IFSelect_Editor_EditMode)
    Form = _swig_new_instance_method(_IFSelect.IFSelect_Editor_Form)
    IsList = _swig_new_instance_method(_IFSelect.IFSelect_Editor_IsList)
    Label = _swig_new_instance_method(_IFSelect.IFSelect_Editor_Label)
    ListEditor = _swig_new_instance_method(_IFSelect.IFSelect_Editor_ListEditor)
    ListValue = _swig_new_instance_method(_IFSelect.IFSelect_Editor_ListValue)
    Load = _swig_new_instance_method(_IFSelect.IFSelect_Editor_Load)
    MaxList = _swig_new_instance_method(_IFSelect.IFSelect_Editor_MaxList)
    MaxNameLength = _swig_new_instance_method(_IFSelect.IFSelect_Editor_MaxNameLength)
    Name = _swig_new_instance_method(_IFSelect.IFSelect_Editor_Name)
    NameNumber = _swig_new_instance_method(_IFSelect.IFSelect_Editor_NameNumber)
    NbValues = _swig_new_instance_method(_IFSelect.IFSelect_Editor_NbValues)
    PrintDefs = _swig_new_instance_method(_IFSelect.IFSelect_Editor_PrintDefs)
    PrintNames = _swig_new_instance_method(_IFSelect.IFSelect_Editor_PrintNames)
    Recognize = _swig_new_instance_method(_IFSelect.IFSelect_Editor_Recognize)
    SetList = _swig_new_instance_method(_IFSelect.IFSelect_Editor_SetList)
    SetValue = _swig_new_instance_method(_IFSelect.IFSelect_Editor_SetValue)
    StringValue = _swig_new_instance_method(_IFSelect.IFSelect_Editor_StringValue)
    TypedValue = _swig_new_instance_method(_IFSelect.IFSelect_Editor_TypedValue)
    Update = _swig_new_instance_method(_IFSelect.IFSelect_Editor_Update)
    UpdateList = _swig_new_instance_method(_IFSelect.IFSelect_Editor_UpdateList)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_Editor_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_Editor

# Register IFSelect_Editor in _IFSelect:
_IFSelect.IFSelect_Editor_swigregister(IFSelect_Editor)

class IFSelect_Functions(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GiveDispatch = _swig_new_static_method(_IFSelect.IFSelect_Functions_GiveDispatch)
    GiveEntity = _swig_new_static_method(_IFSelect.IFSelect_Functions_GiveEntity)
    GiveEntityNumber = _swig_new_static_method(_IFSelect.IFSelect_Functions_GiveEntityNumber)
    GiveList = _swig_new_static_method(_IFSelect.IFSelect_Functions_GiveList)
    Init = _swig_new_static_method(_IFSelect.IFSelect_Functions_Init)

    __repr__ = _dumps_object


    def __init__(self):
        _IFSelect.IFSelect_Functions_swiginit(self, _IFSelect.new_IFSelect_Functions())
    __swig_destroy__ = _IFSelect.delete_IFSelect_Functions

# Register IFSelect_Functions in _IFSelect:
_IFSelect.IFSelect_Functions_swigregister(IFSelect_Functions)
IFSelect_Functions_GiveDispatch = _IFSelect.IFSelect_Functions_GiveDispatch
IFSelect_Functions_GiveEntity = _IFSelect.IFSelect_Functions_GiveEntity
IFSelect_Functions_GiveEntityNumber = _IFSelect.IFSelect_Functions_GiveEntityNumber
IFSelect_Functions_GiveList = _IFSelect.IFSelect_Functions_GiveList
IFSelect_Functions_Init = _IFSelect.IFSelect_Functions_Init

class IFSelect_GeneralModifier(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Applies = _swig_new_instance_method(_IFSelect.IFSelect_GeneralModifier_Applies)
    Dispatch = _swig_new_instance_method(_IFSelect.IFSelect_GeneralModifier_Dispatch)
    HasSelection = _swig_new_instance_method(_IFSelect.IFSelect_GeneralModifier_HasSelection)
    Label = _swig_new_instance_method(_IFSelect.IFSelect_GeneralModifier_Label)
    MayChangeGraph = _swig_new_instance_method(_IFSelect.IFSelect_GeneralModifier_MayChangeGraph)
    ResetSelection = _swig_new_instance_method(_IFSelect.IFSelect_GeneralModifier_ResetSelection)
    Selection = _swig_new_instance_method(_IFSelect.IFSelect_GeneralModifier_Selection)
    SetDispatch = _swig_new_instance_method(_IFSelect.IFSelect_GeneralModifier_SetDispatch)
    SetSelection = _swig_new_instance_method(_IFSelect.IFSelect_GeneralModifier_SetSelection)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_GeneralModifier_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_GeneralModifier

# Register IFSelect_GeneralModifier in _IFSelect:
_IFSelect.IFSelect_GeneralModifier_swigregister(IFSelect_GeneralModifier)

class IFSelect_IntParam(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates an IntParam. Initial value is set to zer
        	:rtype: None
        """
        _IFSelect.IFSelect_IntParam_swiginit(self, _IFSelect.new_IFSelect_IntParam(*args))
    SetStaticName = _swig_new_instance_method(_IFSelect.IFSelect_IntParam_SetStaticName)
    SetValue = _swig_new_instance_method(_IFSelect.IFSelect_IntParam_SetValue)
    Value = _swig_new_instance_method(_IFSelect.IFSelect_IntParam_Value)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_IntParam_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_IntParam

# Register IFSelect_IntParam in _IFSelect:
_IFSelect.IFSelect_IntParam_swigregister(IFSelect_IntParam)

class IFSelect_ListEditor(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddValue = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_AddValue)
    ClearEdit = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_ClearEdit)
    EditedValues = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_EditedValues)

    def __init__(self, *args):
        r"""
        * Creates a ListEditor with absolutely no constraint
        	:rtype: None* Creates a ListEditor, for which items of the list to edit are defined by <def>, and <max> describes max length : 0 (D) means no limit value > 0 means : no more the <max> items are allowed
        	:param def:
        	:type def: Interface_TypedValue
        	:param max: default value is 0
        	:type max: int
        	:rtype: None
        """
        _IFSelect.IFSelect_ListEditor_swiginit(self, _IFSelect.new_IFSelect_ListEditor(*args))
    IsAdded = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_IsAdded)
    IsChanged = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_IsChanged)
    IsModified = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_IsModified)
    IsTouched = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_IsTouched)
    LoadEdited = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_LoadEdited)
    LoadModel = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_LoadModel)
    LoadValues = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_LoadValues)
    NbValues = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_NbValues)
    OriginalValues = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_OriginalValues)
    Remove = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_Remove)
    SetTouched = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_SetTouched)
    SetValue = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_SetValue)
    Value = _swig_new_instance_method(_IFSelect.IFSelect_ListEditor_Value)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_ListEditor_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_ListEditor

# Register IFSelect_ListEditor in _IFSelect:
_IFSelect.IFSelect_ListEditor_swigregister(IFSelect_ListEditor)

class IFSelect_ModelCopier(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddFile = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_AddFile)
    AddSentFile = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_AddSentFile)
    AppliedModifiers = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_AppliedModifiers)
    BeginSentFiles = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_BeginSentFiles)
    ClearAppliedModifiers = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_ClearAppliedModifiers)
    ClearFile = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_ClearFile)
    ClearResult = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_ClearResult)
    CopiedRemaining = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_CopiedRemaining)
    Copy = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_Copy)
    FileModel = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_FileModel)
    FileName = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_FileName)

    def __init__(self, *args):
        r"""
        * Creates an empty ModelCopier
        	:rtype: None
        """
        _IFSelect.IFSelect_ModelCopier_swiginit(self, _IFSelect.new_IFSelect_ModelCopier(*args))
    NameFile = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_NameFile)
    NbFiles = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_NbFiles)
    Send = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_Send)
    SendAll = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_SendAll)
    SendCopied = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_SendCopied)
    SendSelected = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_SendSelected)
    SentFiles = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_SentFiles)
    SetAppliedModifiers = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_SetAppliedModifiers)
    SetRemaining = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_SetRemaining)
    SetShareOut = _swig_new_instance_method(_IFSelect.IFSelect_ModelCopier_SetShareOut)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_ModelCopier_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_ModelCopier

# Register IFSelect_ModelCopier in _IFSelect:
_IFSelect.IFSelect_ModelCopier_swigregister(IFSelect_ModelCopier)

class IFSelect_PacketList(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Add = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_Add)
    AddList = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_AddList)
    AddPacket = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_AddPacket)
    Duplicated = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_Duplicated)
    Entities = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_Entities)
    HighestDuplicationCount = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_HighestDuplicationCount)

    def __init__(self, *args):
        r"""
        * Creates a PackList, empty, ready to receive entities from a given Model
        	:param model:
        	:type model: Interface_InterfaceModel
        	:rtype: None
        """
        _IFSelect.IFSelect_PacketList_swiginit(self, _IFSelect.new_IFSelect_PacketList(*args))
    Model = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_Model)
    Name = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_Name)
    NbDuplicated = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_NbDuplicated)
    NbEntities = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_NbEntities)
    NbPackets = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_NbPackets)
    SetName = _swig_new_instance_method(_IFSelect.IFSelect_PacketList_SetName)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_PacketList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_PacketList

# Register IFSelect_PacketList in _IFSelect:
_IFSelect.IFSelect_PacketList_swigregister(IFSelect_PacketList)

class IFSelect_Selection(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    CompleteResult = _swig_new_instance_method(_IFSelect.IFSelect_Selection_CompleteResult)
    FillIterator = _swig_new_instance_method(_IFSelect.IFSelect_Selection_FillIterator)
    Label = _swig_new_instance_method(_IFSelect.IFSelect_Selection_Label)
    RootResult = _swig_new_instance_method(_IFSelect.IFSelect_Selection_RootResult)
    UniqueResult = _swig_new_instance_method(_IFSelect.IFSelect_Selection_UniqueResult)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_Selection_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_Selection

# Register IFSelect_Selection in _IFSelect:
_IFSelect.IFSelect_Selection_swigregister(IFSelect_Selection)

class IFSelect_SelectionIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddFromIter = _swig_new_instance_method(_IFSelect.IFSelect_SelectionIterator_AddFromIter)
    AddItem = _swig_new_instance_method(_IFSelect.IFSelect_SelectionIterator_AddItem)
    AddList = _swig_new_instance_method(_IFSelect.IFSelect_SelectionIterator_AddList)

    def __init__(self, *args):
        r"""
        * Creates an empty iterator, ready to be filled
        	:rtype: None* Creates an iterator from a Selection : it lists the Selections from which <sel> depends (given by its method FillIterator)
        	:param sel:
        	:type sel: IFSelect_Selection
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectionIterator_swiginit(self, _IFSelect.new_IFSelect_SelectionIterator(*args))
    More = _swig_new_instance_method(_IFSelect.IFSelect_SelectionIterator_More)
    Next = _swig_new_instance_method(_IFSelect.IFSelect_SelectionIterator_Next)
    Value = _swig_new_instance_method(_IFSelect.IFSelect_SelectionIterator_Value)

    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectionIterator

# Register IFSelect_SelectionIterator in _IFSelect:
_IFSelect.IFSelect_SelectionIterator_swigregister(IFSelect_SelectionIterator)

class IFSelect_SessionDumper(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    First = _swig_new_static_method(_IFSelect.IFSelect_SessionDumper_First)
    Next = _swig_new_instance_method(_IFSelect.IFSelect_SessionDumper_Next)
    ReadOwn = _swig_new_instance_method(_IFSelect.IFSelect_SessionDumper_ReadOwn)
    WriteOwn = _swig_new_instance_method(_IFSelect.IFSelect_SessionDumper_WriteOwn)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SessionDumper_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SessionDumper

# Register IFSelect_SessionDumper in _IFSelect:
_IFSelect.IFSelect_SessionDumper_swigregister(IFSelect_SessionDumper)
IFSelect_SessionDumper_First = _IFSelect.IFSelect_SessionDumper_First

class IFSelect_SessionFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddItem = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_AddItem)
    AddLine = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_AddLine)
    ClearLines = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_ClearLines)
    Destroy = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_Destroy)

    def __init__(self, *args):
        r"""
        * Creates a SessionFile, ready to read Files in order to load them into a given WorkSession. The following Read Operations must then be called. It is also possible to perform a Write, which produces a complete File of all the content of the WorkSession.
        	:param WS:
        	:type WS: IFSelect_WorkSession
        	:rtype: None* Creates a SessionFile which Writes the content of a WorkSession to a File (directly calls Write) Then, IsDone aknowledges on the result of the Operation. But such a SessionFile may not Read a File to a WorkSession.
        	:param WS:
        	:type WS: IFSelect_WorkSession
        	:param filename:
        	:type filename: char *
        	:rtype: None
        """
        _IFSelect.IFSelect_SessionFile_swiginit(self, _IFSelect.new_IFSelect_SessionFile(*args))
    IsDone = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_IsDone)
    IsText = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_IsText)
    IsVoid = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_IsVoid)
    ItemValue = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_ItemValue)
    Line = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_Line)
    NbLines = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_NbLines)
    NbParams = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_NbParams)
    NewItem = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_NewItem)
    ParamValue = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_ParamValue)
    Read = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_Read)
    ReadEnd = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_ReadEnd)
    ReadFile = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_ReadFile)
    ReadLine = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_ReadLine)
    ReadOwn = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_ReadOwn)
    ReadSession = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_ReadSession)
    RecognizeFile = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_RecognizeFile)
    RemoveLastLine = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_RemoveLastLine)
    SendItem = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_SendItem)
    SendText = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_SendText)
    SendVoid = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_SendVoid)
    SetLastGeneral = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_SetLastGeneral)
    SetOwn = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_SetOwn)
    SplitLine = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_SplitLine)
    TextValue = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_TextValue)
    WorkSession = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_WorkSession)
    Write = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_Write)
    WriteEnd = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_WriteEnd)
    WriteFile = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_WriteFile)
    WriteLine = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_WriteLine)
    WriteOwn = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_WriteOwn)
    WriteSession = _swig_new_instance_method(_IFSelect.IFSelect_SessionFile_WriteSession)

    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SessionFile

# Register IFSelect_SessionFile in _IFSelect:
_IFSelect.IFSelect_SessionFile_swigregister(IFSelect_SessionFile)

class IFSelect_ShareOut(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddDispatch = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_AddDispatch)
    AddModif = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_AddModif)
    AddModifier = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_AddModifier)
    ChangeModifierRank = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_ChangeModifierRank)
    Clear = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_Clear)
    ClearResult = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_ClearResult)
    DefaultRootName = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_DefaultRootName)
    Dispatch = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_Dispatch)
    DispatchRank = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_DispatchRank)
    Extension = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_Extension)
    FileName = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_FileName)
    GeneralModifier = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_GeneralModifier)
    HasRootName = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_HasRootName)

    def __init__(self, *args):
        r"""
        * Creates an empty ShareOut
        	:rtype: None
        """
        _IFSelect.IFSelect_ShareOut_swiginit(self, _IFSelect.new_IFSelect_ShareOut(*args))
    LastRun = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_LastRun)
    ModelModifier = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_ModelModifier)
    ModifierRank = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_ModifierRank)
    NbDispatches = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_NbDispatches)
    NbModifiers = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_NbModifiers)
    Prefix = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_Prefix)
    RemoveDispatch = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_RemoveDispatch)
    RemoveItem = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_RemoveItem)
    RemoveModifier = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_RemoveModifier)
    RootName = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_RootName)
    RootNumber = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_RootNumber)
    SetDefaultRootName = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_SetDefaultRootName)
    SetExtension = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_SetExtension)
    SetLastRun = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_SetLastRun)
    SetPrefix = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_SetPrefix)
    SetRootName = _swig_new_instance_method(_IFSelect.IFSelect_ShareOut_SetRootName)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_ShareOut_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_ShareOut

# Register IFSelect_ShareOut in _IFSelect:
_IFSelect.IFSelect_ShareOut_swigregister(IFSelect_ShareOut)

class IFSelect_ShareOutResult(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Dispatch = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_Dispatch)
    DispatchRank = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_DispatchRank)
    Evaluate = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_Evaluate)
    FileName = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_FileName)
    Graph = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_Graph)

    def __init__(self, *args):
        r"""
        * Creates a ShareOutResult from a ShareOut, to work on a Model (without any more precision; uses Active Protocol)
        	:param sho:
        	:type sho: IFSelect_ShareOut
        	:param mod:
        	:type mod: Interface_InterfaceModel
        	:rtype: None* Creates a ShareOutResult from a ShareOut, to work on a Graph already computed, which defines the Input Model and can specialize some Entities
        	:param sho:
        	:type sho: IFSelect_ShareOut
        	:param G:
        	:type G: Interface_Graph
        	:rtype: None* Creates a ShareOutResult from a unique Dispatch, to work on a Model. As if it was a ShareOut with only one Dispatch (without any more precision; uses Active Protocol) Allows to compute the effect of a single Dispatch
        	:param disp:
        	:type disp: IFSelect_Dispatch
        	:param mod:
        	:type mod: Interface_InterfaceModel
        	:rtype: None* Creates a ShareOutResult from a unique Dispatch, to work on a Graph. As if it was a ShareOut with only one Dispatch Allows to compute the effect of a single Dispatch
        	:param disp:
        	:type disp: IFSelect_Dispatch
        	:param G:
        	:type G: Interface_Graph
        	:rtype: None
        """
        _IFSelect.IFSelect_ShareOutResult_swiginit(self, _IFSelect.new_IFSelect_ShareOutResult(*args))
    More = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_More)
    NbPackets = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_NbPackets)
    Next = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_Next)
    NextDispatch = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_NextDispatch)
    PacketContent = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_PacketContent)
    PacketRoot = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_PacketRoot)
    Packets = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_Packets)
    PacketsInDispatch = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_PacketsInDispatch)
    Prepare = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_Prepare)
    Reset = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_Reset)
    ShareOut = _swig_new_instance_method(_IFSelect.IFSelect_ShareOutResult_ShareOut)

    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_ShareOutResult

# Register IFSelect_ShareOutResult in _IFSelect:
_IFSelect.IFSelect_ShareOutResult_swigregister(IFSelect_ShareOutResult)

class IFSelect_Signature(OCC.Core.Interface.Interface_SignType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    AddCase = _swig_new_instance_method(_IFSelect.IFSelect_Signature_AddCase)
    CaseList = _swig_new_instance_method(_IFSelect.IFSelect_Signature_CaseList)
    IntValue = _swig_new_static_method(_IFSelect.IFSelect_Signature_IntValue)
    IsIntCase = _swig_new_instance_method(_IFSelect.IFSelect_Signature_IsIntCase)
    Label = _swig_new_instance_method(_IFSelect.IFSelect_Signature_Label)
    MatchValue = _swig_new_static_method(_IFSelect.IFSelect_Signature_MatchValue)
    Matches = _swig_new_instance_method(_IFSelect.IFSelect_Signature_Matches)
    SetIntCase = _swig_new_instance_method(_IFSelect.IFSelect_Signature_SetIntCase)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_Signature_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_Signature

# Register IFSelect_Signature in _IFSelect:
_IFSelect.IFSelect_Signature_swigregister(IFSelect_Signature)
IFSelect_Signature_IntValue = _IFSelect.IFSelect_Signature_IntValue
IFSelect_Signature_MatchValue = _IFSelect.IFSelect_Signature_MatchValue

class IFSelect_SignatureList(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Add = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_Add)
    Clear = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_Clear)
    Entities = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_Entities)
    HasEntities = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_HasEntities)

    def __init__(self, *args):
        r"""
        * Creates a SignatureList. If <withlist> is True, entities will be not only counted per signature, but also listed.
        	:param withlist: default value is Standard_False
        	:type withlist: bool
        	:rtype: None
        """
        _IFSelect.IFSelect_SignatureList_swiginit(self, _IFSelect.new_IFSelect_SignatureList(*args))
    Init = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_Init)
    LastValue = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_LastValue)
    List = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_List)
    GetModeSignOnly = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_GetModeSignOnly)
    SetModeSignOnly = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_SetModeSignOnly)
    Name = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_Name)
    NbNulls = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_NbNulls)
    NbTimes = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_NbTimes)
    PrintCount = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_PrintCount)
    PrintList = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_PrintList)
    PrintSum = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_PrintSum)
    SetList = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_SetList)
    SetName = _swig_new_instance_method(_IFSelect.IFSelect_SignatureList_SetName)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SignatureList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SignatureList

# Register IFSelect_SignatureList in _IFSelect:
_IFSelect.IFSelect_SignatureList_swigregister(IFSelect_SignatureList)

class IFSelect_Transformer(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ChangeProtocol = _swig_new_instance_method(_IFSelect.IFSelect_Transformer_ChangeProtocol)
    Label = _swig_new_instance_method(_IFSelect.IFSelect_Transformer_Label)
    Perform = _swig_new_instance_method(_IFSelect.IFSelect_Transformer_Perform)
    Updated = _swig_new_instance_method(_IFSelect.IFSelect_Transformer_Updated)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_Transformer_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_Transformer

# Register IFSelect_Transformer in _IFSelect:
_IFSelect.IFSelect_Transformer_swigregister(IFSelect_Transformer)

class IFSelect_WorkLibrary(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    CopyModel = _swig_new_instance_method(_IFSelect.IFSelect_WorkLibrary_CopyModel)
    DumpEntity = _swig_new_instance_method(_IFSelect.IFSelect_WorkLibrary_DumpEntity)
    DumpHelp = _swig_new_instance_method(_IFSelect.IFSelect_WorkLibrary_DumpHelp)
    DumpLevels = _swig_new_instance_method(_IFSelect.IFSelect_WorkLibrary_DumpLevels)
    ReadFile = _swig_new_instance_method(_IFSelect.IFSelect_WorkLibrary_ReadFile)
    SetDumpHelp = _swig_new_instance_method(_IFSelect.IFSelect_WorkLibrary_SetDumpHelp)
    SetDumpLevels = _swig_new_instance_method(_IFSelect.IFSelect_WorkLibrary_SetDumpLevels)
    WriteFile = _swig_new_instance_method(_IFSelect.IFSelect_WorkLibrary_WriteFile)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_WorkLibrary_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_WorkLibrary

# Register IFSelect_WorkLibrary in _IFSelect:
_IFSelect.IFSelect_WorkLibrary_swigregister(IFSelect_WorkLibrary)

class IFSelect_WorkSession(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddItem = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_AddItem)
    AddNamedItem = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_AddNamedItem)
    AppliedDispatches = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_AppliedDispatches)
    BeginSentFiles = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_BeginSentFiles)
    CategoryName = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_CategoryName)
    CategoryNumber = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_CategoryNumber)
    ChangeModifierRank = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ChangeModifierRank)
    CheckOne = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_CheckOne)
    ClearData = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ClearData)
    ClearFile = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ClearFile)
    ClearFinalModifiers = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ClearFinalModifiers)
    ClearItems = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ClearItems)
    ClearShareOut = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ClearShareOut)
    CombineAdd = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_CombineAdd)
    CombineRemove = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_CombineRemove)
    ComputeCheck = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ComputeCheck)
    ComputeCounter = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ComputeCounter)
    ComputeCounterFromList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ComputeCounterFromList)
    ComputeGraph = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ComputeGraph)
    DefaultFileRoot = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_DefaultFileRoot)
    Dispatch = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Dispatch)
    DispatchRank = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_DispatchRank)
    DumpEntity = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_DumpEntity)
    DumpModel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_DumpModel)
    DumpSelection = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_DumpSelection)
    DumpShare = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_DumpShare)
    EntityLabel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_EntityLabel)
    EntityName = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_EntityName)
    EvalSelection = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_EvalSelection)
    EvalSplit = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_EvalSplit)
    EvaluateComplete = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_EvaluateComplete)
    EvaluateDispatch = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_EvaluateDispatch)
    EvaluateFile = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_EvaluateFile)
    EvaluateSelection = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_EvaluateSelection)
    FileExtension = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_FileExtension)
    FileModel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_FileModel)
    FileName = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_FileName)
    FilePrefix = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_FilePrefix)
    FileRoot = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_FileRoot)
    FinalModifierIdents = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_FinalModifierIdents)
    GeneralModifier = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_GeneralModifier)
    GetModeStat = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_GetModeStat)
    GiveFileComplete = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_GiveFileComplete)
    GiveFileRoot = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_GiveFileRoot)
    GiveList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_GiveList)
    GiveListCombined = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_GiveListCombined)
    GiveListFromList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_GiveListFromList)
    GiveSelection = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_GiveSelection)
    Graph = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Graph)
    HGraph = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_HGraph)
    HasModel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_HasModel)
    HasName = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_HasName)

    def __init__(self, *args):
        r"""
        * Creates a Work Session It provides default, empty ShareOut and ModelCopier, which can be replaced (if required, should be done just after creation).
        	:rtype: None
        """
        _IFSelect.IFSelect_WorkSession_swiginit(self, _IFSelect.new_IFSelect_WorkSession(*args))
    IntParam = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_IntParam)
    IntValue = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_IntValue)
    IsLoaded = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_IsLoaded)
    IsReversedSelectExtract = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_IsReversedSelectExtract)
    Item = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Item)
    ItemIdent = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ItemIdent)
    ItemIdents = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ItemIdents)
    ItemLabel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ItemLabel)
    ItemNames = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ItemNames)
    ItemNamesForLabel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ItemNamesForLabel)
    ItemSelection = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ItemSelection)
    LastRunCheckList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_LastRunCheckList)
    ListEntities = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ListEntities)
    ListFinalModifiers = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ListFinalModifiers)
    ListItems = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ListItems)
    LoadedFile = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_LoadedFile)
    MaxIdent = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_MaxIdent)
    MaxSendingCount = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_MaxSendingCount)
    Model = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Model)
    ModelCheckList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ModelCheckList)
    ModelCopier = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ModelCopier)
    ModelModifier = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ModelModifier)
    ModifierRank = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ModifierRank)
    Name = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Name)
    NameIdent = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NameIdent)
    NamedItem = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NamedItem)
    NbFiles = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NbFiles)
    NbFinalModifiers = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NbFinalModifiers)
    NbSources = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NbSources)
    NbStartingEntities = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NbStartingEntities)
    NewIntParam = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NewIntParam)
    NewParamFromStatic = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NewParamFromStatic)
    NewSelectPointed = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NewSelectPointed)
    NewTextParam = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NewTextParam)
    NewTransformStandard = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NewTransformStandard)
    NextIdentForLabel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NextIdentForLabel)
    NumberFromLabel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_NumberFromLabel)
    PrintCheckList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_PrintCheckList)
    PrintEntityStatus = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_PrintEntityStatus)
    PrintSignatureList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_PrintSignatureList)
    Protocol = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Protocol)
    QueryCheckList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_QueryCheckList)
    QueryCheckStatus = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_QueryCheckStatus)
    QueryParent = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_QueryParent)
    ReadFile = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ReadFile)
    RemoveItem = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_RemoveItem)
    RemoveName = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_RemoveName)
    RemoveNamedItem = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_RemoveNamedItem)
    ResetAppliedModifier = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ResetAppliedModifier)
    ResetItemSelection = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ResetItemSelection)
    RunModifier = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_RunModifier)
    RunModifierSelected = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_RunModifierSelected)
    RunTransformer = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_RunTransformer)
    Selection = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Selection)
    SelectionResult = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SelectionResult)
    SelectionResultFromList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SelectionResultFromList)
    SendAll = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SendAll)
    SendSelected = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SendSelected)
    SendSplit = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SendSplit)
    SentFiles = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SentFiles)
    SentList = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SentList)
    SetActive = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetActive)
    SetAppliedModifier = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetAppliedModifier)
    SetControl = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetControl)
    SetDefaultFileRoot = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetDefaultFileRoot)
    SetFileExtension = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetFileExtension)
    SetFilePrefix = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetFilePrefix)
    SetFileRoot = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetFileRoot)
    SetInputSelection = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetInputSelection)
    SetIntValue = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetIntValue)
    SetItemSelection = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetItemSelection)
    SetLibrary = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetLibrary)
    SetLoadedFile = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetLoadedFile)
    SetModeStat = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetModeStat)
    SetModel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetModel)
    SetModelContent = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetModelContent)
    SetModelCopier = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetModelCopier)
    SetParams = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetParams)
    SetProtocol = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetProtocol)
    SetRemaining = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetRemaining)
    SetSelectPointed = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetSelectPointed)
    SetShareOut = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetShareOut)
    SetSignType = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetSignType)
    SetTextValue = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SetTextValue)
    ShareOut = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ShareOut)
    Shareds = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Shareds)
    Sharings = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Sharings)
    SignCounter = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SignCounter)
    SignType = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SignType)
    SignValue = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_SignValue)
    Signature = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Signature)
    Source = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Source)
    Sources = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Sources)
    StartingEntity = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_StartingEntity)
    StartingNumber = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_StartingNumber)
    TextParam = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_TextParam)
    TextValue = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_TextValue)
    ToggleSelectExtract = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ToggleSelectExtract)
    TraceDumpEntity = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_TraceDumpEntity)
    TraceDumpModel = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_TraceDumpModel)
    TraceStatics = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_TraceStatics)
    Transformer = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_Transformer)
    UsesAppliedModifier = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_UsesAppliedModifier)
    ValidityName = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_ValidityName)
    WorkLibrary = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_WorkLibrary)
    WriteFile = _swig_new_instance_method(_IFSelect.IFSelect_WorkSession_WriteFile)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_WorkSession_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_WorkSession

# Register IFSelect_WorkSession in _IFSelect:
_IFSelect.IFSelect_WorkSession_swigregister(IFSelect_WorkSession)

class IFSelect_Act(IFSelect_Activator):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddFSet = _swig_new_static_method(_IFSelect.IFSelect_Act_AddFSet)
    AddFunc = _swig_new_static_method(_IFSelect.IFSelect_Act_AddFunc)

    def __init__(self, *args):
        r"""
        * Creates an Act with a name, help and a function mode (Add or AddSet) is given when recording
        	:param name:
        	:type name: char *
        	:param help:
        	:type help: char *
        	:param func:
        	:type func: IFSelect_ActFunc
        	:rtype: None
        """
        _IFSelect.IFSelect_Act_swiginit(self, _IFSelect.new_IFSelect_Act(*args))
    SetGroup = _swig_new_static_method(_IFSelect.IFSelect_Act_SetGroup)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_Act_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_Act

# Register IFSelect_Act in _IFSelect:
_IFSelect.IFSelect_Act_swigregister(IFSelect_Act)
IFSelect_Act_AddFSet = _IFSelect.IFSelect_Act_AddFSet
IFSelect_Act_AddFunc = _IFSelect.IFSelect_Act_AddFunc
IFSelect_Act_SetGroup = _IFSelect.IFSelect_Act_SetGroup

class IFSelect_BasicDumper(IFSelect_SessionDumper):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a BasicDumper and puts it into the Library of Dumper
        	:rtype: None
        """
        _IFSelect.IFSelect_BasicDumper_swiginit(self, _IFSelect.new_IFSelect_BasicDumper(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_BasicDumper_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_BasicDumper

# Register IFSelect_BasicDumper in _IFSelect:
_IFSelect.IFSelect_BasicDumper_swigregister(IFSelect_BasicDumper)

class IFSelect_CheckCounter(IFSelect_SignatureList):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Analyse = _swig_new_instance_method(_IFSelect.IFSelect_CheckCounter_Analyse)

    def __init__(self, *args):
        r"""
        * Creates a CheckCounter, empty ready to work
        	:param withlist: default value is Standard_False
        	:type withlist: bool
        	:rtype: None
        """
        _IFSelect.IFSelect_CheckCounter_swiginit(self, _IFSelect.new_IFSelect_CheckCounter(*args))
    SetSignature = _swig_new_instance_method(_IFSelect.IFSelect_CheckCounter_SetSignature)
    Signature = _swig_new_instance_method(_IFSelect.IFSelect_CheckCounter_Signature)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_CheckCounter_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_CheckCounter

# Register IFSelect_CheckCounter in _IFSelect:
_IFSelect.IFSelect_CheckCounter_swigregister(IFSelect_CheckCounter)

class IFSelect_DispGlobal(IFSelect_Dispatch):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a DispGlobal
        	:rtype: None
        """
        _IFSelect.IFSelect_DispGlobal_swiginit(self, _IFSelect.new_IFSelect_DispGlobal(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_DispGlobal_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_DispGlobal

# Register IFSelect_DispGlobal in _IFSelect:
_IFSelect.IFSelect_DispGlobal_swigregister(IFSelect_DispGlobal)

class IFSelect_DispPerCount(IFSelect_Dispatch):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Count = _swig_new_instance_method(_IFSelect.IFSelect_DispPerCount_Count)
    CountValue = _swig_new_instance_method(_IFSelect.IFSelect_DispPerCount_CountValue)

    def __init__(self, *args):
        r"""
        * Creates a DispPerCount with no Count (default value 1)
        	:rtype: None
        """
        _IFSelect.IFSelect_DispPerCount_swiginit(self, _IFSelect.new_IFSelect_DispPerCount(*args))
    SetCount = _swig_new_instance_method(_IFSelect.IFSelect_DispPerCount_SetCount)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_DispPerCount_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_DispPerCount

# Register IFSelect_DispPerCount in _IFSelect:
_IFSelect.IFSelect_DispPerCount_swigregister(IFSelect_DispPerCount)

class IFSelect_DispPerFiles(IFSelect_Dispatch):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Count = _swig_new_instance_method(_IFSelect.IFSelect_DispPerFiles_Count)
    CountValue = _swig_new_instance_method(_IFSelect.IFSelect_DispPerFiles_CountValue)

    def __init__(self, *args):
        r"""
        * Creates a DispPerFiles with no Count (default value 1 file)
        	:rtype: None
        """
        _IFSelect.IFSelect_DispPerFiles_swiginit(self, _IFSelect.new_IFSelect_DispPerFiles(*args))
    SetCount = _swig_new_instance_method(_IFSelect.IFSelect_DispPerFiles_SetCount)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_DispPerFiles_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_DispPerFiles

# Register IFSelect_DispPerFiles in _IFSelect:
_IFSelect.IFSelect_DispPerFiles_swigregister(IFSelect_DispPerFiles)

class IFSelect_DispPerOne(IFSelect_Dispatch):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a DispPerOne
        	:rtype: None
        """
        _IFSelect.IFSelect_DispPerOne_swiginit(self, _IFSelect.new_IFSelect_DispPerOne(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_DispPerOne_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_DispPerOne

# Register IFSelect_DispPerOne in _IFSelect:
_IFSelect.IFSelect_DispPerOne_swigregister(IFSelect_DispPerOne)

class IFSelect_DispPerSignature(IFSelect_Dispatch):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a DispPerSignature with no SignCounter (by default, produces only one packet)
        	:rtype: None
        """
        _IFSelect.IFSelect_DispPerSignature_swiginit(self, _IFSelect.new_IFSelect_DispPerSignature(*args))
    SetSignCounter = _swig_new_instance_method(_IFSelect.IFSelect_DispPerSignature_SetSignCounter)
    SignCounter = _swig_new_instance_method(_IFSelect.IFSelect_DispPerSignature_SignCounter)
    SignName = _swig_new_instance_method(_IFSelect.IFSelect_DispPerSignature_SignName)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_DispPerSignature_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_DispPerSignature

# Register IFSelect_DispPerSignature in _IFSelect:
_IFSelect.IFSelect_DispPerSignature_swigregister(IFSelect_DispPerSignature)

class IFSelect_Modifier(IFSelect_GeneralModifier):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Perform = _swig_new_instance_method(_IFSelect.IFSelect_Modifier_Perform)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_Modifier_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_Modifier

# Register IFSelect_Modifier in _IFSelect:
_IFSelect.IFSelect_Modifier_swigregister(IFSelect_Modifier)

class IFSelect_ParamEditor(IFSelect_Editor):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddConstantText = _swig_new_instance_method(_IFSelect.IFSelect_ParamEditor_AddConstantText)
    AddValue = _swig_new_instance_method(_IFSelect.IFSelect_ParamEditor_AddValue)

    def __init__(self, *args):
        r"""
        * Creates a ParamEditor, empty, with a maximum count of params (default is 100) And a label, by default it will be 'Param Editor'
        	:param nbmax: default value is 100
        	:type nbmax: int
        	:param label: default value is 
        	:type label: char *
        	:rtype: None
        """
        _IFSelect.IFSelect_ParamEditor_swiginit(self, _IFSelect.new_IFSelect_ParamEditor(*args))
    StaticEditor = _swig_new_static_method(_IFSelect.IFSelect_ParamEditor_StaticEditor)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_ParamEditor_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_ParamEditor

# Register IFSelect_ParamEditor in _IFSelect:
_IFSelect.IFSelect_ParamEditor_swigregister(IFSelect_ParamEditor)
IFSelect_ParamEditor_StaticEditor = _IFSelect.IFSelect_ParamEditor_StaticEditor

class IFSelect_SelectBase(IFSelect_Selection):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectBase_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectBase

# Register IFSelect_SelectBase in _IFSelect:
_IFSelect.IFSelect_SelectBase_swigregister(IFSelect_SelectBase)

class IFSelect_SelectCombine(IFSelect_Selection):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Add = _swig_new_instance_method(_IFSelect.IFSelect_SelectCombine_Add)
    Input = _swig_new_instance_method(_IFSelect.IFSelect_SelectCombine_Input)
    InputRank = _swig_new_instance_method(_IFSelect.IFSelect_SelectCombine_InputRank)
    NbInputs = _swig_new_instance_method(_IFSelect.IFSelect_SelectCombine_NbInputs)
    Remove = _swig_new_instance_method(_IFSelect.IFSelect_SelectCombine_Remove)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectCombine_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectCombine

# Register IFSelect_SelectCombine in _IFSelect:
_IFSelect.IFSelect_SelectCombine_swigregister(IFSelect_SelectCombine)

class IFSelect_SelectControl(IFSelect_Selection):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    HasSecondInput = _swig_new_instance_method(_IFSelect.IFSelect_SelectControl_HasSecondInput)
    MainInput = _swig_new_instance_method(_IFSelect.IFSelect_SelectControl_MainInput)
    SecondInput = _swig_new_instance_method(_IFSelect.IFSelect_SelectControl_SecondInput)
    SetMainInput = _swig_new_instance_method(_IFSelect.IFSelect_SelectControl_SetMainInput)
    SetSecondInput = _swig_new_instance_method(_IFSelect.IFSelect_SelectControl_SetSecondInput)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectControl_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectControl

# Register IFSelect_SelectControl in _IFSelect:
_IFSelect.IFSelect_SelectControl_swigregister(IFSelect_SelectControl)

class IFSelect_SelectDeduct(IFSelect_Selection):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Alternate = _swig_new_instance_method(_IFSelect.IFSelect_SelectDeduct_Alternate)
    HasAlternate = _swig_new_instance_method(_IFSelect.IFSelect_SelectDeduct_HasAlternate)
    HasInput = _swig_new_instance_method(_IFSelect.IFSelect_SelectDeduct_HasInput)
    Input = _swig_new_instance_method(_IFSelect.IFSelect_SelectDeduct_Input)
    InputResult = _swig_new_instance_method(_IFSelect.IFSelect_SelectDeduct_InputResult)
    SetInput = _swig_new_instance_method(_IFSelect.IFSelect_SelectDeduct_SetInput)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectDeduct_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectDeduct

# Register IFSelect_SelectDeduct in _IFSelect:
_IFSelect.IFSelect_SelectDeduct_swigregister(IFSelect_SelectDeduct)

class IFSelect_SessionPilot(IFSelect_Activator):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Arg = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_Arg)
    Clear = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_Clear)
    Command = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_Command)
    CommandLine = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_CommandLine)
    CommandPart = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_CommandPart)
    Execute = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_Execute)
    ExecuteAlias = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_ExecuteAlias)
    ExecuteCounter = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_ExecuteCounter)

    def __init__(self, *args):
        r"""
        * Creates an empty SessionPilot, with a prompt which will be displayed on querying commands. If not precised (''), this prompt is set to 'Test-XSTEP>'
        	:param prompt: default value is 
        	:type prompt: char *
        	:rtype: None
        """
        _IFSelect.IFSelect_SessionPilot_swiginit(self, _IFSelect.new_IFSelect_SessionPilot(*args))
    Library = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_Library)
    NbCommands = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_NbCommands)
    NbWords = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_NbWords)
    Number = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_Number)
    Perform = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_Perform)
    ReadScript = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_ReadScript)
    RecordItem = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_RecordItem)
    RecordMode = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_RecordMode)
    RecordedItem = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_RecordedItem)
    RemoveWord = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_RemoveWord)
    Session = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_Session)
    SetCommandLine = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_SetCommandLine)
    SetLibrary = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_SetLibrary)
    SetRecordMode = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_SetRecordMode)
    SetSession = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_SetSession)
    Word = _swig_new_instance_method(_IFSelect.IFSelect_SessionPilot_Word)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SessionPilot_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SessionPilot

# Register IFSelect_SessionPilot in _IFSelect:
_IFSelect.IFSelect_SessionPilot_swigregister(IFSelect_SessionPilot)

class IFSelect_SignCategory(IFSelect_Signature):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a SignCategory
        	:rtype: None
        """
        _IFSelect.IFSelect_SignCategory_swiginit(self, _IFSelect.new_IFSelect_SignCategory(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SignCategory_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SignCategory

# Register IFSelect_SignCategory in _IFSelect:
_IFSelect.IFSelect_SignCategory_swigregister(IFSelect_SignCategory)

class IFSelect_SignCounter(IFSelect_SignatureList):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddEntity = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_AddEntity)
    AddFromSelection = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_AddFromSelection)
    AddList = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_AddList)
    AddModel = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_AddModel)
    AddSign = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_AddSign)
    AddWithGraph = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_AddWithGraph)
    ComputeSelected = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_ComputeSelected)
    ComputedSign = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_ComputedSign)

    def __init__(self, *args):
        r"""
        * Creates a SignCounter, without proper Signature If <withmap> is True (default), added entities are counted only if they are not yet recorded in the map Map control can be set off if the input garantees uniqueness of data <withlist> is transmitted to SignatureList (option to list entities, not only to count them).
        	:param withmap: default value is Standard_True
        	:type withmap: bool
        	:param withlist: default value is Standard_False
        	:type withlist: bool
        	:rtype: None* Creates a SignCounter, with a predefined Signature Other arguments as for Create without Signature.
        	:param matcher:
        	:type matcher: IFSelect_Signature
        	:param withmap: default value is Standard_True
        	:type withmap: bool
        	:param withlist: default value is Standard_False
        	:type withlist: bool
        	:rtype: None
        """
        _IFSelect.IFSelect_SignCounter_swiginit(self, _IFSelect.new_IFSelect_SignCounter(*args))
    SelMode = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_SelMode)
    Selection = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_Selection)
    SetMap = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_SetMap)
    SetSelMode = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_SetSelMode)
    SetSelection = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_SetSelection)
    Sign = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_Sign)
    Signature = _swig_new_instance_method(_IFSelect.IFSelect_SignCounter_Signature)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SignCounter_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SignCounter

# Register IFSelect_SignCounter in _IFSelect:
_IFSelect.IFSelect_SignCounter_swigregister(IFSelect_SignCounter)

class IFSelect_SignMultiple(IFSelect_Signature):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Add = _swig_new_instance_method(_IFSelect.IFSelect_SignMultiple_Add)

    def __init__(self, *args):
        r"""
        * Creates an empty SignMultiple with a Name This name should take expected tabulations into account
        	:param name:
        	:type name: char *
        	:rtype: None
        """
        _IFSelect.IFSelect_SignMultiple_swiginit(self, _IFSelect.new_IFSelect_SignMultiple(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SignMultiple_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SignMultiple

# Register IFSelect_SignMultiple in _IFSelect:
_IFSelect.IFSelect_SignMultiple_swigregister(IFSelect_SignMultiple)

class IFSelect_SignType(IFSelect_Signature):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Returns a SignType <nopk> false (D) : complete dynamic type (name = Dynamic Type) <nopk> true : class type without pk (name = Class Type)
        	:param nopk: default value is Standard_False
        	:type nopk: bool
        	:rtype: None
        """
        _IFSelect.IFSelect_SignType_swiginit(self, _IFSelect.new_IFSelect_SignType(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SignType_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SignType

# Register IFSelect_SignType in _IFSelect:
_IFSelect.IFSelect_SignType_swigregister(IFSelect_SignType)

class IFSelect_SignValidity(IFSelect_Signature):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CVal = _swig_new_static_method(_IFSelect.IFSelect_SignValidity_CVal)

    def __init__(self, *args):
        r"""
        * Returns a SignValidity
        	:rtype: None
        """
        _IFSelect.IFSelect_SignValidity_swiginit(self, _IFSelect.new_IFSelect_SignValidity(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SignValidity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SignValidity

# Register IFSelect_SignValidity in _IFSelect:
_IFSelect.IFSelect_SignValidity_swigregister(IFSelect_SignValidity)
IFSelect_SignValidity_CVal = _IFSelect.IFSelect_SignValidity_CVal

class IFSelect_TransformStandard(IFSelect_Transformer):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddModifier = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_AddModifier)
    ApplyModifiers = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_ApplyModifiers)
    Copy = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_Copy)
    CopyOption = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_CopyOption)

    def __init__(self, *args):
        r"""
        * Creates a TransformStandard, option StandardCopy, no Modifier
        	:rtype: None
        """
        _IFSelect.IFSelect_TransformStandard_swiginit(self, _IFSelect.new_IFSelect_TransformStandard(*args))
    Modifier = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_Modifier)
    ModifierRank = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_ModifierRank)
    NbModifiers = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_NbModifiers)
    OnTheSpot = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_OnTheSpot)
    RemoveModifier = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_RemoveModifier)
    Selection = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_Selection)
    SetCopyOption = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_SetCopyOption)
    SetSelection = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_SetSelection)
    StandardCopy = _swig_new_instance_method(_IFSelect.IFSelect_TransformStandard_StandardCopy)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_TransformStandard_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_TransformStandard

# Register IFSelect_TransformStandard in _IFSelect:
_IFSelect.IFSelect_TransformStandard_swigregister(IFSelect_TransformStandard)

class IFSelect_GraphCounter(IFSelect_SignCounter):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Applied = _swig_new_instance_method(_IFSelect.IFSelect_GraphCounter_Applied)

    def __init__(self, *args):
        r"""
        * Creates a GraphCounter, without applied selection
        	:param withmap: default value is Standard_True
        	:type withmap: bool
        	:param withlist: default value is Standard_False
        	:type withlist: bool
        	:rtype: None
        """
        _IFSelect.IFSelect_GraphCounter_swiginit(self, _IFSelect.new_IFSelect_GraphCounter(*args))
    SetApplied = _swig_new_instance_method(_IFSelect.IFSelect_GraphCounter_SetApplied)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_GraphCounter_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_GraphCounter

# Register IFSelect_GraphCounter in _IFSelect:
_IFSelect.IFSelect_GraphCounter_swigregister(IFSelect_GraphCounter)

class IFSelect_ModifEditForm(IFSelect_Modifier):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EditForm = _swig_new_instance_method(_IFSelect.IFSelect_ModifEditForm_EditForm)

    def __init__(self, *args):
        r"""
        * Creates a ModifEditForm. It may not change the graph
        	:param editform:
        	:type editform: IFSelect_EditForm
        	:rtype: None
        """
        _IFSelect.IFSelect_ModifEditForm_swiginit(self, _IFSelect.new_IFSelect_ModifEditForm(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_ModifEditForm_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_ModifEditForm

# Register IFSelect_ModifEditForm in _IFSelect:
_IFSelect.IFSelect_ModifEditForm_swigregister(IFSelect_ModifEditForm)

class IFSelect_ModifReorder(IFSelect_Modifier):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a ModifReorder. It may change the graph (it does !) If <rootlast> is True (D), roots are set at the end of packets Else, they are set at beginning (as done by AddWithRefs)
        	:param rootlast: default value is Standard_True
        	:type rootlast: bool
        	:rtype: None
        """
        _IFSelect.IFSelect_ModifReorder_swiginit(self, _IFSelect.new_IFSelect_ModifReorder(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_ModifReorder_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_ModifReorder

# Register IFSelect_ModifReorder in _IFSelect:
_IFSelect.IFSelect_ModifReorder_swigregister(IFSelect_ModifReorder)

class IFSelect_SelectAnyList(IFSelect_SelectDeduct):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    FillResult = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_FillResult)
    HasLower = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_HasLower)
    HasUpper = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_HasUpper)
    KeepInputEntity = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_KeepInputEntity)
    ListLabel = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_ListLabel)
    Lower = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_Lower)
    LowerValue = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_LowerValue)
    NbItems = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_NbItems)
    SetFrom = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_SetFrom)
    SetOne = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_SetOne)
    SetRange = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_SetRange)
    SetUntil = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_SetUntil)
    Upper = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_Upper)
    UpperValue = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyList_UpperValue)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectAnyList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectAnyList

# Register IFSelect_SelectAnyList in _IFSelect:
_IFSelect.IFSelect_SelectAnyList_swigregister(IFSelect_SelectAnyList)

class IFSelect_SelectDiff(IFSelect_SelectControl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates an empty SelectDiff
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectDiff_swiginit(self, _IFSelect.new_IFSelect_SelectDiff(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectDiff_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectDiff

# Register IFSelect_SelectDiff in _IFSelect:
_IFSelect.IFSelect_SelectDiff_swigregister(IFSelect_SelectDiff)

class IFSelect_SelectEntityNumber(IFSelect_SelectBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectEntityNumber, initially with no specified Number
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectEntityNumber_swiginit(self, _IFSelect.new_IFSelect_SelectEntityNumber(*args))
    Number = _swig_new_instance_method(_IFSelect.IFSelect_SelectEntityNumber_Number)
    SetNumber = _swig_new_instance_method(_IFSelect.IFSelect_SelectEntityNumber_SetNumber)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectEntityNumber_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectEntityNumber

# Register IFSelect_SelectEntityNumber in _IFSelect:
_IFSelect.IFSelect_SelectEntityNumber_swigregister(IFSelect_SelectEntityNumber)

class IFSelect_SelectExplore(IFSelect_SelectDeduct):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Explore = _swig_new_instance_method(_IFSelect.IFSelect_SelectExplore_Explore)
    ExploreLabel = _swig_new_instance_method(_IFSelect.IFSelect_SelectExplore_ExploreLabel)
    Level = _swig_new_instance_method(_IFSelect.IFSelect_SelectExplore_Level)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectExplore_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectExplore

# Register IFSelect_SelectExplore in _IFSelect:
_IFSelect.IFSelect_SelectExplore_swigregister(IFSelect_SelectExplore)

class IFSelect_SelectExtract(IFSelect_SelectDeduct):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ExtractLabel = _swig_new_instance_method(_IFSelect.IFSelect_SelectExtract_ExtractLabel)
    IsDirect = _swig_new_instance_method(_IFSelect.IFSelect_SelectExtract_IsDirect)
    SetDirect = _swig_new_instance_method(_IFSelect.IFSelect_SelectExtract_SetDirect)
    Sort = _swig_new_instance_method(_IFSelect.IFSelect_SelectExtract_Sort)
    SortInGraph = _swig_new_instance_method(_IFSelect.IFSelect_SelectExtract_SortInGraph)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectExtract_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectExtract

# Register IFSelect_SelectExtract in _IFSelect:
_IFSelect.IFSelect_SelectExtract_swigregister(IFSelect_SelectExtract)

class IFSelect_SelectIntersection(IFSelect_SelectCombine):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates an empty SelectIntersection
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectIntersection_swiginit(self, _IFSelect.new_IFSelect_SelectIntersection(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectIntersection_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectIntersection

# Register IFSelect_SelectIntersection in _IFSelect:
_IFSelect.IFSelect_SelectIntersection_swigregister(IFSelect_SelectIntersection)

class IFSelect_SelectModelEntities(IFSelect_SelectBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectModelRoot
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectModelEntities_swiginit(self, _IFSelect.new_IFSelect_SelectModelEntities(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectModelEntities_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectModelEntities

# Register IFSelect_SelectModelEntities in _IFSelect:
_IFSelect.IFSelect_SelectModelEntities_swigregister(IFSelect_SelectModelEntities)

class IFSelect_SelectModelRoots(IFSelect_SelectBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectModelRoot
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectModelRoots_swiginit(self, _IFSelect.new_IFSelect_SelectModelRoots(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectModelRoots_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectModelRoots

# Register IFSelect_SelectModelRoots in _IFSelect:
_IFSelect.IFSelect_SelectModelRoots_swigregister(IFSelect_SelectModelRoots)

class IFSelect_SelectPointed(IFSelect_SelectBase):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Add = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_Add)
    AddList = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_AddList)
    Clear = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_Clear)

    def __init__(self, *args):
        r"""
        * Creates a SelectPointed
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectPointed_swiginit(self, _IFSelect.new_IFSelect_SelectPointed(*args))
    IsSet = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_IsSet)
    Item = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_Item)
    NbItems = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_NbItems)
    Rank = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_Rank)
    Remove = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_Remove)
    RemoveList = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_RemoveList)
    SetEntity = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_SetEntity)
    SetList = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_SetList)
    Toggle = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_Toggle)
    ToggleList = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_ToggleList)
    Update = _swig_new_instance_method(_IFSelect.IFSelect_SelectPointed_Update)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectPointed_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectPointed

# Register IFSelect_SelectPointed in _IFSelect:
_IFSelect.IFSelect_SelectPointed_swigregister(IFSelect_SelectPointed)

class IFSelect_SelectShared(IFSelect_SelectDeduct):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectShared;
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectShared_swiginit(self, _IFSelect.new_IFSelect_SelectShared(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectShared_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectShared

# Register IFSelect_SelectShared in _IFSelect:
_IFSelect.IFSelect_SelectShared_swigregister(IFSelect_SelectShared)

class IFSelect_SelectSharing(IFSelect_SelectDeduct):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectSharing;
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectSharing_swiginit(self, _IFSelect.new_IFSelect_SelectSharing(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectSharing_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectSharing

# Register IFSelect_SelectSharing in _IFSelect:
_IFSelect.IFSelect_SelectSharing_swigregister(IFSelect_SelectSharing)

class IFSelect_SelectSuite(IFSelect_SelectDeduct):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddInput = _swig_new_instance_method(_IFSelect.IFSelect_SelectSuite_AddInput)
    AddNext = _swig_new_instance_method(_IFSelect.IFSelect_SelectSuite_AddNext)
    AddPrevious = _swig_new_instance_method(_IFSelect.IFSelect_SelectSuite_AddPrevious)

    def __init__(self, *args):
        r"""
        * Creates an empty SelectSuite
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectSuite_swiginit(self, _IFSelect.new_IFSelect_SelectSuite(*args))
    Item = _swig_new_instance_method(_IFSelect.IFSelect_SelectSuite_Item)
    NbItems = _swig_new_instance_method(_IFSelect.IFSelect_SelectSuite_NbItems)
    SetLabel = _swig_new_instance_method(_IFSelect.IFSelect_SelectSuite_SetLabel)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectSuite_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectSuite

# Register IFSelect_SelectSuite in _IFSelect:
_IFSelect.IFSelect_SelectSuite_swigregister(IFSelect_SelectSuite)

class IFSelect_SelectUnion(IFSelect_SelectCombine):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates an empty SelectUnion
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectUnion_swiginit(self, _IFSelect.new_IFSelect_SelectUnion(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectUnion_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectUnion

# Register IFSelect_SelectUnion in _IFSelect:
_IFSelect.IFSelect_SelectUnion_swigregister(IFSelect_SelectUnion)

class IFSelect_SignAncestor(IFSelect_SignType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        :param nopk: default value is Standard_False
        	:type nopk: bool
        	:rtype: None
        """
        _IFSelect.IFSelect_SignAncestor_swiginit(self, _IFSelect.new_IFSelect_SignAncestor(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SignAncestor_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SignAncestor

# Register IFSelect_SignAncestor in _IFSelect:
_IFSelect.IFSelect_SignAncestor_swigregister(IFSelect_SignAncestor)

class IFSelect_SelectAnyType(IFSelect_SelectExtract):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    TypeForMatch = _swig_new_instance_method(_IFSelect.IFSelect_SelectAnyType_TypeForMatch)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectAnyType_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectAnyType

# Register IFSelect_SelectAnyType in _IFSelect:
_IFSelect.IFSelect_SelectAnyType_swigregister(IFSelect_SelectAnyType)

class IFSelect_SelectErrorEntities(IFSelect_SelectExtract):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectErrorEntities
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectErrorEntities_swiginit(self, _IFSelect.new_IFSelect_SelectErrorEntities(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectErrorEntities_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectErrorEntities

# Register IFSelect_SelectErrorEntities in _IFSelect:
_IFSelect.IFSelect_SelectErrorEntities_swigregister(IFSelect_SelectErrorEntities)

class IFSelect_SelectFlag(IFSelect_SelectExtract):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FlagName = _swig_new_instance_method(_IFSelect.IFSelect_SelectFlag_FlagName)

    def __init__(self, *args):
        r"""
        * Creates a Select Flag, to query a flag designated by its name
        	:param flagname:
        	:type flagname: char *
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectFlag_swiginit(self, _IFSelect.new_IFSelect_SelectFlag(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectFlag_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectFlag

# Register IFSelect_SelectFlag in _IFSelect:
_IFSelect.IFSelect_SelectFlag_swigregister(IFSelect_SelectFlag)

class IFSelect_SelectInList(IFSelect_SelectAnyList):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ListedEntity = _swig_new_instance_method(_IFSelect.IFSelect_SelectInList_ListedEntity)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectInList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectInList

# Register IFSelect_SelectInList in _IFSelect:
_IFSelect.IFSelect_SelectInList_swigregister(IFSelect_SelectInList)

class IFSelect_SelectRange(IFSelect_SelectExtract):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    HasLower = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_HasLower)
    HasUpper = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_HasUpper)

    def __init__(self, *args):
        r"""
        * Creates a SelectRange. Default is Take all the input list
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectRange_swiginit(self, _IFSelect.new_IFSelect_SelectRange(*args))
    Lower = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_Lower)
    LowerValue = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_LowerValue)
    SetFrom = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_SetFrom)
    SetOne = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_SetOne)
    SetRange = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_SetRange)
    SetUntil = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_SetUntil)
    Upper = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_Upper)
    UpperValue = _swig_new_instance_method(_IFSelect.IFSelect_SelectRange_UpperValue)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectRange_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectRange

# Register IFSelect_SelectRange in _IFSelect:
_IFSelect.IFSelect_SelectRange_swigregister(IFSelect_SelectRange)

class IFSelect_SelectRootComps(IFSelect_SelectExtract):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectRootComps
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectRootComps_swiginit(self, _IFSelect.new_IFSelect_SelectRootComps(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectRootComps_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectRootComps

# Register IFSelect_SelectRootComps in _IFSelect:
_IFSelect.IFSelect_SelectRootComps_swigregister(IFSelect_SelectRootComps)

class IFSelect_SelectRoots(IFSelect_SelectExtract):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectRoots
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectRoots_swiginit(self, _IFSelect.new_IFSelect_SelectRoots(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectRoots_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectRoots

# Register IFSelect_SelectRoots in _IFSelect:
_IFSelect.IFSelect_SelectRoots_swigregister(IFSelect_SelectRoots)

class IFSelect_SelectSent(IFSelect_SelectExtract):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AtLeast = _swig_new_instance_method(_IFSelect.IFSelect_SelectSent_AtLeast)

    def __init__(self, *args):
        r"""
        * Creates a SelectSent : sentcount = 0 -> remaining (non-sent) entities sentcount = 1, atleast = True (D) -> sent (at least once) sentcount = 2, atleast = True -> duplicated (sent least twice) etc... sentcount = 1, atleast = False -> sent just once (non-dupl.d) sentcount = 2, atleast = False -> sent just twice etc...
        	:param sentcount: default value is 1
        	:type sentcount: int
        	:param atleast: default value is Standard_True
        	:type atleast: bool
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectSent_swiginit(self, _IFSelect.new_IFSelect_SelectSent(*args))
    SentCount = _swig_new_instance_method(_IFSelect.IFSelect_SelectSent_SentCount)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectSent_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectSent

# Register IFSelect_SelectSent in _IFSelect:
_IFSelect.IFSelect_SelectSent_swigregister(IFSelect_SelectSent)

class IFSelect_SelectSignature(IFSelect_SelectExtract):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Counter = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignature_Counter)

    def __init__(self, *args):
        r"""
        * Creates a SelectSignature with its Signature and its Text to Match. <exact> if True requires exact match, if False requires <signtext> to be contained in the Signature of the entity (default is 'exact')
        	:param matcher:
        	:type matcher: IFSelect_Signature
        	:param signtext:
        	:type signtext: char *
        	:param exact: default value is Standard_True
        	:type exact: bool
        	:rtype: None* As above with an AsciiString
        	:param matcher:
        	:type matcher: IFSelect_Signature
        	:param signtext:
        	:type signtext: TCollection_AsciiString
        	:param exact: default value is Standard_True
        	:type exact: bool
        	:rtype: None* Creates a SelectSignature with a Counter, more precisely a SelectSignature. Which is used here to just give a Signature Value (by SignOnly Mode) Matching is the default provided by the class Signature
        	:param matcher:
        	:type matcher: IFSelect_SignCounter
        	:param signtext:
        	:type signtext: char *
        	:param exact: default value is Standard_True
        	:type exact: bool
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectSignature_swiginit(self, _IFSelect.new_IFSelect_SelectSignature(*args))
    IsExact = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignature_IsExact)
    Signature = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignature_Signature)
    SignatureText = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignature_SignatureText)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectSignature_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectSignature

# Register IFSelect_SelectSignature in _IFSelect:
_IFSelect.IFSelect_SelectSignature_swigregister(IFSelect_SelectSignature)

class IFSelect_SelectSignedShared(IFSelect_SelectExplore):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectSignedShared, defaulted for any level with a given Signature and text to match
        	:param matcher:
        	:type matcher: IFSelect_Signature
        	:param signtext:
        	:type signtext: char *
        	:param exact: default value is Standard_True
        	:type exact: bool
        	:param level: default value is 0
        	:type level: int
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectSignedShared_swiginit(self, _IFSelect.new_IFSelect_SelectSignedShared(*args))
    IsExact = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignedShared_IsExact)
    Signature = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignedShared_Signature)
    SignatureText = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignedShared_SignatureText)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectSignedShared_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectSignedShared

# Register IFSelect_SelectSignedShared in _IFSelect:
_IFSelect.IFSelect_SelectSignedShared_swigregister(IFSelect_SelectSignedShared)

class IFSelect_SelectSignedSharing(IFSelect_SelectExplore):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectSignedSharing, defaulted for any level with a given Signature and text to match
        	:param matcher:
        	:type matcher: IFSelect_Signature
        	:param signtext:
        	:type signtext: char *
        	:param exact: default value is Standard_True
        	:type exact: bool
        	:param level: default value is 0
        	:type level: int
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectSignedSharing_swiginit(self, _IFSelect.new_IFSelect_SelectSignedSharing(*args))
    IsExact = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignedSharing_IsExact)
    Signature = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignedSharing_Signature)
    SignatureText = _swig_new_instance_method(_IFSelect.IFSelect_SelectSignedSharing_SignatureText)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectSignedSharing_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectSignedSharing

# Register IFSelect_SelectSignedSharing in _IFSelect:
_IFSelect.IFSelect_SelectSignedSharing_swigregister(IFSelect_SelectSignedSharing)

class IFSelect_SelectUnknownEntities(IFSelect_SelectExtract):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectUnknownEntities
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectUnknownEntities_swiginit(self, _IFSelect.new_IFSelect_SelectUnknownEntities(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectUnknownEntities_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectUnknownEntities

# Register IFSelect_SelectUnknownEntities in _IFSelect:
_IFSelect.IFSelect_SelectUnknownEntities_swigregister(IFSelect_SelectUnknownEntities)

class IFSelect_SelectIncorrectEntities(IFSelect_SelectFlag):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectIncorrectEntities i.e. a SelectFlag('Incorrect')
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectIncorrectEntities_swiginit(self, _IFSelect.new_IFSelect_SelectIncorrectEntities(*args))


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectIncorrectEntities_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectIncorrectEntities

# Register IFSelect_SelectIncorrectEntities in _IFSelect:
_IFSelect.IFSelect_SelectIncorrectEntities_swigregister(IFSelect_SelectIncorrectEntities)

class IFSelect_SelectType(IFSelect_SelectAnyType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Creates a SelectType. Default is no filter
        	:rtype: None* Creates a SelectType for a given Type
        	:param atype:
        	:type atype: Standard_Type
        	:rtype: None
        """
        _IFSelect.IFSelect_SelectType_swiginit(self, _IFSelect.new_IFSelect_SelectType(*args))
    SetType = _swig_new_instance_method(_IFSelect.IFSelect_SelectType_SetType)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_SelectType_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _IFSelect.delete_IFSelect_SelectType

# Register IFSelect_SelectType in _IFSelect:
_IFSelect.IFSelect_SelectType_swigregister(IFSelect_SelectType)

class IFSelect_HSeqOfSelection(IFSelect_TSeqOfSelection, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _IFSelect.IFSelect_HSeqOfSelection_swiginit(self, _IFSelect.new_IFSelect_HSeqOfSelection(*args))
    Sequence = _swig_new_instance_method(_IFSelect.IFSelect_HSeqOfSelection_Sequence)
    Append = _swig_new_instance_method(_IFSelect.IFSelect_HSeqOfSelection_Append)
    ChangeSequence = _swig_new_instance_method(_IFSelect.IFSelect_HSeqOfSelection_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_IFSelect_HSeqOfSelection_DownCast(t)

    __swig_destroy__ = _IFSelect.delete_IFSelect_HSeqOfSelection

# Register IFSelect_HSeqOfSelection in _IFSelect:
_IFSelect.IFSelect_HSeqOfSelection_swigregister(IFSelect_HSeqOfSelection)



