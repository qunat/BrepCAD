# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TDataStd module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_tdatastd.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _TDataStd
else:
    import _TDataStd

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _TDataStd.SWIG_PyInstanceMethod_New
_swig_new_static_method = _TDataStd.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TDataStd.delete_SwigPyIterator
    value = _swig_new_instance_method(_TDataStd.SwigPyIterator_value)
    incr = _swig_new_instance_method(_TDataStd.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_TDataStd.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_TDataStd.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_TDataStd.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_TDataStd.SwigPyIterator_copy)
    next = _swig_new_instance_method(_TDataStd.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_TDataStd.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_TDataStd.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_TDataStd.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_TDataStd.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_TDataStd.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_TDataStd.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_TDataStd.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_TDataStd.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_TDataStd.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _TDataStd:
_TDataStd.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.TDF
TDataStd_SCALAR = _TDataStd.TDataStd_SCALAR
TDataStd_LENGTH = _TDataStd.TDataStd_LENGTH
TDataStd_ANGULAR = _TDataStd.TDataStd_ANGULAR
Handle_TDataStd_AsciiString_Create = _TDataStd.Handle_TDataStd_AsciiString_Create
Handle_TDataStd_AsciiString_DownCast = _TDataStd.Handle_TDataStd_AsciiString_DownCast
Handle_TDataStd_AsciiString_IsNull = _TDataStd.Handle_TDataStd_AsciiString_IsNull
Handle_TDataStd_BooleanArray_Create = _TDataStd.Handle_TDataStd_BooleanArray_Create
Handle_TDataStd_BooleanArray_DownCast = _TDataStd.Handle_TDataStd_BooleanArray_DownCast
Handle_TDataStd_BooleanArray_IsNull = _TDataStd.Handle_TDataStd_BooleanArray_IsNull
Handle_TDataStd_BooleanList_Create = _TDataStd.Handle_TDataStd_BooleanList_Create
Handle_TDataStd_BooleanList_DownCast = _TDataStd.Handle_TDataStd_BooleanList_DownCast
Handle_TDataStd_BooleanList_IsNull = _TDataStd.Handle_TDataStd_BooleanList_IsNull
Handle_TDataStd_ByteArray_Create = _TDataStd.Handle_TDataStd_ByteArray_Create
Handle_TDataStd_ByteArray_DownCast = _TDataStd.Handle_TDataStd_ByteArray_DownCast
Handle_TDataStd_ByteArray_IsNull = _TDataStd.Handle_TDataStd_ByteArray_IsNull
Handle_TDataStd_Comment_Create = _TDataStd.Handle_TDataStd_Comment_Create
Handle_TDataStd_Comment_DownCast = _TDataStd.Handle_TDataStd_Comment_DownCast
Handle_TDataStd_Comment_IsNull = _TDataStd.Handle_TDataStd_Comment_IsNull
Handle_TDataStd_Current_Create = _TDataStd.Handle_TDataStd_Current_Create
Handle_TDataStd_Current_DownCast = _TDataStd.Handle_TDataStd_Current_DownCast
Handle_TDataStd_Current_IsNull = _TDataStd.Handle_TDataStd_Current_IsNull
Handle_TDataStd_DeltaOnModificationOfByteArray_Create = _TDataStd.Handle_TDataStd_DeltaOnModificationOfByteArray_Create
Handle_TDataStd_DeltaOnModificationOfByteArray_DownCast = _TDataStd.Handle_TDataStd_DeltaOnModificationOfByteArray_DownCast
Handle_TDataStd_DeltaOnModificationOfByteArray_IsNull = _TDataStd.Handle_TDataStd_DeltaOnModificationOfByteArray_IsNull
Handle_TDataStd_DeltaOnModificationOfExtStringArray_Create = _TDataStd.Handle_TDataStd_DeltaOnModificationOfExtStringArray_Create
Handle_TDataStd_DeltaOnModificationOfExtStringArray_DownCast = _TDataStd.Handle_TDataStd_DeltaOnModificationOfExtStringArray_DownCast
Handle_TDataStd_DeltaOnModificationOfExtStringArray_IsNull = _TDataStd.Handle_TDataStd_DeltaOnModificationOfExtStringArray_IsNull
Handle_TDataStd_DeltaOnModificationOfIntArray_Create = _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntArray_Create
Handle_TDataStd_DeltaOnModificationOfIntArray_DownCast = _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntArray_DownCast
Handle_TDataStd_DeltaOnModificationOfIntArray_IsNull = _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntArray_IsNull
Handle_TDataStd_DeltaOnModificationOfIntPackedMap_Create = _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntPackedMap_Create
Handle_TDataStd_DeltaOnModificationOfIntPackedMap_DownCast = _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntPackedMap_DownCast
Handle_TDataStd_DeltaOnModificationOfIntPackedMap_IsNull = _TDataStd.Handle_TDataStd_DeltaOnModificationOfIntPackedMap_IsNull
Handle_TDataStd_DeltaOnModificationOfRealArray_Create = _TDataStd.Handle_TDataStd_DeltaOnModificationOfRealArray_Create
Handle_TDataStd_DeltaOnModificationOfRealArray_DownCast = _TDataStd.Handle_TDataStd_DeltaOnModificationOfRealArray_DownCast
Handle_TDataStd_DeltaOnModificationOfRealArray_IsNull = _TDataStd.Handle_TDataStd_DeltaOnModificationOfRealArray_IsNull
Handle_TDataStd_Directory_Create = _TDataStd.Handle_TDataStd_Directory_Create
Handle_TDataStd_Directory_DownCast = _TDataStd.Handle_TDataStd_Directory_DownCast
Handle_TDataStd_Directory_IsNull = _TDataStd.Handle_TDataStd_Directory_IsNull
Handle_TDataStd_Expression_Create = _TDataStd.Handle_TDataStd_Expression_Create
Handle_TDataStd_Expression_DownCast = _TDataStd.Handle_TDataStd_Expression_DownCast
Handle_TDataStd_Expression_IsNull = _TDataStd.Handle_TDataStd_Expression_IsNull
Handle_TDataStd_ExtStringArray_Create = _TDataStd.Handle_TDataStd_ExtStringArray_Create
Handle_TDataStd_ExtStringArray_DownCast = _TDataStd.Handle_TDataStd_ExtStringArray_DownCast
Handle_TDataStd_ExtStringArray_IsNull = _TDataStd.Handle_TDataStd_ExtStringArray_IsNull
Handle_TDataStd_ExtStringList_Create = _TDataStd.Handle_TDataStd_ExtStringList_Create
Handle_TDataStd_ExtStringList_DownCast = _TDataStd.Handle_TDataStd_ExtStringList_DownCast
Handle_TDataStd_ExtStringList_IsNull = _TDataStd.Handle_TDataStd_ExtStringList_IsNull
Handle_TDataStd_HDataMapOfStringByte_Create = _TDataStd.Handle_TDataStd_HDataMapOfStringByte_Create
Handle_TDataStd_HDataMapOfStringByte_DownCast = _TDataStd.Handle_TDataStd_HDataMapOfStringByte_DownCast
Handle_TDataStd_HDataMapOfStringByte_IsNull = _TDataStd.Handle_TDataStd_HDataMapOfStringByte_IsNull
Handle_TDataStd_HDataMapOfStringHArray1OfInteger_Create = _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfInteger_Create
Handle_TDataStd_HDataMapOfStringHArray1OfInteger_DownCast = _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfInteger_DownCast
Handle_TDataStd_HDataMapOfStringHArray1OfInteger_IsNull = _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfInteger_IsNull
Handle_TDataStd_HDataMapOfStringHArray1OfReal_Create = _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfReal_Create
Handle_TDataStd_HDataMapOfStringHArray1OfReal_DownCast = _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfReal_DownCast
Handle_TDataStd_HDataMapOfStringHArray1OfReal_IsNull = _TDataStd.Handle_TDataStd_HDataMapOfStringHArray1OfReal_IsNull
Handle_TDataStd_HDataMapOfStringInteger_Create = _TDataStd.Handle_TDataStd_HDataMapOfStringInteger_Create
Handle_TDataStd_HDataMapOfStringInteger_DownCast = _TDataStd.Handle_TDataStd_HDataMapOfStringInteger_DownCast
Handle_TDataStd_HDataMapOfStringInteger_IsNull = _TDataStd.Handle_TDataStd_HDataMapOfStringInteger_IsNull
Handle_TDataStd_HDataMapOfStringReal_Create = _TDataStd.Handle_TDataStd_HDataMapOfStringReal_Create
Handle_TDataStd_HDataMapOfStringReal_DownCast = _TDataStd.Handle_TDataStd_HDataMapOfStringReal_DownCast
Handle_TDataStd_HDataMapOfStringReal_IsNull = _TDataStd.Handle_TDataStd_HDataMapOfStringReal_IsNull
Handle_TDataStd_HDataMapOfStringString_Create = _TDataStd.Handle_TDataStd_HDataMapOfStringString_Create
Handle_TDataStd_HDataMapOfStringString_DownCast = _TDataStd.Handle_TDataStd_HDataMapOfStringString_DownCast
Handle_TDataStd_HDataMapOfStringString_IsNull = _TDataStd.Handle_TDataStd_HDataMapOfStringString_IsNull
Handle_TDataStd_IntPackedMap_Create = _TDataStd.Handle_TDataStd_IntPackedMap_Create
Handle_TDataStd_IntPackedMap_DownCast = _TDataStd.Handle_TDataStd_IntPackedMap_DownCast
Handle_TDataStd_IntPackedMap_IsNull = _TDataStd.Handle_TDataStd_IntPackedMap_IsNull
Handle_TDataStd_Integer_Create = _TDataStd.Handle_TDataStd_Integer_Create
Handle_TDataStd_Integer_DownCast = _TDataStd.Handle_TDataStd_Integer_DownCast
Handle_TDataStd_Integer_IsNull = _TDataStd.Handle_TDataStd_Integer_IsNull
Handle_TDataStd_IntegerArray_Create = _TDataStd.Handle_TDataStd_IntegerArray_Create
Handle_TDataStd_IntegerArray_DownCast = _TDataStd.Handle_TDataStd_IntegerArray_DownCast
Handle_TDataStd_IntegerArray_IsNull = _TDataStd.Handle_TDataStd_IntegerArray_IsNull
Handle_TDataStd_IntegerList_Create = _TDataStd.Handle_TDataStd_IntegerList_Create
Handle_TDataStd_IntegerList_DownCast = _TDataStd.Handle_TDataStd_IntegerList_DownCast
Handle_TDataStd_IntegerList_IsNull = _TDataStd.Handle_TDataStd_IntegerList_IsNull
Handle_TDataStd_Name_Create = _TDataStd.Handle_TDataStd_Name_Create
Handle_TDataStd_Name_DownCast = _TDataStd.Handle_TDataStd_Name_DownCast
Handle_TDataStd_Name_IsNull = _TDataStd.Handle_TDataStd_Name_IsNull
Handle_TDataStd_NamedData_Create = _TDataStd.Handle_TDataStd_NamedData_Create
Handle_TDataStd_NamedData_DownCast = _TDataStd.Handle_TDataStd_NamedData_DownCast
Handle_TDataStd_NamedData_IsNull = _TDataStd.Handle_TDataStd_NamedData_IsNull
Handle_TDataStd_NoteBook_Create = _TDataStd.Handle_TDataStd_NoteBook_Create
Handle_TDataStd_NoteBook_DownCast = _TDataStd.Handle_TDataStd_NoteBook_DownCast
Handle_TDataStd_NoteBook_IsNull = _TDataStd.Handle_TDataStd_NoteBook_IsNull
Handle_TDataStd_Real_Create = _TDataStd.Handle_TDataStd_Real_Create
Handle_TDataStd_Real_DownCast = _TDataStd.Handle_TDataStd_Real_DownCast
Handle_TDataStd_Real_IsNull = _TDataStd.Handle_TDataStd_Real_IsNull
Handle_TDataStd_RealArray_Create = _TDataStd.Handle_TDataStd_RealArray_Create
Handle_TDataStd_RealArray_DownCast = _TDataStd.Handle_TDataStd_RealArray_DownCast
Handle_TDataStd_RealArray_IsNull = _TDataStd.Handle_TDataStd_RealArray_IsNull
Handle_TDataStd_RealList_Create = _TDataStd.Handle_TDataStd_RealList_Create
Handle_TDataStd_RealList_DownCast = _TDataStd.Handle_TDataStd_RealList_DownCast
Handle_TDataStd_RealList_IsNull = _TDataStd.Handle_TDataStd_RealList_IsNull
Handle_TDataStd_ReferenceArray_Create = _TDataStd.Handle_TDataStd_ReferenceArray_Create
Handle_TDataStd_ReferenceArray_DownCast = _TDataStd.Handle_TDataStd_ReferenceArray_DownCast
Handle_TDataStd_ReferenceArray_IsNull = _TDataStd.Handle_TDataStd_ReferenceArray_IsNull
Handle_TDataStd_ReferenceList_Create = _TDataStd.Handle_TDataStd_ReferenceList_Create
Handle_TDataStd_ReferenceList_DownCast = _TDataStd.Handle_TDataStd_ReferenceList_DownCast
Handle_TDataStd_ReferenceList_IsNull = _TDataStd.Handle_TDataStd_ReferenceList_IsNull
Handle_TDataStd_Relation_Create = _TDataStd.Handle_TDataStd_Relation_Create
Handle_TDataStd_Relation_DownCast = _TDataStd.Handle_TDataStd_Relation_DownCast
Handle_TDataStd_Relation_IsNull = _TDataStd.Handle_TDataStd_Relation_IsNull
Handle_TDataStd_Tick_Create = _TDataStd.Handle_TDataStd_Tick_Create
Handle_TDataStd_Tick_DownCast = _TDataStd.Handle_TDataStd_Tick_DownCast
Handle_TDataStd_Tick_IsNull = _TDataStd.Handle_TDataStd_Tick_IsNull
Handle_TDataStd_TreeNode_Create = _TDataStd.Handle_TDataStd_TreeNode_Create
Handle_TDataStd_TreeNode_DownCast = _TDataStd.Handle_TDataStd_TreeNode_DownCast
Handle_TDataStd_TreeNode_IsNull = _TDataStd.Handle_TDataStd_TreeNode_IsNull
Handle_TDataStd_UAttribute_Create = _TDataStd.Handle_TDataStd_UAttribute_Create
Handle_TDataStd_UAttribute_DownCast = _TDataStd.Handle_TDataStd_UAttribute_DownCast
Handle_TDataStd_UAttribute_IsNull = _TDataStd.Handle_TDataStd_UAttribute_IsNull
Handle_TDataStd_Variable_Create = _TDataStd.Handle_TDataStd_Variable_Create
Handle_TDataStd_Variable_DownCast = _TDataStd.Handle_TDataStd_Variable_DownCast
Handle_TDataStd_Variable_IsNull = _TDataStd.Handle_TDataStd_Variable_IsNull
Handle_TDataStd_HLabelArray1_Create = _TDataStd.Handle_TDataStd_HLabelArray1_Create
Handle_TDataStd_HLabelArray1_DownCast = _TDataStd.Handle_TDataStd_HLabelArray1_DownCast
Handle_TDataStd_HLabelArray1_IsNull = _TDataStd.Handle_TDataStd_HLabelArray1_IsNull
class TDataStd_DataMapOfStringHArray1OfInteger(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_begin)
    end = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_end)
    cbegin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_cbegin)
    cend = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_cend)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringHArray1OfInteger(*args))
    Exchange = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Exchange)
    Assign = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Assign)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Set)
    ReSize = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_ReSize)
    Bind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Bind)
    Bound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Bound)
    IsBound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_IsBound)
    UnBind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_UnBind)
    Seek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Seek)
    Find = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Find)
    ChangeSeek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_ChangeFind)
    __call__ = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger___call__)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Clear)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringHArray1OfInteger
    Size = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_Size)

# Register TDataStd_DataMapOfStringHArray1OfInteger in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringHArray1OfInteger_swigregister(TDataStd_DataMapOfStringHArray1OfInteger)

class TDataStd_DataMapOfStringByte(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_begin)
    end = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_end)
    cbegin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_cbegin)
    cend = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_cend)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringByte_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringByte(*args))
    Exchange = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_Exchange)
    Assign = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_Assign)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_Set)
    ReSize = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_ReSize)
    Bind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_Bind)
    Bound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_Bound)
    IsBound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_IsBound)
    UnBind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_UnBind)
    Seek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_Seek)
    Find = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_Find)
    ChangeSeek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_ChangeFind)
    __call__ = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte___call__)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_Clear)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringByte
    Size = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringByte_Size)

# Register TDataStd_DataMapOfStringByte in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringByte_swigregister(TDataStd_DataMapOfStringByte)

class TDataStd_LabelArray1(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_begin)
    end = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_end)
    cbegin = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_cbegin)
    cend = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_cend)

    def __init__(self, *args):
        _TDataStd.TDataStd_LabelArray1_swiginit(self, _TDataStd.new_TDataStd_LabelArray1(*args))
    Init = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Init)
    Size = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Size)
    Length = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Length)
    IsEmpty = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_IsEmpty)
    Lower = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Lower)
    Upper = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Upper)
    IsDeletable = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_IsAllocated)
    Assign = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Assign)
    Move = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Move)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Set)
    First = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_First)
    ChangeFirst = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_ChangeFirst)
    Last = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Last)
    ChangeLast = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_ChangeLast)
    Value = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Value)
    ChangeValue = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_ChangeValue)
    __call__ = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1___call__)
    SetValue = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_SetValue)
    Resize = _swig_new_instance_method(_TDataStd.TDataStd_LabelArray1_Resize)
    __swig_destroy__ = _TDataStd.delete_TDataStd_LabelArray1

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TDataStd_LabelArray1 in _TDataStd:
_TDataStd.TDataStd_LabelArray1_swigregister(TDataStd_LabelArray1)

class TDataStd_DataMapOfStringString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_begin)
    end = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_end)
    cbegin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_cbegin)
    cend = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_cend)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringString_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringString(*args))
    Exchange = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_Exchange)
    Assign = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_Assign)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_Set)
    ReSize = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_ReSize)
    Bind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_Bind)
    Bound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_Bound)
    IsBound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_IsBound)
    UnBind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_UnBind)
    Seek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_Seek)
    Find = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_Find)
    ChangeSeek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_ChangeFind)
    __call__ = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString___call__)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_Clear)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringString
    Size = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringString_Size)

# Register TDataStd_DataMapOfStringString in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringString_swigregister(TDataStd_DataMapOfStringString)

class TDataStd_ListOfExtendedString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_begin)
    end = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_end)
    cbegin = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_cbegin)
    cend = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_cend)

    def __init__(self, *args):
        _TDataStd.TDataStd_ListOfExtendedString_swiginit(self, _TDataStd.new_TDataStd_ListOfExtendedString(*args))
    Size = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_Size)
    Assign = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_Assign)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_Set)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_Clear)
    First = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_First)
    Last = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_Last)
    Append = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_Append)
    Prepend = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_Prepend)
    RemoveFirst = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_RemoveFirst)
    Remove = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_Remove)
    InsertBefore = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_InsertAfter)
    Reverse = _swig_new_instance_method(_TDataStd.TDataStd_ListOfExtendedString_Reverse)
    __swig_destroy__ = _TDataStd.delete_TDataStd_ListOfExtendedString

# Register TDataStd_ListOfExtendedString in _TDataStd:
_TDataStd.TDataStd_ListOfExtendedString_swigregister(TDataStd_ListOfExtendedString)

class TDataStd_ListIteratorOfListOfExtendedString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TDataStd.TDataStd_ListIteratorOfListOfExtendedString_swiginit(self, _TDataStd.new_TDataStd_ListIteratorOfListOfExtendedString(*args))
    More = _swig_new_instance_method(_TDataStd.TDataStd_ListIteratorOfListOfExtendedString_More)
    Next = _swig_new_instance_method(_TDataStd.TDataStd_ListIteratorOfListOfExtendedString_Next)
    Value = _swig_new_instance_method(_TDataStd.TDataStd_ListIteratorOfListOfExtendedString_Value)
    ChangeValue = _swig_new_instance_method(_TDataStd.TDataStd_ListIteratorOfListOfExtendedString_ChangeValue)
    __swig_destroy__ = _TDataStd.delete_TDataStd_ListIteratorOfListOfExtendedString

# Register TDataStd_ListIteratorOfListOfExtendedString in _TDataStd:
_TDataStd.TDataStd_ListIteratorOfListOfExtendedString_swigregister(TDataStd_ListIteratorOfListOfExtendedString)

class TDataStd_ListOfByte(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_begin)
    end = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_end)
    cbegin = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_cbegin)
    cend = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_cend)

    def __init__(self, *args):
        _TDataStd.TDataStd_ListOfByte_swiginit(self, _TDataStd.new_TDataStd_ListOfByte(*args))
    Size = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_Size)
    Assign = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_Assign)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_Set)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_Clear)
    First = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_First)
    Last = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_Last)
    Append = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_Append)
    Prepend = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_Prepend)
    RemoveFirst = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_RemoveFirst)
    Remove = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_Remove)
    InsertBefore = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_InsertAfter)
    Reverse = _swig_new_instance_method(_TDataStd.TDataStd_ListOfByte_Reverse)
    __swig_destroy__ = _TDataStd.delete_TDataStd_ListOfByte

# Register TDataStd_ListOfByte in _TDataStd:
_TDataStd.TDataStd_ListOfByte_swigregister(TDataStd_ListOfByte)

class TDataStd_ListIteratorOfListOfByte(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TDataStd.TDataStd_ListIteratorOfListOfByte_swiginit(self, _TDataStd.new_TDataStd_ListIteratorOfListOfByte(*args))
    More = _swig_new_instance_method(_TDataStd.TDataStd_ListIteratorOfListOfByte_More)
    Next = _swig_new_instance_method(_TDataStd.TDataStd_ListIteratorOfListOfByte_Next)
    Value = _swig_new_instance_method(_TDataStd.TDataStd_ListIteratorOfListOfByte_Value)
    ChangeValue = _swig_new_instance_method(_TDataStd.TDataStd_ListIteratorOfListOfByte_ChangeValue)
    __swig_destroy__ = _TDataStd.delete_TDataStd_ListIteratorOfListOfByte

# Register TDataStd_ListIteratorOfListOfByte in _TDataStd:
_TDataStd.TDataStd_ListIteratorOfListOfByte_swigregister(TDataStd_ListIteratorOfListOfByte)

class TDataStd_DataMapOfStringHArray1OfReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_begin)
    end = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_end)
    cbegin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_cbegin)
    cend = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_cend)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringHArray1OfReal_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringHArray1OfReal(*args))
    Exchange = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Exchange)
    Assign = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Assign)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Set)
    ReSize = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_ReSize)
    Bind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Bind)
    Bound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Bound)
    IsBound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_IsBound)
    UnBind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_UnBind)
    Seek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Seek)
    Find = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Find)
    ChangeSeek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_ChangeFind)
    __call__ = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal___call__)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Clear)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringHArray1OfReal
    Size = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_Size)

# Register TDataStd_DataMapOfStringHArray1OfReal in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringHArray1OfReal_swigregister(TDataStd_DataMapOfStringHArray1OfReal)

class TDataStd_DataMapOfStringReal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_begin)
    end = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_end)
    cbegin = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_cbegin)
    cend = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_cend)

    def __init__(self, *args):
        _TDataStd.TDataStd_DataMapOfStringReal_swiginit(self, _TDataStd.new_TDataStd_DataMapOfStringReal(*args))
    Exchange = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_Exchange)
    Assign = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_Assign)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_Set)
    ReSize = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_ReSize)
    Bind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_Bind)
    Bound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_Bound)
    IsBound = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_IsBound)
    UnBind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_UnBind)
    Seek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_Seek)
    Find = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_Find)
    ChangeSeek = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_ChangeSeek)
    ChangeFind = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_ChangeFind)
    __call__ = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal___call__)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_Clear)
    __swig_destroy__ = _TDataStd.delete_TDataStd_DataMapOfStringReal
    Size = _swig_new_instance_method(_TDataStd.TDataStd_DataMapOfStringReal_Size)

# Register TDataStd_DataMapOfStringReal in _TDataStd:
_TDataStd.TDataStd_DataMapOfStringReal_swigregister(TDataStd_DataMapOfStringReal)

class tdatastd(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    IDList = _swig_new_static_method(_TDataStd.tdatastd_IDList)
    Print = _swig_new_static_method(_TDataStd.tdatastd_Print)

    __repr__ = _dumps_object


    def __init__(self):
        _TDataStd.tdatastd_swiginit(self, _TDataStd.new_tdatastd())
    __swig_destroy__ = _TDataStd.delete_tdatastd

# Register tdatastd in _TDataStd:
_TDataStd.tdatastd_swigregister(tdatastd)
tdatastd_IDList = _TDataStd.tdatastd_IDList
tdatastd_Print = _TDataStd.tdatastd_Print

class TDataStd_AsciiString(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_AsciiString_DumpToString)
    Get = _swig_new_instance_method(_TDataStd.TDataStd_AsciiString_Get)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_AsciiString_GetID)
    IsEmpty = _swig_new_instance_method(_TDataStd.TDataStd_AsciiString_IsEmpty)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_AsciiString_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_AsciiString_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_AsciiString_swiginit(self, _TDataStd.new_TDataStd_AsciiString(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_AsciiString_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_AsciiString

# Register TDataStd_AsciiString in _TDataStd:
_TDataStd.TDataStd_AsciiString_swigregister(TDataStd_AsciiString)
TDataStd_AsciiString_GetID = _TDataStd.TDataStd_AsciiString_GetID

class TDataStd_BooleanArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_DumpToString)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_BooleanArray_GetID)
    Init = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_Init)
    InternalArray = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_InternalArray)
    Length = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_Length)
    Lower = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_Lower)
    Set = _swig_new_static_method(_TDataStd.TDataStd_BooleanArray_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_SetID)
    SetInternalArray = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_SetInternalArray)
    SetValue = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_SetValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_BooleanArray_swiginit(self, _TDataStd.new_TDataStd_BooleanArray(*args))
    Upper = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_Upper)
    Value = _swig_new_instance_method(_TDataStd.TDataStd_BooleanArray_Value)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_BooleanArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_BooleanArray

# Register TDataStd_BooleanArray in _TDataStd:
_TDataStd.TDataStd_BooleanArray_swigregister(TDataStd_BooleanArray)
TDataStd_BooleanArray_GetID = _TDataStd.TDataStd_BooleanArray_GetID
TDataStd_BooleanArray_Set = _TDataStd.TDataStd_BooleanArray_Set

class TDataStd_BooleanList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Append = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_Append)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_Clear)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_DumpToString)
    Extent = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_Extent)
    First = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_First)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_BooleanList_GetID)
    InsertAfter = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_InsertAfter)
    InsertBefore = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_InsertBefore)
    IsEmpty = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_IsEmpty)
    Last = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_Last)
    List = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_List)
    Prepend = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_Prepend)
    Remove = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_Remove)
    Set = _swig_new_static_method(_TDataStd.TDataStd_BooleanList_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_BooleanList_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_BooleanList_swiginit(self, _TDataStd.new_TDataStd_BooleanList(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_BooleanList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_BooleanList

# Register TDataStd_BooleanList in _TDataStd:
_TDataStd.TDataStd_BooleanList_swigregister(TDataStd_BooleanList)
TDataStd_BooleanList_GetID = _TDataStd.TDataStd_BooleanList_GetID
TDataStd_BooleanList_Set = _TDataStd.TDataStd_BooleanList_Set

class TDataStd_ByteArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeArray = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_ChangeArray)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_DumpToString)
    GetDelta = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_GetDelta)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_ByteArray_GetID)
    Init = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_Init)
    InternalArray = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_InternalArray)
    Length = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_Length)
    Lower = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_Lower)
    Set = _swig_new_static_method(_TDataStd.TDataStd_ByteArray_Set)
    SetDelta = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_SetDelta)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_SetID)
    SetValue = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_SetValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_ByteArray_swiginit(self, _TDataStd.new_TDataStd_ByteArray(*args))
    Upper = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_Upper)
    Value = _swig_new_instance_method(_TDataStd.TDataStd_ByteArray_Value)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ByteArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ByteArray

# Register TDataStd_ByteArray in _TDataStd:
_TDataStd.TDataStd_ByteArray_swigregister(TDataStd_ByteArray)
TDataStd_ByteArray_GetID = _TDataStd.TDataStd_ByteArray_GetID
TDataStd_ByteArray_Set = _TDataStd.TDataStd_ByteArray_Set

class TDataStd_ChildNodeIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Initialize = _swig_new_instance_method(_TDataStd.TDataStd_ChildNodeIterator_Initialize)
    More = _swig_new_instance_method(_TDataStd.TDataStd_ChildNodeIterator_More)
    Next = _swig_new_instance_method(_TDataStd.TDataStd_ChildNodeIterator_Next)
    NextBrother = _swig_new_instance_method(_TDataStd.TDataStd_ChildNodeIterator_NextBrother)

    def __init__(self, *args):
        r"""
        * Creates an empty iterator.
        	:rtype: None* Iterates on the ChildStepren of the given Step. If <allLevels> option is set to true, it explores not only the first, but all the sub Step levels.
        	:param aTreeNode:
        	:type aTreeNode: TDataStd_TreeNode
        	:param allLevels: default value is Standard_False
        	:type allLevels: bool
        	:rtype: None
        """
        _TDataStd.TDataStd_ChildNodeIterator_swiginit(self, _TDataStd.new_TDataStd_ChildNodeIterator(*args))
    Value = _swig_new_instance_method(_TDataStd.TDataStd_ChildNodeIterator_Value)

    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ChildNodeIterator

# Register TDataStd_ChildNodeIterator in _TDataStd:
_TDataStd.TDataStd_ChildNodeIterator_swigregister(TDataStd_ChildNodeIterator)

class TDataStd_Comment(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Comment_DumpToString)
    Get = _swig_new_instance_method(_TDataStd.TDataStd_Comment_Get)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Comment_GetID)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_Comment_Set)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Comment_swiginit(self, _TDataStd.new_TDataStd_Comment(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Comment_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Comment

# Register TDataStd_Comment in _TDataStd:
_TDataStd.TDataStd_Comment_swigregister(TDataStd_Comment)
TDataStd_Comment_GetID = _TDataStd.TDataStd_Comment_GetID

class TDataStd_Current(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Current_DumpToString)
    Get = _swig_new_static_method(_TDataStd.TDataStd_Current_Get)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Current_GetID)
    GetLabel = _swig_new_instance_method(_TDataStd.TDataStd_Current_GetLabel)
    Has = _swig_new_static_method(_TDataStd.TDataStd_Current_Has)
    Set = _swig_new_static_method(_TDataStd.TDataStd_Current_Set)
    SetLabel = _swig_new_instance_method(_TDataStd.TDataStd_Current_SetLabel)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Current_swiginit(self, _TDataStd.new_TDataStd_Current(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Current_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Current

# Register TDataStd_Current in _TDataStd:
_TDataStd.TDataStd_Current_swigregister(TDataStd_Current)
TDataStd_Current_Get = _TDataStd.TDataStd_Current_Get
TDataStd_Current_GetID = _TDataStd.TDataStd_Current_GetID
TDataStd_Current_Has = _TDataStd.TDataStd_Current_Has
TDataStd_Current_Set = _TDataStd.TDataStd_Current_Set

class TDataStd_DeltaOnModificationOfByteArray(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Initializes a TDF_DeltaOnModification.
        	:param Arr:
        	:type Arr: TDataStd_ByteArray
        	:rtype: None
        """
        _TDataStd.TDataStd_DeltaOnModificationOfByteArray_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfByteArray(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfByteArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfByteArray

# Register TDataStd_DeltaOnModificationOfByteArray in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfByteArray_swigregister(TDataStd_DeltaOnModificationOfByteArray)

class TDataStd_DeltaOnModificationOfExtStringArray(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Initializes a TDF_DeltaOnModification.
        	:param Arr:
        	:type Arr: TDataStd_ExtStringArray
        	:rtype: None
        """
        _TDataStd.TDataStd_DeltaOnModificationOfExtStringArray_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfExtStringArray(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfExtStringArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfExtStringArray

# Register TDataStd_DeltaOnModificationOfExtStringArray in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfExtStringArray_swigregister(TDataStd_DeltaOnModificationOfExtStringArray)

class TDataStd_DeltaOnModificationOfIntArray(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Initializes a TDF_DeltaOnModification.
        	:param Arr:
        	:type Arr: TDataStd_IntegerArray
        	:rtype: None
        """
        _TDataStd.TDataStd_DeltaOnModificationOfIntArray_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfIntArray(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfIntArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfIntArray

# Register TDataStd_DeltaOnModificationOfIntArray in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfIntArray_swigregister(TDataStd_DeltaOnModificationOfIntArray)

class TDataStd_DeltaOnModificationOfIntPackedMap(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Initializes a TDF_DeltaOnModification.
        	:param Arr:
        	:type Arr: TDataStd_IntPackedMap
        	:rtype: None
        """
        _TDataStd.TDataStd_DeltaOnModificationOfIntPackedMap_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfIntPackedMap(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfIntPackedMap_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfIntPackedMap

# Register TDataStd_DeltaOnModificationOfIntPackedMap in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfIntPackedMap_swigregister(TDataStd_DeltaOnModificationOfIntPackedMap)

class TDataStd_DeltaOnModificationOfRealArray(OCC.Core.TDF.TDF_DeltaOnModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Initializes a TDF_DeltaOnModification.
        	:param Arr:
        	:type Arr: TDataStd_RealArray
        	:rtype: None
        """
        _TDataStd.TDataStd_DeltaOnModificationOfRealArray_swiginit(self, _TDataStd.new_TDataStd_DeltaOnModificationOfRealArray(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_DeltaOnModificationOfRealArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_DeltaOnModificationOfRealArray

# Register TDataStd_DeltaOnModificationOfRealArray in _TDataStd:
_TDataStd.TDataStd_DeltaOnModificationOfRealArray_swigregister(TDataStd_DeltaOnModificationOfRealArray)

class TDataStd_Directory(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AddDirectory = _swig_new_static_method(_TDataStd.TDataStd_Directory_AddDirectory)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Directory_DumpToString)
    Find = _swig_new_static_method(_TDataStd.TDataStd_Directory_Find)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Directory_GetID)
    MakeObjectLabel = _swig_new_static_method(_TDataStd.TDataStd_Directory_MakeObjectLabel)
    New = _swig_new_static_method(_TDataStd.TDataStd_Directory_New)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Directory_swiginit(self, _TDataStd.new_TDataStd_Directory(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Directory_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Directory

# Register TDataStd_Directory in _TDataStd:
_TDataStd.TDataStd_Directory_swigregister(TDataStd_Directory)
TDataStd_Directory_AddDirectory = _TDataStd.TDataStd_Directory_AddDirectory
TDataStd_Directory_Find = _TDataStd.TDataStd_Directory_Find
TDataStd_Directory_GetID = _TDataStd.TDataStd_Directory_GetID
TDataStd_Directory_MakeObjectLabel = _TDataStd.TDataStd_Directory_MakeObjectLabel
TDataStd_Directory_New = _TDataStd.TDataStd_Directory_New

class TDataStd_Expression(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Expression_DumpToString)
    GetExpression = _swig_new_instance_method(_TDataStd.TDataStd_Expression_GetExpression)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Expression_GetID)
    GetVariables = _swig_new_instance_method(_TDataStd.TDataStd_Expression_GetVariables)
    Name = _swig_new_instance_method(_TDataStd.TDataStd_Expression_Name)
    Set = _swig_new_static_method(_TDataStd.TDataStd_Expression_Set)
    SetExpression = _swig_new_instance_method(_TDataStd.TDataStd_Expression_SetExpression)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Expression_swiginit(self, _TDataStd.new_TDataStd_Expression(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Expression_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Expression

# Register TDataStd_Expression in _TDataStd:
_TDataStd.TDataStd_Expression_swigregister(TDataStd_Expression)
TDataStd_Expression_GetID = _TDataStd.TDataStd_Expression_GetID
TDataStd_Expression_Set = _TDataStd.TDataStd_Expression_Set

class TDataStd_ExtStringArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Array = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_Array)
    ChangeArray = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_ChangeArray)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_DumpToString)
    GetDelta = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_GetDelta)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_ExtStringArray_GetID)
    Init = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_Init)
    Length = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_Length)
    Lower = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_Lower)
    Set = _swig_new_static_method(_TDataStd.TDataStd_ExtStringArray_Set)
    SetDelta = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_SetDelta)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_SetID)
    SetValue = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_SetValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_ExtStringArray_swiginit(self, _TDataStd.new_TDataStd_ExtStringArray(*args))
    Upper = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_Upper)
    Value = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringArray_Value)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ExtStringArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ExtStringArray

# Register TDataStd_ExtStringArray in _TDataStd:
_TDataStd.TDataStd_ExtStringArray_swigregister(TDataStd_ExtStringArray)
TDataStd_ExtStringArray_GetID = _TDataStd.TDataStd_ExtStringArray_GetID
TDataStd_ExtStringArray_Set = _TDataStd.TDataStd_ExtStringArray_Set

class TDataStd_ExtStringList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Append = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_Append)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_Clear)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_DumpToString)
    Extent = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_Extent)
    First = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_First)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_ExtStringList_GetID)
    InsertAfter = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_InsertAfter)
    InsertBefore = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_InsertBefore)
    IsEmpty = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_IsEmpty)
    Last = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_Last)
    List = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_List)
    Prepend = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_Prepend)
    Remove = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_Remove)
    Set = _swig_new_static_method(_TDataStd.TDataStd_ExtStringList_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_ExtStringList_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_ExtStringList_swiginit(self, _TDataStd.new_TDataStd_ExtStringList(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ExtStringList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ExtStringList

# Register TDataStd_ExtStringList in _TDataStd:
_TDataStd.TDataStd_ExtStringList_swigregister(TDataStd_ExtStringList)
TDataStd_ExtStringList_GetID = _TDataStd.TDataStd_ExtStringList_GetID
TDataStd_ExtStringList_Set = _TDataStd.TDataStd_ExtStringList_Set

class TDataStd_HDataMapOfStringByte(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeMap = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringByte_ChangeMap)
    Map = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringByte_Map)

    def __init__(self, *args):
        r"""
        :param NbBuckets: default value is 1
        	:type NbBuckets: int
        	:rtype: None:param theOther:
        	:type theOther: TDataStd_DataMapOfStringByte
        	:rtype: None
        """
        _TDataStd.TDataStd_HDataMapOfStringByte_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringByte(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringByte_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringByte

# Register TDataStd_HDataMapOfStringByte in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringByte_swigregister(TDataStd_HDataMapOfStringByte)

class TDataStd_HDataMapOfStringHArray1OfInteger(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeMap = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringHArray1OfInteger_ChangeMap)
    Map = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringHArray1OfInteger_Map)

    def __init__(self, *args):
        r"""
        :param NbBuckets: default value is 1
        	:type NbBuckets: int
        	:rtype: None:param theOther:
        	:type theOther: TDataStd_DataMapOfStringHArray1OfInteger
        	:rtype: None
        """
        _TDataStd.TDataStd_HDataMapOfStringHArray1OfInteger_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringHArray1OfInteger(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringHArray1OfInteger_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringHArray1OfInteger

# Register TDataStd_HDataMapOfStringHArray1OfInteger in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringHArray1OfInteger_swigregister(TDataStd_HDataMapOfStringHArray1OfInteger)

class TDataStd_HDataMapOfStringHArray1OfReal(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeMap = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringHArray1OfReal_ChangeMap)
    Map = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringHArray1OfReal_Map)

    def __init__(self, *args):
        r"""
        :param NbBuckets: default value is 1
        	:type NbBuckets: int
        	:rtype: None:param theOther:
        	:type theOther: TDataStd_DataMapOfStringHArray1OfReal
        	:rtype: None
        """
        _TDataStd.TDataStd_HDataMapOfStringHArray1OfReal_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringHArray1OfReal(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringHArray1OfReal_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringHArray1OfReal

# Register TDataStd_HDataMapOfStringHArray1OfReal in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringHArray1OfReal_swigregister(TDataStd_HDataMapOfStringHArray1OfReal)

class TDataStd_HDataMapOfStringInteger(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeMap = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringInteger_ChangeMap)
    Map = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringInteger_Map)

    def __init__(self, *args):
        r"""
        :param NbBuckets: default value is 1
        	:type NbBuckets: int
        	:rtype: None:param theOther:
        	:type theOther: TColStd_DataMapOfStringInteger
        	:rtype: None
        """
        _TDataStd.TDataStd_HDataMapOfStringInteger_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringInteger(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringInteger_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringInteger

# Register TDataStd_HDataMapOfStringInteger in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringInteger_swigregister(TDataStd_HDataMapOfStringInteger)

class TDataStd_HDataMapOfStringReal(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeMap = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringReal_ChangeMap)
    Map = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringReal_Map)

    def __init__(self, *args):
        r"""
        :param NbBuckets: default value is 1
        	:type NbBuckets: int
        	:rtype: None:param theOther:
        	:type theOther: TDataStd_DataMapOfStringReal
        	:rtype: None
        """
        _TDataStd.TDataStd_HDataMapOfStringReal_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringReal(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringReal_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringReal

# Register TDataStd_HDataMapOfStringReal in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringReal_swigregister(TDataStd_HDataMapOfStringReal)

class TDataStd_HDataMapOfStringString(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeMap = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringString_ChangeMap)
    Map = _swig_new_instance_method(_TDataStd.TDataStd_HDataMapOfStringString_Map)

    def __init__(self, *args):
        r"""
        :param NbBuckets: default value is 1
        	:type NbBuckets: int
        	:rtype: None:param theOther:
        	:type theOther: TDataStd_DataMapOfStringString
        	:rtype: None
        """
        _TDataStd.TDataStd_HDataMapOfStringString_swiginit(self, _TDataStd.new_TDataStd_HDataMapOfStringString(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HDataMapOfStringString_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_HDataMapOfStringString

# Register TDataStd_HDataMapOfStringString in _TDataStd:
_TDataStd.TDataStd_HDataMapOfStringString_swigregister(TDataStd_HDataMapOfStringString)

class TDataStd_IntPackedMap(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Add = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_Add)
    ChangeMap = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_ChangeMap)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_Clear)
    Contains = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_Contains)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_DumpToString)
    Extent = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_Extent)
    GetDelta = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_GetDelta)
    GetHMap = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_GetHMap)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_IntPackedMap_GetID)
    GetMap = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_GetMap)
    IsEmpty = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_IsEmpty)
    Remove = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_Remove)
    Set = _swig_new_static_method(_TDataStd.TDataStd_IntPackedMap_Set)
    SetDelta = _swig_new_instance_method(_TDataStd.TDataStd_IntPackedMap_SetDelta)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_IntPackedMap_swiginit(self, _TDataStd.new_TDataStd_IntPackedMap(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_IntPackedMap_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_IntPackedMap

# Register TDataStd_IntPackedMap in _TDataStd:
_TDataStd.TDataStd_IntPackedMap_swigregister(TDataStd_IntPackedMap)
TDataStd_IntPackedMap_GetID = _TDataStd.TDataStd_IntPackedMap_GetID
TDataStd_IntPackedMap_Set = _TDataStd.TDataStd_IntPackedMap_Set

class TDataStd_Integer(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Integer_DumpToString)
    Get = _swig_new_instance_method(_TDataStd.TDataStd_Integer_Get)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Integer_GetID)
    IsCaptured = _swig_new_instance_method(_TDataStd.TDataStd_Integer_IsCaptured)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_Integer_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_Integer_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Integer_swiginit(self, _TDataStd.new_TDataStd_Integer(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Integer_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Integer

# Register TDataStd_Integer in _TDataStd:
_TDataStd.TDataStd_Integer_swigregister(TDataStd_Integer)
TDataStd_Integer_GetID = _TDataStd.TDataStd_Integer_GetID

class TDataStd_IntegerArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Array = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_Array)
    ChangeArray = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_ChangeArray)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_DumpToString)
    GetDelta = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_GetDelta)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_IntegerArray_GetID)
    Init = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_Init)
    Length = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_Length)
    Lower = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_Lower)
    Set = _swig_new_static_method(_TDataStd.TDataStd_IntegerArray_Set)
    SetDelta = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_SetDelta)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_SetID)
    SetValue = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_SetValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_IntegerArray_swiginit(self, _TDataStd.new_TDataStd_IntegerArray(*args))
    Upper = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_Upper)
    Value = _swig_new_instance_method(_TDataStd.TDataStd_IntegerArray_Value)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_IntegerArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_IntegerArray

# Register TDataStd_IntegerArray in _TDataStd:
_TDataStd.TDataStd_IntegerArray_swigregister(TDataStd_IntegerArray)
TDataStd_IntegerArray_GetID = _TDataStd.TDataStd_IntegerArray_GetID
TDataStd_IntegerArray_Set = _TDataStd.TDataStd_IntegerArray_Set

class TDataStd_IntegerList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Append = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_Append)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_Clear)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_DumpToString)
    Extent = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_Extent)
    First = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_First)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_IntegerList_GetID)
    InsertAfter = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_InsertAfter)
    InsertAfterByIndex = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_InsertAfterByIndex)
    InsertBefore = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_InsertBefore)
    InsertBeforeByIndex = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_InsertBeforeByIndex)
    IsEmpty = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_IsEmpty)
    Last = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_Last)
    List = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_List)
    Prepend = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_Prepend)
    Remove = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_Remove)
    RemoveByIndex = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_RemoveByIndex)
    Set = _swig_new_static_method(_TDataStd.TDataStd_IntegerList_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_IntegerList_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_IntegerList_swiginit(self, _TDataStd.new_TDataStd_IntegerList(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_IntegerList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_IntegerList

# Register TDataStd_IntegerList in _TDataStd:
_TDataStd.TDataStd_IntegerList_swigregister(TDataStd_IntegerList)
TDataStd_IntegerList_GetID = _TDataStd.TDataStd_IntegerList_GetID
TDataStd_IntegerList_Set = _TDataStd.TDataStd_IntegerList_Set

class TDataStd_Name(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Name_DumpToString)
    Get = _swig_new_instance_method(_TDataStd.TDataStd_Name_Get)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Name_GetID)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_Name_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_Name_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Name_swiginit(self, _TDataStd.new_TDataStd_Name(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Name_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Name

# Register TDataStd_Name in _TDataStd:
_TDataStd.TDataStd_Name_swigregister(TDataStd_Name)
TDataStd_Name_GetID = _TDataStd.TDataStd_Name_GetID

class TDataStd_NamedData(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ChangeArraysOfIntegers = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_ChangeArraysOfIntegers)
    ChangeArraysOfReals = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_ChangeArraysOfReals)
    ChangeBytes = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_ChangeBytes)
    ChangeIntegers = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_ChangeIntegers)
    ChangeReals = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_ChangeReals)
    ChangeStrings = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_ChangeStrings)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_DumpToString)
    GetArrayOfIntegers = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetArrayOfIntegers)
    GetArrayOfReals = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetArrayOfReals)
    GetArraysOfIntegersContainer = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetArraysOfIntegersContainer)
    GetArraysOfRealsContainer = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetArraysOfRealsContainer)
    GetByte = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetByte)
    GetBytesContainer = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetBytesContainer)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_NamedData_GetID)
    GetInteger = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetInteger)
    GetIntegersContainer = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetIntegersContainer)
    GetReal = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetReal)
    GetRealsContainer = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetRealsContainer)
    GetString = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetString)
    GetStringsContainer = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_GetStringsContainer)
    HasArrayOfIntegers = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasArrayOfIntegers)
    HasArrayOfReals = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasArrayOfReals)
    HasArraysOfIntegers = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasArraysOfIntegers)
    HasArraysOfReals = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasArraysOfReals)
    HasByte = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasByte)
    HasBytes = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasBytes)
    HasInteger = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasInteger)
    HasIntegers = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasIntegers)
    HasReal = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasReal)
    HasReals = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasReals)
    HasString = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasString)
    HasStrings = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_HasStrings)
    Set = _swig_new_static_method(_TDataStd.TDataStd_NamedData_Set)
    SetArrayOfIntegers = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_SetArrayOfIntegers)
    SetArrayOfReals = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_SetArrayOfReals)
    SetByte = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_SetByte)
    SetInteger = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_SetInteger)
    SetReal = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_SetReal)
    SetString = _swig_new_instance_method(_TDataStd.TDataStd_NamedData_SetString)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_NamedData_swiginit(self, _TDataStd.new_TDataStd_NamedData(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_NamedData_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_NamedData

# Register TDataStd_NamedData in _TDataStd:
_TDataStd.TDataStd_NamedData_swigregister(TDataStd_NamedData)
TDataStd_NamedData_GetID = _TDataStd.TDataStd_NamedData_GetID
TDataStd_NamedData_Set = _TDataStd.TDataStd_NamedData_Set

class TDataStd_NoteBook(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Append = _swig_new_instance_method(_TDataStd.TDataStd_NoteBook_Append)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_NoteBook_DumpToString)
    Find = _swig_new_static_method(_TDataStd.TDataStd_NoteBook_Find)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_NoteBook_GetID)
    New = _swig_new_static_method(_TDataStd.TDataStd_NoteBook_New)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_NoteBook_swiginit(self, _TDataStd.new_TDataStd_NoteBook(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_NoteBook_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_NoteBook

# Register TDataStd_NoteBook in _TDataStd:
_TDataStd.TDataStd_NoteBook_swigregister(TDataStd_NoteBook)
TDataStd_NoteBook_Find = _TDataStd.TDataStd_NoteBook_Find
TDataStd_NoteBook_GetID = _TDataStd.TDataStd_NoteBook_GetID
TDataStd_NoteBook_New = _TDataStd.TDataStd_NoteBook_New

class TDataStd_Real(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Real_DumpToString)
    Get = _swig_new_instance_method(_TDataStd.TDataStd_Real_Get)
    GetDimension = _swig_new_instance_method(_TDataStd.TDataStd_Real_GetDimension)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Real_GetID)
    IsCaptured = _swig_new_instance_method(_TDataStd.TDataStd_Real_IsCaptured)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_Real_Set)
    SetDimension = _swig_new_instance_method(_TDataStd.TDataStd_Real_SetDimension)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_Real_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Real_swiginit(self, _TDataStd.new_TDataStd_Real(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Real_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Real

# Register TDataStd_Real in _TDataStd:
_TDataStd.TDataStd_Real_swigregister(TDataStd_Real)
TDataStd_Real_GetID = _TDataStd.TDataStd_Real_GetID

class TDataStd_RealArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Array = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_Array)
    ChangeArray = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_ChangeArray)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_DumpToString)
    GetDelta = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_GetDelta)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_RealArray_GetID)
    Init = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_Init)
    Length = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_Length)
    Lower = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_Lower)
    Set = _swig_new_static_method(_TDataStd.TDataStd_RealArray_Set)
    SetDelta = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_SetDelta)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_SetID)
    SetValue = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_SetValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_RealArray_swiginit(self, _TDataStd.new_TDataStd_RealArray(*args))
    Upper = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_Upper)
    Value = _swig_new_instance_method(_TDataStd.TDataStd_RealArray_Value)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_RealArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_RealArray

# Register TDataStd_RealArray in _TDataStd:
_TDataStd.TDataStd_RealArray_swigregister(TDataStd_RealArray)
TDataStd_RealArray_GetID = _TDataStd.TDataStd_RealArray_GetID
TDataStd_RealArray_Set = _TDataStd.TDataStd_RealArray_Set

class TDataStd_RealList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Append = _swig_new_instance_method(_TDataStd.TDataStd_RealList_Append)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_RealList_Clear)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_RealList_DumpToString)
    Extent = _swig_new_instance_method(_TDataStd.TDataStd_RealList_Extent)
    First = _swig_new_instance_method(_TDataStd.TDataStd_RealList_First)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_RealList_GetID)
    InsertAfter = _swig_new_instance_method(_TDataStd.TDataStd_RealList_InsertAfter)
    InsertAfterByIndex = _swig_new_instance_method(_TDataStd.TDataStd_RealList_InsertAfterByIndex)
    InsertBefore = _swig_new_instance_method(_TDataStd.TDataStd_RealList_InsertBefore)
    InsertBeforeByIndex = _swig_new_instance_method(_TDataStd.TDataStd_RealList_InsertBeforeByIndex)
    IsEmpty = _swig_new_instance_method(_TDataStd.TDataStd_RealList_IsEmpty)
    Last = _swig_new_instance_method(_TDataStd.TDataStd_RealList_Last)
    List = _swig_new_instance_method(_TDataStd.TDataStd_RealList_List)
    Prepend = _swig_new_instance_method(_TDataStd.TDataStd_RealList_Prepend)
    Remove = _swig_new_instance_method(_TDataStd.TDataStd_RealList_Remove)
    RemoveByIndex = _swig_new_instance_method(_TDataStd.TDataStd_RealList_RemoveByIndex)
    Set = _swig_new_static_method(_TDataStd.TDataStd_RealList_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_RealList_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_RealList_swiginit(self, _TDataStd.new_TDataStd_RealList(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_RealList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_RealList

# Register TDataStd_RealList in _TDataStd:
_TDataStd.TDataStd_RealList_swigregister(TDataStd_RealList)
TDataStd_RealList_GetID = _TDataStd.TDataStd_RealList_GetID
TDataStd_RealList_Set = _TDataStd.TDataStd_RealList_Set

class TDataStd_ReferenceArray(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_DumpToString)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_ReferenceArray_GetID)
    Init = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_Init)
    InternalArray = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_InternalArray)
    Length = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_Length)
    Lower = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_Lower)
    Set = _swig_new_static_method(_TDataStd.TDataStd_ReferenceArray_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_SetID)
    SetInternalArray = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_SetInternalArray)
    SetValue = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_SetValue)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_ReferenceArray_swiginit(self, _TDataStd.new_TDataStd_ReferenceArray(*args))
    Upper = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_Upper)
    Value = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceArray_Value)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ReferenceArray_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ReferenceArray

# Register TDataStd_ReferenceArray in _TDataStd:
_TDataStd.TDataStd_ReferenceArray_swigregister(TDataStd_ReferenceArray)
TDataStd_ReferenceArray_GetID = _TDataStd.TDataStd_ReferenceArray_GetID
TDataStd_ReferenceArray_Set = _TDataStd.TDataStd_ReferenceArray_Set

class TDataStd_ReferenceList(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Append = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_Append)
    Clear = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_Clear)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_DumpToString)
    Extent = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_Extent)
    First = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_First)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_ReferenceList_GetID)
    InsertAfter = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_InsertAfter)
    InsertBefore = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_InsertBefore)
    IsEmpty = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_IsEmpty)
    Last = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_Last)
    List = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_List)
    Prepend = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_Prepend)
    Remove = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_Remove)
    Set = _swig_new_static_method(_TDataStd.TDataStd_ReferenceList_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_ReferenceList_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_ReferenceList_swiginit(self, _TDataStd.new_TDataStd_ReferenceList(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_ReferenceList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_ReferenceList

# Register TDataStd_ReferenceList in _TDataStd:
_TDataStd.TDataStd_ReferenceList_swigregister(TDataStd_ReferenceList)
TDataStd_ReferenceList_GetID = _TDataStd.TDataStd_ReferenceList_GetID
TDataStd_ReferenceList_Set = _TDataStd.TDataStd_ReferenceList_Set

class TDataStd_Relation(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Relation_DumpToString)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Relation_GetID)
    GetRelation = _swig_new_instance_method(_TDataStd.TDataStd_Relation_GetRelation)
    GetVariables = _swig_new_instance_method(_TDataStd.TDataStd_Relation_GetVariables)
    Name = _swig_new_instance_method(_TDataStd.TDataStd_Relation_Name)
    Set = _swig_new_static_method(_TDataStd.TDataStd_Relation_Set)
    SetRelation = _swig_new_instance_method(_TDataStd.TDataStd_Relation_SetRelation)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Relation_swiginit(self, _TDataStd.new_TDataStd_Relation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Relation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Relation

# Register TDataStd_Relation in _TDataStd:
_TDataStd.TDataStd_Relation_swigregister(TDataStd_Relation)
TDataStd_Relation_GetID = _TDataStd.TDataStd_Relation_GetID
TDataStd_Relation_Set = _TDataStd.TDataStd_Relation_Set

class TDataStd_Tick(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Tick_DumpToString)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Tick_GetID)
    Set = _swig_new_static_method(_TDataStd.TDataStd_Tick_Set)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Tick_swiginit(self, _TDataStd.new_TDataStd_Tick(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Tick_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Tick

# Register TDataStd_Tick in _TDataStd:
_TDataStd.TDataStd_Tick_swigregister(TDataStd_Tick)
TDataStd_Tick_GetID = _TDataStd.TDataStd_Tick_GetID
TDataStd_Tick_Set = _TDataStd.TDataStd_Tick_Set

class TDataStd_TreeNode(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Append = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_Append)
    Depth = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_Depth)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_DumpToString)
    Father = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_Father)
    Find = _swig_new_static_method(_TDataStd.TDataStd_TreeNode_Find)
    FindLast = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_FindLast)
    First = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_First)
    GetDefaultTreeID = _swig_new_static_method(_TDataStd.TDataStd_TreeNode_GetDefaultTreeID)
    HasFather = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_HasFather)
    HasFirst = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_HasFirst)
    HasLast = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_HasLast)
    HasNext = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_HasNext)
    HasPrevious = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_HasPrevious)
    InsertAfter = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_InsertAfter)
    InsertBefore = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_InsertBefore)
    IsAscendant = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_IsAscendant)
    IsChild = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_IsChild)
    IsDescendant = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_IsDescendant)
    IsFather = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_IsFather)
    IsRoot = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_IsRoot)
    Last = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_Last)
    NbChildren = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_NbChildren)
    Next = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_Next)
    Prepend = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_Prepend)
    Previous = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_Previous)
    Remove = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_Remove)
    Root = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_Root)
    Set = _swig_new_static_method(_TDataStd.TDataStd_TreeNode_Set)
    SetFather = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_SetFather)
    SetFirst = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_SetFirst)
    SetLast = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_SetLast)
    SetNext = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_SetNext)
    SetPrevious = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_SetPrevious)
    SetTreeID = _swig_new_instance_method(_TDataStd.TDataStd_TreeNode_SetTreeID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_TreeNode_swiginit(self, _TDataStd.new_TDataStd_TreeNode(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_TreeNode_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_TreeNode

# Register TDataStd_TreeNode in _TDataStd:
_TDataStd.TDataStd_TreeNode_swigregister(TDataStd_TreeNode)
TDataStd_TreeNode_Find = _TDataStd.TDataStd_TreeNode_Find
TDataStd_TreeNode_GetDefaultTreeID = _TDataStd.TDataStd_TreeNode_GetDefaultTreeID
TDataStd_TreeNode_Set = _TDataStd.TDataStd_TreeNode_Set

class TDataStd_UAttribute(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_UAttribute_DumpToString)
    Set = _swig_new_static_method(_TDataStd.TDataStd_UAttribute_Set)
    SetID = _swig_new_instance_method(_TDataStd.TDataStd_UAttribute_SetID)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_UAttribute_swiginit(self, _TDataStd.new_TDataStd_UAttribute(*args))


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_UAttribute_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_UAttribute

# Register TDataStd_UAttribute in _TDataStd:
_TDataStd.TDataStd_UAttribute_swigregister(TDataStd_UAttribute)
TDataStd_UAttribute_Set = _TDataStd.TDataStd_UAttribute_Set

class TDataStd_Variable(OCC.Core.TDF.TDF_Attribute):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Assign = _swig_new_instance_method(_TDataStd.TDataStd_Variable_Assign)
    Constant = _swig_new_instance_method(_TDataStd.TDataStd_Variable_Constant)
    Desassign = _swig_new_instance_method(_TDataStd.TDataStd_Variable_Desassign)
    DumpToString = _swig_new_instance_method(_TDataStd.TDataStd_Variable_DumpToString)
    Expression = _swig_new_instance_method(_TDataStd.TDataStd_Variable_Expression)
    Get = _swig_new_instance_method(_TDataStd.TDataStd_Variable_Get)
    GetID = _swig_new_static_method(_TDataStd.TDataStd_Variable_GetID)
    IsAssigned = _swig_new_instance_method(_TDataStd.TDataStd_Variable_IsAssigned)
    IsCaptured = _swig_new_instance_method(_TDataStd.TDataStd_Variable_IsCaptured)
    IsConstant = _swig_new_instance_method(_TDataStd.TDataStd_Variable_IsConstant)
    IsValued = _swig_new_instance_method(_TDataStd.TDataStd_Variable_IsValued)
    Name = _swig_new_instance_method(_TDataStd.TDataStd_Variable_Name)
    Real = _swig_new_instance_method(_TDataStd.TDataStd_Variable_Real)
    Set = _swig_new_instance_method(_TDataStd.TDataStd_Variable_Set)

    def __init__(self, *args):
        r""":rtype: None"""
        _TDataStd.TDataStd_Variable_swiginit(self, _TDataStd.new_TDataStd_Variable(*args))
    Unit = _swig_new_instance_method(_TDataStd.TDataStd_Variable_Unit)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_Variable_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _TDataStd.delete_TDataStd_Variable

# Register TDataStd_Variable in _TDataStd:
_TDataStd.TDataStd_Variable_swigregister(TDataStd_Variable)
TDataStd_Variable_GetID = _TDataStd.TDataStd_Variable_GetID

class TDataStd_HLabelArray1(TDataStd_LabelArray1, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TDataStd.TDataStd_HLabelArray1_swiginit(self, _TDataStd.new_TDataStd_HLabelArray1(*args))
    Array1 = _swig_new_instance_method(_TDataStd.TDataStd_HLabelArray1_Array1)
    ChangeArray1 = _swig_new_instance_method(_TDataStd.TDataStd_HLabelArray1_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TDataStd_HLabelArray1_DownCast(t)

    __swig_destroy__ = _TDataStd.delete_TDataStd_HLabelArray1

# Register TDataStd_HLabelArray1 in _TDataStd:
_TDataStd.TDataStd_HLabelArray1_swigregister(TDataStd_HLabelArray1)



