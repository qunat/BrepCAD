# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
TColGeom module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_tcolgeom.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _TColGeom
else:
    import _TColGeom

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _TColGeom.SWIG_PyInstanceMethod_New
_swig_new_static_method = _TColGeom.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _TColGeom.delete_SwigPyIterator
    value = _swig_new_instance_method(_TColGeom.SwigPyIterator_value)
    incr = _swig_new_instance_method(_TColGeom.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_TColGeom.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_TColGeom.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_TColGeom.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_TColGeom.SwigPyIterator_copy)
    next = _swig_new_instance_method(_TColGeom.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_TColGeom.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_TColGeom.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_TColGeom.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_TColGeom.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_TColGeom.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_TColGeom.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_TColGeom.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_TColGeom.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_TColGeom.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _TColGeom:
_TColGeom.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.Geom
import OCC.Core.gp
import OCC.Core.GeomAbs
import OCC.Core.TColgp
import OCC.Core.TColStd
import OCC.Core.TCollection
Handle_TColGeom_HArray1OfSurface_Create = _TColGeom.Handle_TColGeom_HArray1OfSurface_Create
Handle_TColGeom_HArray1OfSurface_DownCast = _TColGeom.Handle_TColGeom_HArray1OfSurface_DownCast
Handle_TColGeom_HArray1OfSurface_IsNull = _TColGeom.Handle_TColGeom_HArray1OfSurface_IsNull
Handle_TColGeom_HArray1OfBezierCurve_Create = _TColGeom.Handle_TColGeom_HArray1OfBezierCurve_Create
Handle_TColGeom_HArray1OfBezierCurve_DownCast = _TColGeom.Handle_TColGeom_HArray1OfBezierCurve_DownCast
Handle_TColGeom_HArray1OfBezierCurve_IsNull = _TColGeom.Handle_TColGeom_HArray1OfBezierCurve_IsNull
Handle_TColGeom_HArray1OfBSplineCurve_Create = _TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_Create
Handle_TColGeom_HArray1OfBSplineCurve_DownCast = _TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_DownCast
Handle_TColGeom_HArray1OfBSplineCurve_IsNull = _TColGeom.Handle_TColGeom_HArray1OfBSplineCurve_IsNull
Handle_TColGeom_HArray1OfCurve_Create = _TColGeom.Handle_TColGeom_HArray1OfCurve_Create
Handle_TColGeom_HArray1OfCurve_DownCast = _TColGeom.Handle_TColGeom_HArray1OfCurve_DownCast
Handle_TColGeom_HArray1OfCurve_IsNull = _TColGeom.Handle_TColGeom_HArray1OfCurve_IsNull
Handle_TColGeom_HArray2OfSurface_Create = _TColGeom.Handle_TColGeom_HArray2OfSurface_Create
Handle_TColGeom_HArray2OfSurface_DownCast = _TColGeom.Handle_TColGeom_HArray2OfSurface_DownCast
Handle_TColGeom_HArray2OfSurface_IsNull = _TColGeom.Handle_TColGeom_HArray2OfSurface_IsNull
Handle_TColGeom_HSequenceOfBoundedCurve_Create = _TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_Create
Handle_TColGeom_HSequenceOfBoundedCurve_DownCast = _TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_DownCast
Handle_TColGeom_HSequenceOfBoundedCurve_IsNull = _TColGeom.Handle_TColGeom_HSequenceOfBoundedCurve_IsNull
Handle_TColGeom_HSequenceOfCurve_Create = _TColGeom.Handle_TColGeom_HSequenceOfCurve_Create
Handle_TColGeom_HSequenceOfCurve_DownCast = _TColGeom.Handle_TColGeom_HSequenceOfCurve_DownCast
Handle_TColGeom_HSequenceOfCurve_IsNull = _TColGeom.Handle_TColGeom_HSequenceOfCurve_IsNull
class TColGeom_Array2OfBezierSurface(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.TColGeom_Array2OfBezierSurface_swiginit(self, _TColGeom.new_TColGeom_Array2OfBezierSurface(*args))
    Init = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_Init)
    Size = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_Size)
    Length = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_Length)
    NbRows = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_NbRows)
    NbColumns = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_NbColumns)
    RowLength = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_RowLength)
    ColLength = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_ColLength)
    LowerRow = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_LowerRow)
    UpperRow = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_UpperRow)
    LowerCol = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_LowerCol)
    UpperCol = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_IsDeletable)
    Assign = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_Assign)
    Move = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_Move)
    Set = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_Set)
    Value = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_Value)
    ChangeValue = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_ChangeValue)
    __call__ = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface___call__)
    SetValue = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_SetValue)
    Resize = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfBezierSurface_Resize)
    __swig_destroy__ = _TColGeom.delete_TColGeom_Array2OfBezierSurface

# Register TColGeom_Array2OfBezierSurface in _TColGeom:
_TColGeom.TColGeom_Array2OfBezierSurface_swigregister(TColGeom_Array2OfBezierSurface)

class TColGeom_Array1OfBezierCurve(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_begin)
    end = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_end)
    cbegin = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_cbegin)
    cend = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_cend)

    def __init__(self, *args):
        _TColGeom.TColGeom_Array1OfBezierCurve_swiginit(self, _TColGeom.new_TColGeom_Array1OfBezierCurve(*args))
    Init = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Init)
    Size = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Size)
    Length = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Length)
    IsEmpty = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_IsEmpty)
    Lower = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Lower)
    Upper = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Upper)
    IsDeletable = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_IsAllocated)
    Assign = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Assign)
    Move = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Move)
    Set = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Set)
    First = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_First)
    ChangeFirst = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_ChangeFirst)
    Last = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Last)
    ChangeLast = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_ChangeLast)
    Value = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Value)
    ChangeValue = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_ChangeValue)
    __call__ = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve___call__)
    SetValue = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_SetValue)
    Resize = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBezierCurve_Resize)
    __swig_destroy__ = _TColGeom.delete_TColGeom_Array1OfBezierCurve

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColGeom_Array1OfBezierCurve in _TColGeom:
_TColGeom.TColGeom_Array1OfBezierCurve_swigregister(TColGeom_Array1OfBezierCurve)

class TColGeom_Array1OfSurface(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_begin)
    end = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_end)
    cbegin = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_cbegin)
    cend = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_cend)

    def __init__(self, *args):
        _TColGeom.TColGeom_Array1OfSurface_swiginit(self, _TColGeom.new_TColGeom_Array1OfSurface(*args))
    Init = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Init)
    Size = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Size)
    Length = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Length)
    IsEmpty = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_IsEmpty)
    Lower = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Lower)
    Upper = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Upper)
    IsDeletable = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_IsAllocated)
    Assign = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Assign)
    Move = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Move)
    Set = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Set)
    First = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_First)
    ChangeFirst = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_ChangeFirst)
    Last = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Last)
    ChangeLast = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_ChangeLast)
    Value = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Value)
    ChangeValue = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_ChangeValue)
    __call__ = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface___call__)
    SetValue = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_SetValue)
    Resize = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfSurface_Resize)
    __swig_destroy__ = _TColGeom.delete_TColGeom_Array1OfSurface

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColGeom_Array1OfSurface in _TColGeom:
_TColGeom.TColGeom_Array1OfSurface_swigregister(TColGeom_Array1OfSurface)

class TColGeom_Array2OfSurface(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.TColGeom_Array2OfSurface_swiginit(self, _TColGeom.new_TColGeom_Array2OfSurface(*args))
    Init = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_Init)
    Size = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_Size)
    Length = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_Length)
    NbRows = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_NbRows)
    NbColumns = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_NbColumns)
    RowLength = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_RowLength)
    ColLength = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_ColLength)
    LowerRow = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_LowerRow)
    UpperRow = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_UpperRow)
    LowerCol = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_LowerCol)
    UpperCol = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_UpperCol)
    IsDeletable = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_IsDeletable)
    Assign = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_Assign)
    Move = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_Move)
    Set = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_Set)
    Value = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_Value)
    ChangeValue = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_ChangeValue)
    __call__ = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface___call__)
    SetValue = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_SetValue)
    Resize = _swig_new_instance_method(_TColGeom.TColGeom_Array2OfSurface_Resize)
    __swig_destroy__ = _TColGeom.delete_TColGeom_Array2OfSurface

# Register TColGeom_Array2OfSurface in _TColGeom:
_TColGeom.TColGeom_Array2OfSurface_swigregister(TColGeom_Array2OfSurface)

class TColGeom_SequenceOfBoundedCurve(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_begin)
    end = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_end)
    cbegin = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_cbegin)
    cend = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_cend)

    def __init__(self, *args):
        _TColGeom.TColGeom_SequenceOfBoundedCurve_swiginit(self, _TColGeom.new_TColGeom_SequenceOfBoundedCurve(*args))
    Size = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Size)
    Length = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Length)
    Lower = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Lower)
    Upper = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Upper)
    IsEmpty = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_IsEmpty)
    Reverse = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Reverse)
    Exchange = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Exchange)
    delNode = _swig_new_static_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_delNode)
    Clear = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Clear)
    Assign = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Assign)
    Set = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Set)
    Remove = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Remove)
    Append = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Append)
    Prepend = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Prepend)
    InsertBefore = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_InsertAfter)
    Split = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Split)
    First = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_First)
    ChangeFirst = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_ChangeFirst)
    Last = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Last)
    ChangeLast = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_ChangeLast)
    Value = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_Value)
    ChangeValue = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_ChangeValue)
    __call__ = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve___call__)
    SetValue = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfBoundedCurve_SetValue)
    __swig_destroy__ = _TColGeom.delete_TColGeom_SequenceOfBoundedCurve

# Register TColGeom_SequenceOfBoundedCurve in _TColGeom:
_TColGeom.TColGeom_SequenceOfBoundedCurve_swigregister(TColGeom_SequenceOfBoundedCurve)
TColGeom_SequenceOfBoundedCurve_delNode = _TColGeom.TColGeom_SequenceOfBoundedCurve_delNode

class TColGeom_SequenceOfSurface(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_begin)
    end = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_end)
    cbegin = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_cbegin)
    cend = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_cend)

    def __init__(self, *args):
        _TColGeom.TColGeom_SequenceOfSurface_swiginit(self, _TColGeom.new_TColGeom_SequenceOfSurface(*args))
    Size = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Size)
    Length = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Length)
    Lower = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Lower)
    Upper = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Upper)
    IsEmpty = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_IsEmpty)
    Reverse = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Reverse)
    Exchange = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Exchange)
    delNode = _swig_new_static_method(_TColGeom.TColGeom_SequenceOfSurface_delNode)
    Clear = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Clear)
    Assign = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Assign)
    Set = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Set)
    Remove = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Remove)
    Append = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Append)
    Prepend = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Prepend)
    InsertBefore = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_InsertAfter)
    Split = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Split)
    First = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_First)
    ChangeFirst = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_ChangeFirst)
    Last = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Last)
    ChangeLast = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_ChangeLast)
    Value = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_Value)
    ChangeValue = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_ChangeValue)
    __call__ = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface___call__)
    SetValue = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfSurface_SetValue)
    __swig_destroy__ = _TColGeom.delete_TColGeom_SequenceOfSurface

# Register TColGeom_SequenceOfSurface in _TColGeom:
_TColGeom.TColGeom_SequenceOfSurface_swigregister(TColGeom_SequenceOfSurface)
TColGeom_SequenceOfSurface_delNode = _TColGeom.TColGeom_SequenceOfSurface_delNode

class TColGeom_Array1OfCurve(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_begin)
    end = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_end)
    cbegin = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_cbegin)
    cend = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_cend)

    def __init__(self, *args):
        _TColGeom.TColGeom_Array1OfCurve_swiginit(self, _TColGeom.new_TColGeom_Array1OfCurve(*args))
    Init = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Init)
    Size = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Size)
    Length = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Length)
    IsEmpty = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_IsEmpty)
    Lower = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Lower)
    Upper = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Upper)
    IsDeletable = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_IsAllocated)
    Assign = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Assign)
    Move = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Move)
    Set = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Set)
    First = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_First)
    ChangeFirst = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_ChangeFirst)
    Last = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Last)
    ChangeLast = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_ChangeLast)
    Value = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Value)
    ChangeValue = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_ChangeValue)
    __call__ = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve___call__)
    SetValue = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_SetValue)
    Resize = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfCurve_Resize)
    __swig_destroy__ = _TColGeom.delete_TColGeom_Array1OfCurve

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColGeom_Array1OfCurve in _TColGeom:
_TColGeom.TColGeom_Array1OfCurve_swigregister(TColGeom_Array1OfCurve)

class TColGeom_SequenceOfCurve(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_begin)
    end = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_end)
    cbegin = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_cbegin)
    cend = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_cend)

    def __init__(self, *args):
        _TColGeom.TColGeom_SequenceOfCurve_swiginit(self, _TColGeom.new_TColGeom_SequenceOfCurve(*args))
    Size = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Size)
    Length = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Length)
    Lower = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Lower)
    Upper = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Upper)
    IsEmpty = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_IsEmpty)
    Reverse = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Reverse)
    Exchange = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Exchange)
    delNode = _swig_new_static_method(_TColGeom.TColGeom_SequenceOfCurve_delNode)
    Clear = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Clear)
    Assign = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Assign)
    Set = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Set)
    Remove = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Remove)
    Append = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Append)
    Prepend = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Prepend)
    InsertBefore = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_InsertBefore)
    InsertAfter = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_InsertAfter)
    Split = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Split)
    First = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_First)
    ChangeFirst = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_ChangeFirst)
    Last = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Last)
    ChangeLast = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_ChangeLast)
    Value = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_Value)
    ChangeValue = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_ChangeValue)
    __call__ = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve___call__)
    SetValue = _swig_new_instance_method(_TColGeom.TColGeom_SequenceOfCurve_SetValue)
    __swig_destroy__ = _TColGeom.delete_TColGeom_SequenceOfCurve

# Register TColGeom_SequenceOfCurve in _TColGeom:
_TColGeom.TColGeom_SequenceOfCurve_swigregister(TColGeom_SequenceOfCurve)
TColGeom_SequenceOfCurve_delNode = _TColGeom.TColGeom_SequenceOfCurve_delNode

class TColGeom_Array1OfBSplineCurve(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_begin)
    end = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_end)
    cbegin = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_cbegin)
    cend = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_cend)

    def __init__(self, *args):
        _TColGeom.TColGeom_Array1OfBSplineCurve_swiginit(self, _TColGeom.new_TColGeom_Array1OfBSplineCurve(*args))
    Init = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Init)
    Size = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Size)
    Length = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Length)
    IsEmpty = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_IsEmpty)
    Lower = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Lower)
    Upper = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Upper)
    IsDeletable = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_IsDeletable)
    IsAllocated = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_IsAllocated)
    Assign = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Assign)
    Move = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Move)
    Set = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Set)
    First = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_First)
    ChangeFirst = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_ChangeFirst)
    Last = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Last)
    ChangeLast = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_ChangeLast)
    Value = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Value)
    ChangeValue = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_ChangeValue)
    __call__ = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve___call__)
    SetValue = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_SetValue)
    Resize = _swig_new_instance_method(_TColGeom.TColGeom_Array1OfBSplineCurve_Resize)
    __swig_destroy__ = _TColGeom.delete_TColGeom_Array1OfBSplineCurve

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register TColGeom_Array1OfBSplineCurve in _TColGeom:
_TColGeom.TColGeom_Array1OfBSplineCurve_swigregister(TColGeom_Array1OfBSplineCurve)

class TColGeom_HArray1OfSurface(TColGeom_Array1OfSurface, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.TColGeom_HArray1OfSurface_swiginit(self, _TColGeom.new_TColGeom_HArray1OfSurface(*args))
    Array1 = _swig_new_instance_method(_TColGeom.TColGeom_HArray1OfSurface_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColGeom.TColGeom_HArray1OfSurface_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom_HArray1OfSurface_DownCast(t)

    __swig_destroy__ = _TColGeom.delete_TColGeom_HArray1OfSurface

# Register TColGeom_HArray1OfSurface in _TColGeom:
_TColGeom.TColGeom_HArray1OfSurface_swigregister(TColGeom_HArray1OfSurface)

class TColGeom_HArray1OfBezierCurve(TColGeom_Array1OfBezierCurve, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.TColGeom_HArray1OfBezierCurve_swiginit(self, _TColGeom.new_TColGeom_HArray1OfBezierCurve(*args))
    Array1 = _swig_new_instance_method(_TColGeom.TColGeom_HArray1OfBezierCurve_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColGeom.TColGeom_HArray1OfBezierCurve_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom_HArray1OfBezierCurve_DownCast(t)

    __swig_destroy__ = _TColGeom.delete_TColGeom_HArray1OfBezierCurve

# Register TColGeom_HArray1OfBezierCurve in _TColGeom:
_TColGeom.TColGeom_HArray1OfBezierCurve_swigregister(TColGeom_HArray1OfBezierCurve)

class TColGeom_HArray1OfBSplineCurve(TColGeom_Array1OfBSplineCurve, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.TColGeom_HArray1OfBSplineCurve_swiginit(self, _TColGeom.new_TColGeom_HArray1OfBSplineCurve(*args))
    Array1 = _swig_new_instance_method(_TColGeom.TColGeom_HArray1OfBSplineCurve_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColGeom.TColGeom_HArray1OfBSplineCurve_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom_HArray1OfBSplineCurve_DownCast(t)

    __swig_destroy__ = _TColGeom.delete_TColGeom_HArray1OfBSplineCurve

# Register TColGeom_HArray1OfBSplineCurve in _TColGeom:
_TColGeom.TColGeom_HArray1OfBSplineCurve_swigregister(TColGeom_HArray1OfBSplineCurve)

class TColGeom_HArray1OfCurve(TColGeom_Array1OfCurve, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.TColGeom_HArray1OfCurve_swiginit(self, _TColGeom.new_TColGeom_HArray1OfCurve(*args))
    Array1 = _swig_new_instance_method(_TColGeom.TColGeom_HArray1OfCurve_Array1)
    ChangeArray1 = _swig_new_instance_method(_TColGeom.TColGeom_HArray1OfCurve_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom_HArray1OfCurve_DownCast(t)

    __swig_destroy__ = _TColGeom.delete_TColGeom_HArray1OfCurve

# Register TColGeom_HArray1OfCurve in _TColGeom:
_TColGeom.TColGeom_HArray1OfCurve_swigregister(TColGeom_HArray1OfCurve)

class TColGeom_HArray2OfSurface(TColGeom_Array2OfSurface, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.TColGeom_HArray2OfSurface_swiginit(self, _TColGeom.new_TColGeom_HArray2OfSurface(*args))
    Array2 = _swig_new_instance_method(_TColGeom.TColGeom_HArray2OfSurface_Array2)
    ChangeArray2 = _swig_new_instance_method(_TColGeom.TColGeom_HArray2OfSurface_ChangeArray2)


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom_HArray2OfSurface_DownCast(t)

    __swig_destroy__ = _TColGeom.delete_TColGeom_HArray2OfSurface

# Register TColGeom_HArray2OfSurface in _TColGeom:
_TColGeom.TColGeom_HArray2OfSurface_swigregister(TColGeom_HArray2OfSurface)

class TColGeom_HSequenceOfBoundedCurve(TColGeom_SequenceOfBoundedCurve, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.TColGeom_HSequenceOfBoundedCurve_swiginit(self, _TColGeom.new_TColGeom_HSequenceOfBoundedCurve(*args))
    Sequence = _swig_new_instance_method(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Sequence)
    Append = _swig_new_instance_method(_TColGeom.TColGeom_HSequenceOfBoundedCurve_Append)
    ChangeSequence = _swig_new_instance_method(_TColGeom.TColGeom_HSequenceOfBoundedCurve_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom_HSequenceOfBoundedCurve_DownCast(t)

    __swig_destroy__ = _TColGeom.delete_TColGeom_HSequenceOfBoundedCurve

# Register TColGeom_HSequenceOfBoundedCurve in _TColGeom:
_TColGeom.TColGeom_HSequenceOfBoundedCurve_swigregister(TColGeom_HSequenceOfBoundedCurve)

class TColGeom_HSequenceOfCurve(TColGeom_SequenceOfCurve, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _TColGeom.TColGeom_HSequenceOfCurve_swiginit(self, _TColGeom.new_TColGeom_HSequenceOfCurve(*args))
    Sequence = _swig_new_instance_method(_TColGeom.TColGeom_HSequenceOfCurve_Sequence)
    Append = _swig_new_instance_method(_TColGeom.TColGeom_HSequenceOfCurve_Append)
    ChangeSequence = _swig_new_instance_method(_TColGeom.TColGeom_HSequenceOfCurve_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_TColGeom_HSequenceOfCurve_DownCast(t)

    __swig_destroy__ = _TColGeom.delete_TColGeom_HSequenceOfCurve

# Register TColGeom_HSequenceOfCurve in _TColGeom:
_TColGeom.TColGeom_HSequenceOfCurve_swigregister(TColGeom_HSequenceOfCurve)



