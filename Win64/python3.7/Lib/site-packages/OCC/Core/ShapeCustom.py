# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
ShapeCustom module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_shapecustom.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ShapeCustom
else:
    import _ShapeCustom

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _ShapeCustom.SWIG_PyInstanceMethod_New
_swig_new_static_method = _ShapeCustom.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _ShapeCustom.delete_SwigPyIterator
    value = _swig_new_instance_method(_ShapeCustom.SwigPyIterator_value)
    incr = _swig_new_instance_method(_ShapeCustom.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_ShapeCustom.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_ShapeCustom.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_ShapeCustom.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_ShapeCustom.SwigPyIterator_copy)
    next = _swig_new_instance_method(_ShapeCustom.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_ShapeCustom.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_ShapeCustom.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_ShapeCustom.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_ShapeCustom.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_ShapeCustom.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_ShapeCustom.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_ShapeCustom.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_ShapeCustom.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_ShapeCustom.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _ShapeCustom:
_ShapeCustom.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TopoDS
import OCC.Core.Message
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.GeomAbs
import OCC.Core.Geom
import OCC.Core.TColgp
import OCC.Core.TColStd
import OCC.Core.TCollection
import OCC.Core.Geom2d
import OCC.Core.BRepTools
import OCC.Core.Bnd
import OCC.Core.BVH
import OCC.Core.TopTools
import OCC.Core.BRep
import OCC.Core.Poly
import OCC.Core.TShort
import OCC.Core.ShapeExtend
import OCC.Core.TColGeom
Handle_ShapeCustom_Modification_Create = _ShapeCustom.Handle_ShapeCustom_Modification_Create
Handle_ShapeCustom_Modification_DownCast = _ShapeCustom.Handle_ShapeCustom_Modification_DownCast
Handle_ShapeCustom_Modification_IsNull = _ShapeCustom.Handle_ShapeCustom_Modification_IsNull
Handle_ShapeCustom_RestrictionParameters_Create = _ShapeCustom.Handle_ShapeCustom_RestrictionParameters_Create
Handle_ShapeCustom_RestrictionParameters_DownCast = _ShapeCustom.Handle_ShapeCustom_RestrictionParameters_DownCast
Handle_ShapeCustom_RestrictionParameters_IsNull = _ShapeCustom.Handle_ShapeCustom_RestrictionParameters_IsNull
Handle_ShapeCustom_TrsfModification_Create = _ShapeCustom.Handle_ShapeCustom_TrsfModification_Create
Handle_ShapeCustom_TrsfModification_DownCast = _ShapeCustom.Handle_ShapeCustom_TrsfModification_DownCast
Handle_ShapeCustom_TrsfModification_IsNull = _ShapeCustom.Handle_ShapeCustom_TrsfModification_IsNull
Handle_ShapeCustom_ConvertToBSpline_Create = _ShapeCustom.Handle_ShapeCustom_ConvertToBSpline_Create
Handle_ShapeCustom_ConvertToBSpline_DownCast = _ShapeCustom.Handle_ShapeCustom_ConvertToBSpline_DownCast
Handle_ShapeCustom_ConvertToBSpline_IsNull = _ShapeCustom.Handle_ShapeCustom_ConvertToBSpline_IsNull
Handle_ShapeCustom_DirectModification_Create = _ShapeCustom.Handle_ShapeCustom_DirectModification_Create
Handle_ShapeCustom_DirectModification_DownCast = _ShapeCustom.Handle_ShapeCustom_DirectModification_DownCast
Handle_ShapeCustom_DirectModification_IsNull = _ShapeCustom.Handle_ShapeCustom_DirectModification_IsNull
class shapecustom(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BSplineRestriction = _swig_new_static_method(_ShapeCustom.shapecustom_BSplineRestriction)
    ConvertToBSpline = _swig_new_static_method(_ShapeCustom.shapecustom_ConvertToBSpline)
    ConvertToRevolution = _swig_new_static_method(_ShapeCustom.shapecustom_ConvertToRevolution)
    DirectFaces = _swig_new_static_method(_ShapeCustom.shapecustom_DirectFaces)
    ScaleShape = _swig_new_static_method(_ShapeCustom.shapecustom_ScaleShape)
    SweptToElementary = _swig_new_static_method(_ShapeCustom.shapecustom_SweptToElementary)

    __repr__ = _dumps_object


    def __init__(self):
        _ShapeCustom.shapecustom_swiginit(self, _ShapeCustom.new_shapecustom())
    __swig_destroy__ = _ShapeCustom.delete_shapecustom

# Register shapecustom in _ShapeCustom:
_ShapeCustom.shapecustom_swigregister(shapecustom)
shapecustom_BSplineRestriction = _ShapeCustom.shapecustom_BSplineRestriction
shapecustom_ConvertToBSpline = _ShapeCustom.shapecustom_ConvertToBSpline
shapecustom_ConvertToRevolution = _ShapeCustom.shapecustom_ConvertToRevolution
shapecustom_DirectFaces = _ShapeCustom.shapecustom_DirectFaces
shapecustom_ScaleShape = _ShapeCustom.shapecustom_ScaleShape
shapecustom_SweptToElementary = _ShapeCustom.shapecustom_SweptToElementary

class ShapeCustom_Curve(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ConvertToPeriodic = _swig_new_instance_method(_ShapeCustom.ShapeCustom_Curve_ConvertToPeriodic)
    Init = _swig_new_instance_method(_ShapeCustom.ShapeCustom_Curve_Init)

    def __init__(self, *args):
        r"""
        :rtype: None:param C:
        	:type C: Geom_Curve
        	:rtype: None
        """
        _ShapeCustom.ShapeCustom_Curve_swiginit(self, _ShapeCustom.new_ShapeCustom_Curve(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _ShapeCustom.delete_ShapeCustom_Curve

# Register ShapeCustom_Curve in _ShapeCustom:
_ShapeCustom.ShapeCustom_Curve_swigregister(ShapeCustom_Curve)

class ShapeCustom_Curve2d(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ConvertToLine2d = _swig_new_static_method(_ShapeCustom.ShapeCustom_Curve2d_ConvertToLine2d)
    IsLinear = _swig_new_static_method(_ShapeCustom.ShapeCustom_Curve2d_IsLinear)
    SimplifyBSpline2d = _swig_new_static_method(_ShapeCustom.ShapeCustom_Curve2d_SimplifyBSpline2d)

    __repr__ = _dumps_object


    def __init__(self):
        _ShapeCustom.ShapeCustom_Curve2d_swiginit(self, _ShapeCustom.new_ShapeCustom_Curve2d())
    __swig_destroy__ = _ShapeCustom.delete_ShapeCustom_Curve2d

# Register ShapeCustom_Curve2d in _ShapeCustom:
_ShapeCustom.ShapeCustom_Curve2d_swigregister(ShapeCustom_Curve2d)
ShapeCustom_Curve2d_ConvertToLine2d = _ShapeCustom.ShapeCustom_Curve2d_ConvertToLine2d
ShapeCustom_Curve2d_IsLinear = _ShapeCustom.ShapeCustom_Curve2d_IsLinear
ShapeCustom_Curve2d_SimplifyBSpline2d = _ShapeCustom.ShapeCustom_Curve2d_SimplifyBSpline2d

class ShapeCustom_Modification(OCC.Core.BRepTools.BRepTools_Modification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MsgRegistrator = _swig_new_instance_method(_ShapeCustom.ShapeCustom_Modification_MsgRegistrator)
    SendMsg = _swig_new_instance_method(_ShapeCustom.ShapeCustom_Modification_SendMsg)
    SetMsgRegistrator = _swig_new_instance_method(_ShapeCustom.ShapeCustom_Modification_SetMsgRegistrator)


    @staticmethod
    def DownCast(t):
      return Handle_ShapeCustom_Modification_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ShapeCustom.delete_ShapeCustom_Modification

# Register ShapeCustom_Modification in _ShapeCustom:
_ShapeCustom.ShapeCustom_Modification_swigregister(ShapeCustom_Modification)

class ShapeCustom_RestrictionParameters(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GetConvertBezierSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertBezierSurf)
    SetConvertBezierSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertBezierSurf)
    GetConvertConicalSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertConicalSurf)
    SetConvertConicalSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertConicalSurf)
    GetConvertCurve2d = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertCurve2d)
    SetConvertCurve2d = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertCurve2d)
    GetConvertCurve3d = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertCurve3d)
    SetConvertCurve3d = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertCurve3d)
    GetConvertCylindricalSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertCylindricalSurf)
    SetConvertCylindricalSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertCylindricalSurf)
    GetConvertExtrusionSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertExtrusionSurf)
    SetConvertExtrusionSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertExtrusionSurf)
    GetConvertOffsetCurv2d = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertOffsetCurv2d)
    SetConvertOffsetCurv2d = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertOffsetCurv2d)
    GetConvertOffsetCurv3d = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertOffsetCurv3d)
    SetConvertOffsetCurv3d = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertOffsetCurv3d)
    GetConvertOffsetSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertOffsetSurf)
    SetConvertOffsetSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertOffsetSurf)
    GetConvertPlane = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertPlane)
    SetConvertPlane = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertPlane)
    GetConvertRevolutionSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertRevolutionSurf)
    SetConvertRevolutionSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertRevolutionSurf)
    GetConvertSphericalSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertSphericalSurf)
    SetConvertSphericalSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertSphericalSurf)
    GetConvertToroidalSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetConvertToroidalSurf)
    SetConvertToroidalSurf = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetConvertToroidalSurf)
    GetGMaxDegree = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetGMaxDegree)
    SetGMaxDegree = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetGMaxDegree)
    GetGMaxSeg = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetGMaxSeg)
    SetGMaxSeg = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetGMaxSeg)
    GetSegmentSurfaceMode = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_GetSegmentSurfaceMode)
    SetSegmentSurfaceMode = _swig_new_instance_method(_ShapeCustom.ShapeCustom_RestrictionParameters_SetSegmentSurfaceMode)

    def __init__(self, *args):
        r"""
        * Sets default parameters.
        	:rtype: None
        """
        _ShapeCustom.ShapeCustom_RestrictionParameters_swiginit(self, _ShapeCustom.new_ShapeCustom_RestrictionParameters(*args))


    @staticmethod
    def DownCast(t):
      return Handle_ShapeCustom_RestrictionParameters_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ShapeCustom.delete_ShapeCustom_RestrictionParameters

# Register ShapeCustom_RestrictionParameters in _ShapeCustom:
_ShapeCustom.ShapeCustom_RestrictionParameters_swigregister(ShapeCustom_RestrictionParameters)

class ShapeCustom_Surface(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ConvertToAnalytical = _swig_new_instance_method(_ShapeCustom.ShapeCustom_Surface_ConvertToAnalytical)
    ConvertToPeriodic = _swig_new_instance_method(_ShapeCustom.ShapeCustom_Surface_ConvertToPeriodic)
    Gap = _swig_new_instance_method(_ShapeCustom.ShapeCustom_Surface_Gap)
    Init = _swig_new_instance_method(_ShapeCustom.ShapeCustom_Surface_Init)

    def __init__(self, *args):
        r"""
        :rtype: None:param S:
        	:type S: Geom_Surface
        	:rtype: None
        """
        _ShapeCustom.ShapeCustom_Surface_swiginit(self, _ShapeCustom.new_ShapeCustom_Surface(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _ShapeCustom.delete_ShapeCustom_Surface

# Register ShapeCustom_Surface in _ShapeCustom:
_ShapeCustom.ShapeCustom_Surface_swigregister(ShapeCustom_Surface)

class ShapeCustom_TrsfModification(OCC.Core.BRepTools.BRepTools_TrsfModification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:param T:
        	:type T: gp_Trsf
        	:rtype: None
        """
        _ShapeCustom.ShapeCustom_TrsfModification_swiginit(self, _ShapeCustom.new_ShapeCustom_TrsfModification(*args))


    @staticmethod
    def DownCast(t):
      return Handle_ShapeCustom_TrsfModification_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ShapeCustom.delete_ShapeCustom_TrsfModification

# Register ShapeCustom_TrsfModification in _ShapeCustom:
_ShapeCustom.ShapeCustom_TrsfModification_swigregister(ShapeCustom_TrsfModification)

class ShapeCustom_ConvertToBSpline(ShapeCustom_Modification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SetExtrusionMode = _swig_new_instance_method(_ShapeCustom.ShapeCustom_ConvertToBSpline_SetExtrusionMode)
    SetOffsetMode = _swig_new_instance_method(_ShapeCustom.ShapeCustom_ConvertToBSpline_SetOffsetMode)
    SetPlaneMode = _swig_new_instance_method(_ShapeCustom.ShapeCustom_ConvertToBSpline_SetPlaneMode)
    SetRevolutionMode = _swig_new_instance_method(_ShapeCustom.ShapeCustom_ConvertToBSpline_SetRevolutionMode)

    def __init__(self, *args):
        r""":rtype: None"""
        _ShapeCustom.ShapeCustom_ConvertToBSpline_swiginit(self, _ShapeCustom.new_ShapeCustom_ConvertToBSpline(*args))


    @staticmethod
    def DownCast(t):
      return Handle_ShapeCustom_ConvertToBSpline_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ShapeCustom.delete_ShapeCustom_ConvertToBSpline

# Register ShapeCustom_ConvertToBSpline in _ShapeCustom:
_ShapeCustom.ShapeCustom_ConvertToBSpline_swigregister(ShapeCustom_ConvertToBSpline)

class ShapeCustom_DirectModification(ShapeCustom_Modification):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r""":rtype: None"""
        _ShapeCustom.ShapeCustom_DirectModification_swiginit(self, _ShapeCustom.new_ShapeCustom_DirectModification(*args))


    @staticmethod
    def DownCast(t):
      return Handle_ShapeCustom_DirectModification_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _ShapeCustom.delete_ShapeCustom_DirectModification

# Register ShapeCustom_DirectModification in _ShapeCustom:
_ShapeCustom.ShapeCustom_DirectModification_swigregister(ShapeCustom_DirectModification)



