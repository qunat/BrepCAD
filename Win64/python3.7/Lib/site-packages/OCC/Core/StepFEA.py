# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
StepFEA module, see official documentation at
https://www.opencascade.com/doc/occt-7.4.0/refman/html/package_stepfea.html
"""

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _StepFEA
else:
    import _StepFEA

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _StepFEA.SWIG_PyInstanceMethod_New
_swig_new_static_method = _StepFEA.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _StepFEA.delete_SwigPyIterator
    value = _swig_new_instance_method(_StepFEA.SwigPyIterator_value)
    incr = _swig_new_instance_method(_StepFEA.SwigPyIterator_incr)
    decr = _swig_new_instance_method(_StepFEA.SwigPyIterator_decr)
    distance = _swig_new_instance_method(_StepFEA.SwigPyIterator_distance)
    equal = _swig_new_instance_method(_StepFEA.SwigPyIterator_equal)
    copy = _swig_new_instance_method(_StepFEA.SwigPyIterator_copy)
    next = _swig_new_instance_method(_StepFEA.SwigPyIterator_next)
    __next__ = _swig_new_instance_method(_StepFEA.SwigPyIterator___next__)
    previous = _swig_new_instance_method(_StepFEA.SwigPyIterator_previous)
    advance = _swig_new_instance_method(_StepFEA.SwigPyIterator_advance)
    __eq__ = _swig_new_instance_method(_StepFEA.SwigPyIterator___eq__)
    __ne__ = _swig_new_instance_method(_StepFEA.SwigPyIterator___ne__)
    __iadd__ = _swig_new_instance_method(_StepFEA.SwigPyIterator___iadd__)
    __isub__ = _swig_new_instance_method(_StepFEA.SwigPyIterator___isub__)
    __add__ = _swig_new_instance_method(_StepFEA.SwigPyIterator___add__)
    __sub__ = _swig_new_instance_method(_StepFEA.SwigPyIterator___sub__)
    def __iter__(self):
        return self

# Register SwigPyIterator in _StepFEA:
_StepFEA.SwigPyIterator_swigregister(SwigPyIterator)


def _dumps_object(klass):
    """ Overwrite default string output for any wrapped object.
    By default, __repr__ method returns something like:
    <OCC.Core.TopoDS.TopoDS_Shape; proxy of <Swig Object of type 'TopoDS_Shape *' at 0x02BB0758> >
    This is too much verbose.
    We prefer :
    <class 'gp_Pnt'>
    or
    <class 'TopoDS_Shape'>
    """
    klass_name = str(klass.__class__).split(".")[3].split("'")[0]
    repr_string = "<class '" + klass_name + "'"
# for TopoDS_Shape, we also look for the base type
    if klass_name == "TopoDS_Shape":
        if klass.IsNull():
            repr_string += ": Null>"
            return repr_string
        st = klass.ShapeType()
        types = {OCC.Core.TopAbs.TopAbs_VERTEX: "Vertex",
                 OCC.Core.TopAbs.TopAbs_SOLID: "Solid",
                 OCC.Core.TopAbs.TopAbs_EDGE: "Edge",
                 OCC.Core.TopAbs.TopAbs_FACE: "Face",
                 OCC.Core.TopAbs.TopAbs_SHELL: "Shell",
                 OCC.Core.TopAbs.TopAbs_WIRE: "Wire",
                 OCC.Core.TopAbs.TopAbs_COMPOUND: "Compound",
                 OCC.Core.TopAbs.TopAbs_COMPSOLID: "Compsolid"}
        repr_string += "; Type:%s" % types[st]        
    elif hasattr(klass, "IsNull"):
        if klass.IsNull():
            repr_string += "; Null"
    repr_string += ">"
    return repr_string


from six import with_metaclass
import warnings
from OCC.Wrapper.wrapper_utils import Proxy, deprecated

import OCC.Core.Standard
import OCC.Core.NCollection
import OCC.Core.TCollection
import OCC.Core.StepData
import OCC.Core.Interface
import OCC.Core.TColStd
import OCC.Core.Message
import OCC.Core.MoniTool
import OCC.Core.TopoDS
import OCC.Core.TopAbs
import OCC.Core.TopLoc
import OCC.Core.gp
import OCC.Core.OSD
import OCC.Core.StepElement
import OCC.Core.StepRepr
import OCC.Core.StepBasic
import OCC.Core.StepGeom
StepFEA_Volume = _StepFEA.StepFEA_Volume
StepFEA_Cartesian = _StepFEA.StepFEA_Cartesian
StepFEA_Cylindrical = _StepFEA.StepFEA_Cylindrical
StepFEA_Spherical = _StepFEA.StepFEA_Spherical
StepFEA_XTranslation = _StepFEA.StepFEA_XTranslation
StepFEA_YTranslation = _StepFEA.StepFEA_YTranslation
StepFEA_ZTranslation = _StepFEA.StepFEA_ZTranslation
StepFEA_XRotation = _StepFEA.StepFEA_XRotation
StepFEA_YRotation = _StepFEA.StepFEA_YRotation
StepFEA_ZRotation = _StepFEA.StepFEA_ZRotation
StepFEA_Warp = _StepFEA.StepFEA_Warp
StepFEA_ElementEdge = _StepFEA.StepFEA_ElementEdge
StepFEA_Unspecified = _StepFEA.StepFEA_Unspecified
Handle_StepFEA_Curve3dElementProperty_Create = _StepFEA.Handle_StepFEA_Curve3dElementProperty_Create
Handle_StepFEA_Curve3dElementProperty_DownCast = _StepFEA.Handle_StepFEA_Curve3dElementProperty_DownCast
Handle_StepFEA_Curve3dElementProperty_IsNull = _StepFEA.Handle_StepFEA_Curve3dElementProperty_IsNull
Handle_StepFEA_CurveElementEndOffset_Create = _StepFEA.Handle_StepFEA_CurveElementEndOffset_Create
Handle_StepFEA_CurveElementEndOffset_DownCast = _StepFEA.Handle_StepFEA_CurveElementEndOffset_DownCast
Handle_StepFEA_CurveElementEndOffset_IsNull = _StepFEA.Handle_StepFEA_CurveElementEndOffset_IsNull
Handle_StepFEA_CurveElementEndRelease_Create = _StepFEA.Handle_StepFEA_CurveElementEndRelease_Create
Handle_StepFEA_CurveElementEndRelease_DownCast = _StepFEA.Handle_StepFEA_CurveElementEndRelease_DownCast
Handle_StepFEA_CurveElementEndRelease_IsNull = _StepFEA.Handle_StepFEA_CurveElementEndRelease_IsNull
Handle_StepFEA_CurveElementInterval_Create = _StepFEA.Handle_StepFEA_CurveElementInterval_Create
Handle_StepFEA_CurveElementInterval_DownCast = _StepFEA.Handle_StepFEA_CurveElementInterval_DownCast
Handle_StepFEA_CurveElementInterval_IsNull = _StepFEA.Handle_StepFEA_CurveElementInterval_IsNull
Handle_StepFEA_CurveElementLocation_Create = _StepFEA.Handle_StepFEA_CurveElementLocation_Create
Handle_StepFEA_CurveElementLocation_DownCast = _StepFEA.Handle_StepFEA_CurveElementLocation_DownCast
Handle_StepFEA_CurveElementLocation_IsNull = _StepFEA.Handle_StepFEA_CurveElementLocation_IsNull
Handle_StepFEA_DegreeOfFreedomMember_Create = _StepFEA.Handle_StepFEA_DegreeOfFreedomMember_Create
Handle_StepFEA_DegreeOfFreedomMember_DownCast = _StepFEA.Handle_StepFEA_DegreeOfFreedomMember_DownCast
Handle_StepFEA_DegreeOfFreedomMember_IsNull = _StepFEA.Handle_StepFEA_DegreeOfFreedomMember_IsNull
Handle_StepFEA_ElementGeometricRelationship_Create = _StepFEA.Handle_StepFEA_ElementGeometricRelationship_Create
Handle_StepFEA_ElementGeometricRelationship_DownCast = _StepFEA.Handle_StepFEA_ElementGeometricRelationship_DownCast
Handle_StepFEA_ElementGeometricRelationship_IsNull = _StepFEA.Handle_StepFEA_ElementGeometricRelationship_IsNull
Handle_StepFEA_ElementRepresentation_Create = _StepFEA.Handle_StepFEA_ElementRepresentation_Create
Handle_StepFEA_ElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_ElementRepresentation_DownCast
Handle_StepFEA_ElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_ElementRepresentation_IsNull
Handle_StepFEA_FeaAxis2Placement3d_Create = _StepFEA.Handle_StepFEA_FeaAxis2Placement3d_Create
Handle_StepFEA_FeaAxis2Placement3d_DownCast = _StepFEA.Handle_StepFEA_FeaAxis2Placement3d_DownCast
Handle_StepFEA_FeaAxis2Placement3d_IsNull = _StepFEA.Handle_StepFEA_FeaAxis2Placement3d_IsNull
Handle_StepFEA_FeaCurveSectionGeometricRelationship_Create = _StepFEA.Handle_StepFEA_FeaCurveSectionGeometricRelationship_Create
Handle_StepFEA_FeaCurveSectionGeometricRelationship_DownCast = _StepFEA.Handle_StepFEA_FeaCurveSectionGeometricRelationship_DownCast
Handle_StepFEA_FeaCurveSectionGeometricRelationship_IsNull = _StepFEA.Handle_StepFEA_FeaCurveSectionGeometricRelationship_IsNull
Handle_StepFEA_FeaGroup_Create = _StepFEA.Handle_StepFEA_FeaGroup_Create
Handle_StepFEA_FeaGroup_DownCast = _StepFEA.Handle_StepFEA_FeaGroup_DownCast
Handle_StepFEA_FeaGroup_IsNull = _StepFEA.Handle_StepFEA_FeaGroup_IsNull
Handle_StepFEA_FeaMaterialPropertyRepresentation_Create = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentation_Create
Handle_StepFEA_FeaMaterialPropertyRepresentation_DownCast = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentation_DownCast
Handle_StepFEA_FeaMaterialPropertyRepresentation_IsNull = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentation_IsNull
Handle_StepFEA_FeaMaterialPropertyRepresentationItem_Create = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentationItem_Create
Handle_StepFEA_FeaMaterialPropertyRepresentationItem_DownCast = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentationItem_DownCast
Handle_StepFEA_FeaMaterialPropertyRepresentationItem_IsNull = _StepFEA.Handle_StepFEA_FeaMaterialPropertyRepresentationItem_IsNull
Handle_StepFEA_FeaModel_Create = _StepFEA.Handle_StepFEA_FeaModel_Create
Handle_StepFEA_FeaModel_DownCast = _StepFEA.Handle_StepFEA_FeaModel_DownCast
Handle_StepFEA_FeaModel_IsNull = _StepFEA.Handle_StepFEA_FeaModel_IsNull
Handle_StepFEA_FeaModelDefinition_Create = _StepFEA.Handle_StepFEA_FeaModelDefinition_Create
Handle_StepFEA_FeaModelDefinition_DownCast = _StepFEA.Handle_StepFEA_FeaModelDefinition_DownCast
Handle_StepFEA_FeaModelDefinition_IsNull = _StepFEA.Handle_StepFEA_FeaModelDefinition_IsNull
Handle_StepFEA_FeaParametricPoint_Create = _StepFEA.Handle_StepFEA_FeaParametricPoint_Create
Handle_StepFEA_FeaParametricPoint_DownCast = _StepFEA.Handle_StepFEA_FeaParametricPoint_DownCast
Handle_StepFEA_FeaParametricPoint_IsNull = _StepFEA.Handle_StepFEA_FeaParametricPoint_IsNull
Handle_StepFEA_FeaRepresentationItem_Create = _StepFEA.Handle_StepFEA_FeaRepresentationItem_Create
Handle_StepFEA_FeaRepresentationItem_DownCast = _StepFEA.Handle_StepFEA_FeaRepresentationItem_DownCast
Handle_StepFEA_FeaRepresentationItem_IsNull = _StepFEA.Handle_StepFEA_FeaRepresentationItem_IsNull
Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_Create = _StepFEA.Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_Create
Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_DownCast = _StepFEA.Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_DownCast
Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_IsNull = _StepFEA.Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_IsNull
Handle_StepFEA_FreedomAndCoefficient_Create = _StepFEA.Handle_StepFEA_FreedomAndCoefficient_Create
Handle_StepFEA_FreedomAndCoefficient_DownCast = _StepFEA.Handle_StepFEA_FreedomAndCoefficient_DownCast
Handle_StepFEA_FreedomAndCoefficient_IsNull = _StepFEA.Handle_StepFEA_FreedomAndCoefficient_IsNull
Handle_StepFEA_FreedomsList_Create = _StepFEA.Handle_StepFEA_FreedomsList_Create
Handle_StepFEA_FreedomsList_DownCast = _StepFEA.Handle_StepFEA_FreedomsList_DownCast
Handle_StepFEA_FreedomsList_IsNull = _StepFEA.Handle_StepFEA_FreedomsList_IsNull
Handle_StepFEA_NodeDefinition_Create = _StepFEA.Handle_StepFEA_NodeDefinition_Create
Handle_StepFEA_NodeDefinition_DownCast = _StepFEA.Handle_StepFEA_NodeDefinition_DownCast
Handle_StepFEA_NodeDefinition_IsNull = _StepFEA.Handle_StepFEA_NodeDefinition_IsNull
Handle_StepFEA_NodeRepresentation_Create = _StepFEA.Handle_StepFEA_NodeRepresentation_Create
Handle_StepFEA_NodeRepresentation_DownCast = _StepFEA.Handle_StepFEA_NodeRepresentation_DownCast
Handle_StepFEA_NodeRepresentation_IsNull = _StepFEA.Handle_StepFEA_NodeRepresentation_IsNull
Handle_StepFEA_NodeSet_Create = _StepFEA.Handle_StepFEA_NodeSet_Create
Handle_StepFEA_NodeSet_DownCast = _StepFEA.Handle_StepFEA_NodeSet_DownCast
Handle_StepFEA_NodeSet_IsNull = _StepFEA.Handle_StepFEA_NodeSet_IsNull
Handle_StepFEA_SymmetricTensor23dMember_Create = _StepFEA.Handle_StepFEA_SymmetricTensor23dMember_Create
Handle_StepFEA_SymmetricTensor23dMember_DownCast = _StepFEA.Handle_StepFEA_SymmetricTensor23dMember_DownCast
Handle_StepFEA_SymmetricTensor23dMember_IsNull = _StepFEA.Handle_StepFEA_SymmetricTensor23dMember_IsNull
Handle_StepFEA_SymmetricTensor43dMember_Create = _StepFEA.Handle_StepFEA_SymmetricTensor43dMember_Create
Handle_StepFEA_SymmetricTensor43dMember_DownCast = _StepFEA.Handle_StepFEA_SymmetricTensor43dMember_DownCast
Handle_StepFEA_SymmetricTensor43dMember_IsNull = _StepFEA.Handle_StepFEA_SymmetricTensor43dMember_IsNull
Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_Create
Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_DownCast
Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_IsNull
Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_Create
Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_DownCast
Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_IsNull
Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_Create
Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_DownCast
Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_IsNull
Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_Create
Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_DownCast
Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_IsNull
Handle_StepFEA_Curve3dElementRepresentation_Create = _StepFEA.Handle_StepFEA_Curve3dElementRepresentation_Create
Handle_StepFEA_Curve3dElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_Curve3dElementRepresentation_DownCast
Handle_StepFEA_Curve3dElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_Curve3dElementRepresentation_IsNull
Handle_StepFEA_CurveElementIntervalConstant_Create = _StepFEA.Handle_StepFEA_CurveElementIntervalConstant_Create
Handle_StepFEA_CurveElementIntervalConstant_DownCast = _StepFEA.Handle_StepFEA_CurveElementIntervalConstant_DownCast
Handle_StepFEA_CurveElementIntervalConstant_IsNull = _StepFEA.Handle_StepFEA_CurveElementIntervalConstant_IsNull
Handle_StepFEA_CurveElementIntervalLinearlyVarying_Create = _StepFEA.Handle_StepFEA_CurveElementIntervalLinearlyVarying_Create
Handle_StepFEA_CurveElementIntervalLinearlyVarying_DownCast = _StepFEA.Handle_StepFEA_CurveElementIntervalLinearlyVarying_DownCast
Handle_StepFEA_CurveElementIntervalLinearlyVarying_IsNull = _StepFEA.Handle_StepFEA_CurveElementIntervalLinearlyVarying_IsNull
Handle_StepFEA_DummyNode_Create = _StepFEA.Handle_StepFEA_DummyNode_Create
Handle_StepFEA_DummyNode_DownCast = _StepFEA.Handle_StepFEA_DummyNode_DownCast
Handle_StepFEA_DummyNode_IsNull = _StepFEA.Handle_StepFEA_DummyNode_IsNull
Handle_StepFEA_ElementGroup_Create = _StepFEA.Handle_StepFEA_ElementGroup_Create
Handle_StepFEA_ElementGroup_DownCast = _StepFEA.Handle_StepFEA_ElementGroup_DownCast
Handle_StepFEA_ElementGroup_IsNull = _StepFEA.Handle_StepFEA_ElementGroup_IsNull
Handle_StepFEA_FeaAreaDensity_Create = _StepFEA.Handle_StepFEA_FeaAreaDensity_Create
Handle_StepFEA_FeaAreaDensity_DownCast = _StepFEA.Handle_StepFEA_FeaAreaDensity_DownCast
Handle_StepFEA_FeaAreaDensity_IsNull = _StepFEA.Handle_StepFEA_FeaAreaDensity_IsNull
Handle_StepFEA_FeaLinearElasticity_Create = _StepFEA.Handle_StepFEA_FeaLinearElasticity_Create
Handle_StepFEA_FeaLinearElasticity_DownCast = _StepFEA.Handle_StepFEA_FeaLinearElasticity_DownCast
Handle_StepFEA_FeaLinearElasticity_IsNull = _StepFEA.Handle_StepFEA_FeaLinearElasticity_IsNull
Handle_StepFEA_FeaMassDensity_Create = _StepFEA.Handle_StepFEA_FeaMassDensity_Create
Handle_StepFEA_FeaMassDensity_DownCast = _StepFEA.Handle_StepFEA_FeaMassDensity_DownCast
Handle_StepFEA_FeaMassDensity_IsNull = _StepFEA.Handle_StepFEA_FeaMassDensity_IsNull
Handle_StepFEA_FeaModel3d_Create = _StepFEA.Handle_StepFEA_FeaModel3d_Create
Handle_StepFEA_FeaModel3d_DownCast = _StepFEA.Handle_StepFEA_FeaModel3d_DownCast
Handle_StepFEA_FeaModel3d_IsNull = _StepFEA.Handle_StepFEA_FeaModel3d_IsNull
Handle_StepFEA_FeaMoistureAbsorption_Create = _StepFEA.Handle_StepFEA_FeaMoistureAbsorption_Create
Handle_StepFEA_FeaMoistureAbsorption_DownCast = _StepFEA.Handle_StepFEA_FeaMoistureAbsorption_DownCast
Handle_StepFEA_FeaMoistureAbsorption_IsNull = _StepFEA.Handle_StepFEA_FeaMoistureAbsorption_IsNull
Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_Create = _StepFEA.Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_Create
Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_DownCast = _StepFEA.Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_DownCast
Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_IsNull = _StepFEA.Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_IsNull
Handle_StepFEA_FeaShellBendingStiffness_Create = _StepFEA.Handle_StepFEA_FeaShellBendingStiffness_Create
Handle_StepFEA_FeaShellBendingStiffness_DownCast = _StepFEA.Handle_StepFEA_FeaShellBendingStiffness_DownCast
Handle_StepFEA_FeaShellBendingStiffness_IsNull = _StepFEA.Handle_StepFEA_FeaShellBendingStiffness_IsNull
Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_Create = _StepFEA.Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_Create
Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_DownCast = _StepFEA.Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_DownCast
Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_IsNull = _StepFEA.Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_IsNull
Handle_StepFEA_FeaShellMembraneStiffness_Create = _StepFEA.Handle_StepFEA_FeaShellMembraneStiffness_Create
Handle_StepFEA_FeaShellMembraneStiffness_DownCast = _StepFEA.Handle_StepFEA_FeaShellMembraneStiffness_DownCast
Handle_StepFEA_FeaShellMembraneStiffness_IsNull = _StepFEA.Handle_StepFEA_FeaShellMembraneStiffness_IsNull
Handle_StepFEA_FeaShellShearStiffness_Create = _StepFEA.Handle_StepFEA_FeaShellShearStiffness_Create
Handle_StepFEA_FeaShellShearStiffness_DownCast = _StepFEA.Handle_StepFEA_FeaShellShearStiffness_DownCast
Handle_StepFEA_FeaShellShearStiffness_IsNull = _StepFEA.Handle_StepFEA_FeaShellShearStiffness_IsNull
Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_Create = _StepFEA.Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_Create
Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_DownCast = _StepFEA.Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_DownCast
Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_IsNull = _StepFEA.Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_IsNull
Handle_StepFEA_GeometricNode_Create = _StepFEA.Handle_StepFEA_GeometricNode_Create
Handle_StepFEA_GeometricNode_DownCast = _StepFEA.Handle_StepFEA_GeometricNode_DownCast
Handle_StepFEA_GeometricNode_IsNull = _StepFEA.Handle_StepFEA_GeometricNode_IsNull
Handle_StepFEA_Node_Create = _StepFEA.Handle_StepFEA_Node_Create
Handle_StepFEA_Node_DownCast = _StepFEA.Handle_StepFEA_Node_DownCast
Handle_StepFEA_Node_IsNull = _StepFEA.Handle_StepFEA_Node_IsNull
Handle_StepFEA_NodeGroup_Create = _StepFEA.Handle_StepFEA_NodeGroup_Create
Handle_StepFEA_NodeGroup_DownCast = _StepFEA.Handle_StepFEA_NodeGroup_DownCast
Handle_StepFEA_NodeGroup_IsNull = _StepFEA.Handle_StepFEA_NodeGroup_IsNull
Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_Create = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_Create
Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_DownCast = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_DownCast
Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_IsNull = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_IsNull
Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_Create
Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_DownCast
Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_IsNull
Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_Create = _StepFEA.Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_Create
Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_DownCast
Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_IsNull
Handle_StepFEA_Surface3dElementRepresentation_Create = _StepFEA.Handle_StepFEA_Surface3dElementRepresentation_Create
Handle_StepFEA_Surface3dElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_Surface3dElementRepresentation_DownCast
Handle_StepFEA_Surface3dElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_Surface3dElementRepresentation_IsNull
Handle_StepFEA_Volume3dElementRepresentation_Create = _StepFEA.Handle_StepFEA_Volume3dElementRepresentation_Create
Handle_StepFEA_Volume3dElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_Volume3dElementRepresentation_DownCast
Handle_StepFEA_Volume3dElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_Volume3dElementRepresentation_IsNull
Handle_StepFEA_NodeWithSolutionCoordinateSystem_Create = _StepFEA.Handle_StepFEA_NodeWithSolutionCoordinateSystem_Create
Handle_StepFEA_NodeWithSolutionCoordinateSystem_DownCast = _StepFEA.Handle_StepFEA_NodeWithSolutionCoordinateSystem_DownCast
Handle_StepFEA_NodeWithSolutionCoordinateSystem_IsNull = _StepFEA.Handle_StepFEA_NodeWithSolutionCoordinateSystem_IsNull
Handle_StepFEA_NodeWithVector_Create = _StepFEA.Handle_StepFEA_NodeWithVector_Create
Handle_StepFEA_NodeWithVector_DownCast = _StepFEA.Handle_StepFEA_NodeWithVector_DownCast
Handle_StepFEA_NodeWithVector_IsNull = _StepFEA.Handle_StepFEA_NodeWithVector_IsNull
Handle_StepFEA_HArray1OfCurveElementInterval_Create = _StepFEA.Handle_StepFEA_HArray1OfCurveElementInterval_Create
Handle_StepFEA_HArray1OfCurveElementInterval_DownCast = _StepFEA.Handle_StepFEA_HArray1OfCurveElementInterval_DownCast
Handle_StepFEA_HArray1OfCurveElementInterval_IsNull = _StepFEA.Handle_StepFEA_HArray1OfCurveElementInterval_IsNull
Handle_StepFEA_HArray1OfCurveElementEndOffset_Create = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndOffset_Create
Handle_StepFEA_HArray1OfCurveElementEndOffset_DownCast = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndOffset_DownCast
Handle_StepFEA_HArray1OfCurveElementEndOffset_IsNull = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndOffset_IsNull
Handle_StepFEA_HArray1OfElementRepresentation_Create = _StepFEA.Handle_StepFEA_HArray1OfElementRepresentation_Create
Handle_StepFEA_HArray1OfElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_HArray1OfElementRepresentation_DownCast
Handle_StepFEA_HArray1OfElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_HArray1OfElementRepresentation_IsNull
Handle_StepFEA_HArray1OfCurveElementEndRelease_Create = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndRelease_Create
Handle_StepFEA_HArray1OfCurveElementEndRelease_DownCast = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndRelease_DownCast
Handle_StepFEA_HArray1OfCurveElementEndRelease_IsNull = _StepFEA.Handle_StepFEA_HArray1OfCurveElementEndRelease_IsNull
Handle_StepFEA_HArray1OfDegreeOfFreedom_Create = _StepFEA.Handle_StepFEA_HArray1OfDegreeOfFreedom_Create
Handle_StepFEA_HArray1OfDegreeOfFreedom_DownCast = _StepFEA.Handle_StepFEA_HArray1OfDegreeOfFreedom_DownCast
Handle_StepFEA_HArray1OfDegreeOfFreedom_IsNull = _StepFEA.Handle_StepFEA_HArray1OfDegreeOfFreedom_IsNull
Handle_StepFEA_HArray1OfNodeRepresentation_Create = _StepFEA.Handle_StepFEA_HArray1OfNodeRepresentation_Create
Handle_StepFEA_HArray1OfNodeRepresentation_DownCast = _StepFEA.Handle_StepFEA_HArray1OfNodeRepresentation_DownCast
Handle_StepFEA_HArray1OfNodeRepresentation_IsNull = _StepFEA.Handle_StepFEA_HArray1OfNodeRepresentation_IsNull
Handle_StepFEA_HSequenceOfElementRepresentation_Create = _StepFEA.Handle_StepFEA_HSequenceOfElementRepresentation_Create
Handle_StepFEA_HSequenceOfElementRepresentation_DownCast = _StepFEA.Handle_StepFEA_HSequenceOfElementRepresentation_DownCast
Handle_StepFEA_HSequenceOfElementRepresentation_IsNull = _StepFEA.Handle_StepFEA_HSequenceOfElementRepresentation_IsNull
Handle_StepFEA_HSequenceOfElementGeometricRelationship_Create = _StepFEA.Handle_StepFEA_HSequenceOfElementGeometricRelationship_Create
Handle_StepFEA_HSequenceOfElementGeometricRelationship_DownCast = _StepFEA.Handle_StepFEA_HSequenceOfElementGeometricRelationship_DownCast
Handle_StepFEA_HSequenceOfElementGeometricRelationship_IsNull = _StepFEA.Handle_StepFEA_HSequenceOfElementGeometricRelationship_IsNull
Handle_StepFEA_HSequenceOfNodeRepresentation_Create = _StepFEA.Handle_StepFEA_HSequenceOfNodeRepresentation_Create
Handle_StepFEA_HSequenceOfNodeRepresentation_DownCast = _StepFEA.Handle_StepFEA_HSequenceOfNodeRepresentation_DownCast
Handle_StepFEA_HSequenceOfNodeRepresentation_IsNull = _StepFEA.Handle_StepFEA_HSequenceOfNodeRepresentation_IsNull
Handle_StepFEA_HSequenceOfCurve3dElementProperty_Create = _StepFEA.Handle_StepFEA_HSequenceOfCurve3dElementProperty_Create
Handle_StepFEA_HSequenceOfCurve3dElementProperty_DownCast = _StepFEA.Handle_StepFEA_HSequenceOfCurve3dElementProperty_DownCast
Handle_StepFEA_HSequenceOfCurve3dElementProperty_IsNull = _StepFEA.Handle_StepFEA_HSequenceOfCurve3dElementProperty_IsNull
class StepFEA_SequenceOfElementRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_SequenceOfElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_SequenceOfElementRepresentation(*args))
    Size = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Length)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Upper)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_IsEmpty)
    Reverse = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Reverse)
    Exchange = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Exchange)
    delNode = _swig_new_static_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_delNode)
    Clear = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Clear)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Assign)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Set)
    Remove = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Remove)
    Append = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Append)
    Prepend = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Prepend)
    InsertBefore = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_InsertBefore)
    InsertAfter = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_InsertAfter)
    Split = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Split)
    First = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementRepresentation_SetValue)
    __swig_destroy__ = _StepFEA.delete_StepFEA_SequenceOfElementRepresentation

# Register StepFEA_SequenceOfElementRepresentation in _StepFEA:
_StepFEA.StepFEA_SequenceOfElementRepresentation_swigregister(StepFEA_SequenceOfElementRepresentation)
StepFEA_SequenceOfElementRepresentation_delNode = _StepFEA.StepFEA_SequenceOfElementRepresentation_delNode

class StepFEA_SequenceOfCurve3dElementProperty(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_SequenceOfCurve3dElementProperty_swiginit(self, _StepFEA.new_StepFEA_SequenceOfCurve3dElementProperty(*args))
    Size = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Length)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Upper)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_IsEmpty)
    Reverse = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Reverse)
    Exchange = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Exchange)
    delNode = _swig_new_static_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_delNode)
    Clear = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Clear)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Assign)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Set)
    Remove = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Remove)
    Append = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Append)
    Prepend = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Prepend)
    InsertBefore = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_InsertBefore)
    InsertAfter = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_InsertAfter)
    Split = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Split)
    First = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_SetValue)
    __swig_destroy__ = _StepFEA.delete_StepFEA_SequenceOfCurve3dElementProperty

# Register StepFEA_SequenceOfCurve3dElementProperty in _StepFEA:
_StepFEA.StepFEA_SequenceOfCurve3dElementProperty_swigregister(StepFEA_SequenceOfCurve3dElementProperty)
StepFEA_SequenceOfCurve3dElementProperty_delNode = _StepFEA.StepFEA_SequenceOfCurve3dElementProperty_delNode

class StepFEA_SequenceOfNodeRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_SequenceOfNodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_SequenceOfNodeRepresentation(*args))
    Size = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Length)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Upper)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_IsEmpty)
    Reverse = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Reverse)
    Exchange = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Exchange)
    delNode = _swig_new_static_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_delNode)
    Clear = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Clear)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Assign)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Set)
    Remove = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Remove)
    Append = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Append)
    Prepend = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Prepend)
    InsertBefore = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_InsertBefore)
    InsertAfter = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_InsertAfter)
    Split = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Split)
    First = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfNodeRepresentation_SetValue)
    __swig_destroy__ = _StepFEA.delete_StepFEA_SequenceOfNodeRepresentation

# Register StepFEA_SequenceOfNodeRepresentation in _StepFEA:
_StepFEA.StepFEA_SequenceOfNodeRepresentation_swigregister(StepFEA_SequenceOfNodeRepresentation)
StepFEA_SequenceOfNodeRepresentation_delNode = _StepFEA.StepFEA_SequenceOfNodeRepresentation_delNode

class StepFEA_SequenceOfElementGeometricRelationship(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_SequenceOfElementGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_SequenceOfElementGeometricRelationship(*args))
    Size = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Length)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Upper)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_IsEmpty)
    Reverse = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Reverse)
    Exchange = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Exchange)
    delNode = _swig_new_static_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_delNode)
    Clear = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Clear)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Assign)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Set)
    Remove = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Remove)
    Append = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Append)
    Prepend = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Prepend)
    InsertBefore = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_InsertBefore)
    InsertAfter = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_InsertAfter)
    Split = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Split)
    First = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_SetValue)
    __swig_destroy__ = _StepFEA.delete_StepFEA_SequenceOfElementGeometricRelationship

# Register StepFEA_SequenceOfElementGeometricRelationship in _StepFEA:
_StepFEA.StepFEA_SequenceOfElementGeometricRelationship_swigregister(StepFEA_SequenceOfElementGeometricRelationship)
StepFEA_SequenceOfElementGeometricRelationship_delNode = _StepFEA.StepFEA_SequenceOfElementGeometricRelationship_delNode

class StepFEA_Array1OfDegreeOfFreedom(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfDegreeOfFreedom_swiginit(self, _StepFEA.new_StepFEA_Array1OfDegreeOfFreedom(*args))
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Init)
    Size = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Length)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_IsEmpty)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Upper)
    IsDeletable = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_IsAllocated)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Assign)
    Move = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Move)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Set)
    First = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_SetValue)
    Resize = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfDegreeOfFreedom_Resize)
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfDegreeOfFreedom

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepFEA_Array1OfDegreeOfFreedom in _StepFEA:
_StepFEA.StepFEA_Array1OfDegreeOfFreedom_swigregister(StepFEA_Array1OfDegreeOfFreedom)

class StepFEA_Array1OfCurveElementEndRelease(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfCurveElementEndRelease_swiginit(self, _StepFEA.new_StepFEA_Array1OfCurveElementEndRelease(*args))
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Init)
    Size = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Length)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_IsEmpty)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Upper)
    IsDeletable = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_IsAllocated)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Assign)
    Move = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Move)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Set)
    First = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_SetValue)
    Resize = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndRelease_Resize)
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfCurveElementEndRelease

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepFEA_Array1OfCurveElementEndRelease in _StepFEA:
_StepFEA.StepFEA_Array1OfCurveElementEndRelease_swigregister(StepFEA_Array1OfCurveElementEndRelease)

class StepFEA_Array1OfCurveElementInterval(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfCurveElementInterval_swiginit(self, _StepFEA.new_StepFEA_Array1OfCurveElementInterval(*args))
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Init)
    Size = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Length)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_IsEmpty)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Upper)
    IsDeletable = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_IsAllocated)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Assign)
    Move = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Move)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Set)
    First = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_SetValue)
    Resize = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementInterval_Resize)
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfCurveElementInterval

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepFEA_Array1OfCurveElementInterval in _StepFEA:
_StepFEA.StepFEA_Array1OfCurveElementInterval_swigregister(StepFEA_Array1OfCurveElementInterval)

class StepFEA_Array1OfNodeRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfNodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_Array1OfNodeRepresentation(*args))
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Init)
    Size = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Length)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_IsEmpty)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Upper)
    IsDeletable = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_IsAllocated)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Assign)
    Move = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Move)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Set)
    First = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_SetValue)
    Resize = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfNodeRepresentation_Resize)
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfNodeRepresentation

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepFEA_Array1OfNodeRepresentation in _StepFEA:
_StepFEA.StepFEA_Array1OfNodeRepresentation_swigregister(StepFEA_Array1OfNodeRepresentation)

class StepFEA_Array1OfElementRepresentation(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_Array1OfElementRepresentation(*args))
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Init)
    Size = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Length)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_IsEmpty)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Upper)
    IsDeletable = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_IsAllocated)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Assign)
    Move = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Move)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Set)
    First = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_SetValue)
    Resize = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfElementRepresentation_Resize)
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfElementRepresentation

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepFEA_Array1OfElementRepresentation in _StepFEA:
_StepFEA.StepFEA_Array1OfElementRepresentation_swigregister(StepFEA_Array1OfElementRepresentation)

class StepFEA_Array1OfCurveElementEndOffset(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    begin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_begin)
    end = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_end)
    cbegin = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_cbegin)
    cend = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_cend)

    def __init__(self, *args):
        _StepFEA.StepFEA_Array1OfCurveElementEndOffset_swiginit(self, _StepFEA.new_StepFEA_Array1OfCurveElementEndOffset(*args))
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Init)
    Size = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Size)
    Length = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Length)
    IsEmpty = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_IsEmpty)
    Lower = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Lower)
    Upper = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Upper)
    IsDeletable = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_IsDeletable)
    IsAllocated = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_IsAllocated)
    Assign = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Assign)
    Move = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Move)
    Set = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Set)
    First = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_First)
    ChangeFirst = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_ChangeFirst)
    Last = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Last)
    ChangeLast = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_ChangeLast)
    Value = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Value)
    ChangeValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_ChangeValue)
    __call__ = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset___call__)
    SetValue = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_SetValue)
    Resize = _swig_new_instance_method(_StepFEA.StepFEA_Array1OfCurveElementEndOffset_Resize)
    __swig_destroy__ = _StepFEA.delete_StepFEA_Array1OfCurveElementEndOffset

    def __getitem__(self, index):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            return self.Value(index + self.Lower())

    def __setitem__(self, index, value):
        if index + self.Lower() > self.Upper():
            raise IndexError("index out of range")
        else:
            self.SetValue(index + self.Lower(), value)

    def __len__(self):
        return self.Length()

    def __iter__(self):
        self.low = self.Lower()
        self.up = self.Upper()
        self.current = self.Lower() - 1
        return self

    def next(self):
        if self.current >= self.Upper():
            raise StopIteration
        else:
            self.current += 1
        return self.Value(self.current)

    __next__ = next


# Register StepFEA_Array1OfCurveElementEndOffset in _StepFEA:
_StepFEA.StepFEA_Array1OfCurveElementEndOffset_swigregister(StepFEA_Array1OfCurveElementEndOffset)

class StepFEA_Curve3dElementProperty(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Description = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_Description)
    EndOffsets = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_EndOffsets)
    EndReleases = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_EndReleases)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_Init)
    IntervalDefinitions = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_IntervalDefinitions)
    PropertyId = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_PropertyId)
    SetDescription = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_SetDescription)
    SetEndOffsets = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_SetEndOffsets)
    SetEndReleases = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_SetEndReleases)
    SetIntervalDefinitions = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_SetIntervalDefinitions)
    SetPropertyId = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementProperty_SetPropertyId)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Curve3dElementProperty_swiginit(self, _StepFEA.new_StepFEA_Curve3dElementProperty(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Curve3dElementProperty_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Curve3dElementProperty

# Register StepFEA_Curve3dElementProperty in _StepFEA:
_StepFEA.StepFEA_Curve3dElementProperty_swigregister(StepFEA_Curve3dElementProperty)

class StepFEA_CurveElementEndCoordinateSystem(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AlignedCurve3dElementCoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndCoordinateSystem_AlignedCurve3dElementCoordinateSystem)
    FeaAxis2Placement3d = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndCoordinateSystem_FeaAxis2Placement3d)
    ParametricCurve3dElementCoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndCoordinateSystem_ParametricCurve3dElementCoordinateSystem)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementEndCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_CurveElementEndCoordinateSystem(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementEndCoordinateSystem

# Register StepFEA_CurveElementEndCoordinateSystem in _StepFEA:
_StepFEA.StepFEA_CurveElementEndCoordinateSystem_swigregister(StepFEA_CurveElementEndCoordinateSystem)

class StepFEA_CurveElementEndOffset(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndOffset_CoordinateSystem)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndOffset_Init)
    OffsetVector = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndOffset_OffsetVector)
    SetCoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndOffset_SetCoordinateSystem)
    SetOffsetVector = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndOffset_SetOffsetVector)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementEndOffset_swiginit(self, _StepFEA.new_StepFEA_CurveElementEndOffset(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementEndOffset_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementEndOffset

# Register StepFEA_CurveElementEndOffset in _StepFEA:
_StepFEA.StepFEA_CurveElementEndOffset_swigregister(StepFEA_CurveElementEndOffset)

class StepFEA_CurveElementEndRelease(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndRelease_CoordinateSystem)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndRelease_Init)
    Releases = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndRelease_Releases)
    SetCoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndRelease_SetCoordinateSystem)
    SetReleases = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementEndRelease_SetReleases)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementEndRelease_swiginit(self, _StepFEA.new_StepFEA_CurveElementEndRelease(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementEndRelease_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementEndRelease

# Register StepFEA_CurveElementEndRelease in _StepFEA:
_StepFEA.StepFEA_CurveElementEndRelease_swigregister(StepFEA_CurveElementEndRelease)

class StepFEA_CurveElementInterval(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    EuAngles = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementInterval_EuAngles)
    FinishPosition = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementInterval_FinishPosition)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementInterval_Init)
    SetEuAngles = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementInterval_SetEuAngles)
    SetFinishPosition = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementInterval_SetFinishPosition)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementInterval_swiginit(self, _StepFEA.new_StepFEA_CurveElementInterval(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementInterval_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementInterval

# Register StepFEA_CurveElementInterval in _StepFEA:
_StepFEA.StepFEA_CurveElementInterval_swigregister(StepFEA_CurveElementInterval)

class StepFEA_CurveElementLocation(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Coordinate = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementLocation_Coordinate)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementLocation_Init)
    SetCoordinate = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementLocation_SetCoordinate)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementLocation_swiginit(self, _StepFEA.new_StepFEA_CurveElementLocation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementLocation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementLocation

# Register StepFEA_CurveElementLocation in _StepFEA:
_StepFEA.StepFEA_CurveElementLocation_swigregister(StepFEA_CurveElementLocation)

class StepFEA_DegreeOfFreedom(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ApplicationDefinedDegreeOfFreedom = _swig_new_instance_method(_StepFEA.StepFEA_DegreeOfFreedom_ApplicationDefinedDegreeOfFreedom)
    EnumeratedDegreeOfFreedom = _swig_new_instance_method(_StepFEA.StepFEA_DegreeOfFreedom_EnumeratedDegreeOfFreedom)
    SetApplicationDefinedDegreeOfFreedom = _swig_new_instance_method(_StepFEA.StepFEA_DegreeOfFreedom_SetApplicationDefinedDegreeOfFreedom)
    SetEnumeratedDegreeOfFreedom = _swig_new_instance_method(_StepFEA.StepFEA_DegreeOfFreedom_SetEnumeratedDegreeOfFreedom)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_DegreeOfFreedom_swiginit(self, _StepFEA.new_StepFEA_DegreeOfFreedom(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_DegreeOfFreedom

# Register StepFEA_DegreeOfFreedom in _StepFEA:
_StepFEA.StepFEA_DegreeOfFreedom_swigregister(StepFEA_DegreeOfFreedom)

class StepFEA_DegreeOfFreedomMember(OCC.Core.StepData.StepData_SelectNamed):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_DegreeOfFreedomMember_swiginit(self, _StepFEA.new_StepFEA_DegreeOfFreedomMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_DegreeOfFreedomMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_DegreeOfFreedomMember

# Register StepFEA_DegreeOfFreedomMember in _StepFEA:
_StepFEA.StepFEA_DegreeOfFreedomMember_swigregister(StepFEA_DegreeOfFreedomMember)

class StepFEA_ElementGeometricRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Aspect = _swig_new_instance_method(_StepFEA.StepFEA_ElementGeometricRelationship_Aspect)
    ElementRef = _swig_new_instance_method(_StepFEA.StepFEA_ElementGeometricRelationship_ElementRef)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_ElementGeometricRelationship_Init)
    Item = _swig_new_instance_method(_StepFEA.StepFEA_ElementGeometricRelationship_Item)
    SetAspect = _swig_new_instance_method(_StepFEA.StepFEA_ElementGeometricRelationship_SetAspect)
    SetElementRef = _swig_new_instance_method(_StepFEA.StepFEA_ElementGeometricRelationship_SetElementRef)
    SetItem = _swig_new_instance_method(_StepFEA.StepFEA_ElementGeometricRelationship_SetItem)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ElementGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_ElementGeometricRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ElementGeometricRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ElementGeometricRelationship

# Register StepFEA_ElementGeometricRelationship in _StepFEA:
_StepFEA.StepFEA_ElementGeometricRelationship_swigregister(StepFEA_ElementGeometricRelationship)

class StepFEA_ElementOrElementGroup(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ElementGroup = _swig_new_instance_method(_StepFEA.StepFEA_ElementOrElementGroup_ElementGroup)
    ElementRepresentation = _swig_new_instance_method(_StepFEA.StepFEA_ElementOrElementGroup_ElementRepresentation)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ElementOrElementGroup_swiginit(self, _StepFEA.new_StepFEA_ElementOrElementGroup(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ElementOrElementGroup

# Register StepFEA_ElementOrElementGroup in _StepFEA:
_StepFEA.StepFEA_ElementOrElementGroup_swigregister(StepFEA_ElementOrElementGroup)

class StepFEA_ElementRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_ElementRepresentation_Init)
    NodeList = _swig_new_instance_method(_StepFEA.StepFEA_ElementRepresentation_NodeList)
    SetNodeList = _swig_new_instance_method(_StepFEA.StepFEA_ElementRepresentation_SetNodeList)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_ElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ElementRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ElementRepresentation

# Register StepFEA_ElementRepresentation in _StepFEA:
_StepFEA.StepFEA_ElementRepresentation_swigregister(StepFEA_ElementRepresentation)

class StepFEA_FeaAxis2Placement3d(OCC.Core.StepGeom.StepGeom_Axis2Placement3d):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Description = _swig_new_instance_method(_StepFEA.StepFEA_FeaAxis2Placement3d_Description)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaAxis2Placement3d_Init)
    SetDescription = _swig_new_instance_method(_StepFEA.StepFEA_FeaAxis2Placement3d_SetDescription)
    SetSystemType = _swig_new_instance_method(_StepFEA.StepFEA_FeaAxis2Placement3d_SetSystemType)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaAxis2Placement3d_swiginit(self, _StepFEA.new_StepFEA_FeaAxis2Placement3d(*args))
    SystemType = _swig_new_instance_method(_StepFEA.StepFEA_FeaAxis2Placement3d_SystemType)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaAxis2Placement3d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaAxis2Placement3d

# Register StepFEA_FeaAxis2Placement3d in _StepFEA:
_StepFEA.StepFEA_FeaAxis2Placement3d_swigregister(StepFEA_FeaAxis2Placement3d)

class StepFEA_FeaCurveSectionGeometricRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_Init)
    Item = _swig_new_instance_method(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_Item)
    SectionRef = _swig_new_instance_method(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_SectionRef)
    SetItem = _swig_new_instance_method(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_SetItem)
    SetSectionRef = _swig_new_instance_method(_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_SetSectionRef)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_FeaCurveSectionGeometricRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaCurveSectionGeometricRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaCurveSectionGeometricRelationship

# Register StepFEA_FeaCurveSectionGeometricRelationship in _StepFEA:
_StepFEA.StepFEA_FeaCurveSectionGeometricRelationship_swigregister(StepFEA_FeaCurveSectionGeometricRelationship)

class StepFEA_FeaGroup(OCC.Core.StepBasic.StepBasic_Group):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaGroup_Init)
    ModelRef = _swig_new_instance_method(_StepFEA.StepFEA_FeaGroup_ModelRef)
    SetModelRef = _swig_new_instance_method(_StepFEA.StepFEA_FeaGroup_SetModelRef)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaGroup_swiginit(self, _StepFEA.new_StepFEA_FeaGroup(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaGroup_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaGroup

# Register StepFEA_FeaGroup in _StepFEA:
_StepFEA.StepFEA_FeaGroup_swigregister(StepFEA_FeaGroup)

class StepFEA_FeaMaterialPropertyRepresentation(OCC.Core.StepRepr.StepRepr_MaterialPropertyRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaMaterialPropertyRepresentation_swiginit(self, _StepFEA.new_StepFEA_FeaMaterialPropertyRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaMaterialPropertyRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaMaterialPropertyRepresentation

# Register StepFEA_FeaMaterialPropertyRepresentation in _StepFEA:
_StepFEA.StepFEA_FeaMaterialPropertyRepresentation_swigregister(StepFEA_FeaMaterialPropertyRepresentation)

class StepFEA_FeaMaterialPropertyRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaMaterialPropertyRepresentationItem_swiginit(self, _StepFEA.new_StepFEA_FeaMaterialPropertyRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaMaterialPropertyRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaMaterialPropertyRepresentationItem

# Register StepFEA_FeaMaterialPropertyRepresentationItem in _StepFEA:
_StepFEA.StepFEA_FeaMaterialPropertyRepresentationItem_swigregister(StepFEA_FeaMaterialPropertyRepresentationItem)

class StepFEA_FeaModel(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AnalysisType = _swig_new_instance_method(_StepFEA.StepFEA_FeaModel_AnalysisType)
    CreatingSoftware = _swig_new_instance_method(_StepFEA.StepFEA_FeaModel_CreatingSoftware)
    Description = _swig_new_instance_method(_StepFEA.StepFEA_FeaModel_Description)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaModel_Init)
    IntendedAnalysisCode = _swig_new_instance_method(_StepFEA.StepFEA_FeaModel_IntendedAnalysisCode)
    SetAnalysisType = _swig_new_instance_method(_StepFEA.StepFEA_FeaModel_SetAnalysisType)
    SetCreatingSoftware = _swig_new_instance_method(_StepFEA.StepFEA_FeaModel_SetCreatingSoftware)
    SetDescription = _swig_new_instance_method(_StepFEA.StepFEA_FeaModel_SetDescription)
    SetIntendedAnalysisCode = _swig_new_instance_method(_StepFEA.StepFEA_FeaModel_SetIntendedAnalysisCode)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaModel_swiginit(self, _StepFEA.new_StepFEA_FeaModel(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaModel_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaModel

# Register StepFEA_FeaModel in _StepFEA:
_StepFEA.StepFEA_FeaModel_swigregister(StepFEA_FeaModel)

class StepFEA_FeaModelDefinition(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaModelDefinition_swiginit(self, _StepFEA.new_StepFEA_FeaModelDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaModelDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaModelDefinition

# Register StepFEA_FeaModelDefinition in _StepFEA:
_StepFEA.StepFEA_FeaModelDefinition_swigregister(StepFEA_FeaModelDefinition)

class StepFEA_FeaParametricPoint(OCC.Core.StepGeom.StepGeom_Point):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Coordinates = _swig_new_instance_method(_StepFEA.StepFEA_FeaParametricPoint_Coordinates)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaParametricPoint_Init)
    SetCoordinates = _swig_new_instance_method(_StepFEA.StepFEA_FeaParametricPoint_SetCoordinates)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaParametricPoint_swiginit(self, _StepFEA.new_StepFEA_FeaParametricPoint(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaParametricPoint_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaParametricPoint

# Register StepFEA_FeaParametricPoint in _StepFEA:
_StepFEA.StepFEA_FeaParametricPoint_swigregister(StepFEA_FeaParametricPoint)

class StepFEA_FeaRepresentationItem(OCC.Core.StepRepr.StepRepr_RepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaRepresentationItem_swiginit(self, _StepFEA.new_StepFEA_FeaRepresentationItem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaRepresentationItem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaRepresentationItem

# Register StepFEA_FeaRepresentationItem in _StepFEA:
_StepFEA.StepFEA_FeaRepresentationItem_swigregister(StepFEA_FeaRepresentationItem)

class StepFEA_FeaSurfaceSectionGeometricRelationship(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_Init)
    Item = _swig_new_instance_method(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_Item)
    SectionRef = _swig_new_instance_method(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_SectionRef)
    SetItem = _swig_new_instance_method(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_SetItem)
    SetSectionRef = _swig_new_instance_method(_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_SetSectionRef)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_FeaSurfaceSectionGeometricRelationship(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaSurfaceSectionGeometricRelationship_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaSurfaceSectionGeometricRelationship

# Register StepFEA_FeaSurfaceSectionGeometricRelationship in _StepFEA:
_StepFEA.StepFEA_FeaSurfaceSectionGeometricRelationship_swigregister(StepFEA_FeaSurfaceSectionGeometricRelationship)

class StepFEA_FreedomAndCoefficient(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    A = _swig_new_instance_method(_StepFEA.StepFEA_FreedomAndCoefficient_A)
    Freedom = _swig_new_instance_method(_StepFEA.StepFEA_FreedomAndCoefficient_Freedom)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FreedomAndCoefficient_Init)
    SetA = _swig_new_instance_method(_StepFEA.StepFEA_FreedomAndCoefficient_SetA)
    SetFreedom = _swig_new_instance_method(_StepFEA.StepFEA_FreedomAndCoefficient_SetFreedom)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FreedomAndCoefficient_swiginit(self, _StepFEA.new_StepFEA_FreedomAndCoefficient(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FreedomAndCoefficient_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FreedomAndCoefficient

# Register StepFEA_FreedomAndCoefficient in _StepFEA:
_StepFEA.StepFEA_FreedomAndCoefficient_swigregister(StepFEA_FreedomAndCoefficient)

class StepFEA_FreedomsList(OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Freedoms = _swig_new_instance_method(_StepFEA.StepFEA_FreedomsList_Freedoms)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FreedomsList_Init)
    SetFreedoms = _swig_new_instance_method(_StepFEA.StepFEA_FreedomsList_SetFreedoms)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FreedomsList_swiginit(self, _StepFEA.new_StepFEA_FreedomsList(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FreedomsList_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FreedomsList

# Register StepFEA_FreedomsList in _StepFEA:
_StepFEA.StepFEA_FreedomsList_swigregister(StepFEA_FreedomsList)

class StepFEA_NodeDefinition(OCC.Core.StepRepr.StepRepr_ShapeAspect):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeDefinition_swiginit(self, _StepFEA.new_StepFEA_NodeDefinition(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeDefinition_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeDefinition

# Register StepFEA_NodeDefinition in _StepFEA:
_StepFEA.StepFEA_NodeDefinition_swigregister(StepFEA_NodeDefinition)

class StepFEA_NodeRepresentation(OCC.Core.StepRepr.StepRepr_Representation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_NodeRepresentation_Init)
    ModelRef = _swig_new_instance_method(_StepFEA.StepFEA_NodeRepresentation_ModelRef)
    SetModelRef = _swig_new_instance_method(_StepFEA.StepFEA_NodeRepresentation_SetModelRef)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_NodeRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeRepresentation

# Register StepFEA_NodeRepresentation in _StepFEA:
_StepFEA.StepFEA_NodeRepresentation_swigregister(StepFEA_NodeRepresentation)

class StepFEA_NodeSet(OCC.Core.StepGeom.StepGeom_GeometricRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_NodeSet_Init)
    Nodes = _swig_new_instance_method(_StepFEA.StepFEA_NodeSet_Nodes)
    SetNodes = _swig_new_instance_method(_StepFEA.StepFEA_NodeSet_SetNodes)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeSet_swiginit(self, _StepFEA.new_StepFEA_NodeSet(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeSet_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeSet

# Register StepFEA_NodeSet in _StepFEA:
_StepFEA.StepFEA_NodeSet_swigregister(StepFEA_NodeSet)

class StepFEA_SymmetricTensor22d(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AnisotropicSymmetricTensor22d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor22d_AnisotropicSymmetricTensor22d)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor22d_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor22d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor22d

# Register StepFEA_SymmetricTensor22d in _StepFEA:
_StepFEA.StepFEA_SymmetricTensor22d_swigregister(StepFEA_SymmetricTensor22d)

class StepFEA_SymmetricTensor23d(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AnisotropicSymmetricTensor23d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor23d_AnisotropicSymmetricTensor23d)
    IsotropicSymmetricTensor23d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor23d_IsotropicSymmetricTensor23d)
    OrthotropicSymmetricTensor23d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor23d_OrthotropicSymmetricTensor23d)
    SetAnisotropicSymmetricTensor23d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor23d_SetAnisotropicSymmetricTensor23d)
    SetIsotropicSymmetricTensor23d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor23d_SetIsotropicSymmetricTensor23d)
    SetOrthotropicSymmetricTensor23d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor23d_SetOrthotropicSymmetricTensor23d)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor23d_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor23d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor23d

# Register StepFEA_SymmetricTensor23d in _StepFEA:
_StepFEA.StepFEA_SymmetricTensor23d_swigregister(StepFEA_SymmetricTensor23d)

class StepFEA_SymmetricTensor23dMember(OCC.Core.StepData.StepData_SelectArrReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor23dMember_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor23dMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_SymmetricTensor23dMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor23dMember

# Register StepFEA_SymmetricTensor23dMember in _StepFEA:
_StepFEA.StepFEA_SymmetricTensor23dMember_swigregister(StepFEA_SymmetricTensor23dMember)

class StepFEA_SymmetricTensor42d(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AnisotropicSymmetricTensor42d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor42d_AnisotropicSymmetricTensor42d)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor42d_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor42d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor42d

# Register StepFEA_SymmetricTensor42d in _StepFEA:
_StepFEA.StepFEA_SymmetricTensor42d_swigregister(StepFEA_SymmetricTensor42d)

class StepFEA_SymmetricTensor43d(OCC.Core.StepData.StepData_SelectType):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AnisotropicSymmetricTensor43d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor43d_AnisotropicSymmetricTensor43d)
    FeaColumnNormalisedMonoclinicSymmetricTensor43d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor43d_FeaColumnNormalisedMonoclinicSymmetricTensor43d)
    FeaColumnNormalisedOrthotropicSymmetricTensor43d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor43d_FeaColumnNormalisedOrthotropicSymmetricTensor43d)
    FeaIsoOrthotropicSymmetricTensor43d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor43d_FeaIsoOrthotropicSymmetricTensor43d)
    FeaTransverseIsotropicSymmetricTensor43d = _swig_new_instance_method(_StepFEA.StepFEA_SymmetricTensor43d_FeaTransverseIsotropicSymmetricTensor43d)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor43d_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor43d(*args))

    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor43d

# Register StepFEA_SymmetricTensor43d in _StepFEA:
_StepFEA.StepFEA_SymmetricTensor43d_swigregister(StepFEA_SymmetricTensor43d)

class StepFEA_SymmetricTensor43dMember(OCC.Core.StepData.StepData_SelectArrReal):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_SymmetricTensor43dMember_swiginit(self, _StepFEA.new_StepFEA_SymmetricTensor43dMember(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_SymmetricTensor43dMember_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_SymmetricTensor43dMember

# Register StepFEA_SymmetricTensor43dMember in _StepFEA:
_StepFEA.StepFEA_SymmetricTensor43dMember_swigregister(StepFEA_SymmetricTensor43dMember)

class StepFEA_AlignedCurve3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_CoordinateSystem)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_Init)
    SetCoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_SetCoordinateSystem)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_AlignedCurve3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_AlignedCurve3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_AlignedCurve3dElementCoordinateSystem

# Register StepFEA_AlignedCurve3dElementCoordinateSystem in _StepFEA:
_StepFEA.StepFEA_AlignedCurve3dElementCoordinateSystem_swigregister(StepFEA_AlignedCurve3dElementCoordinateSystem)

class StepFEA_AlignedSurface3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_CoordinateSystem)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_Init)
    SetCoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_SetCoordinateSystem)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_AlignedSurface3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_AlignedSurface3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_AlignedSurface3dElementCoordinateSystem

# Register StepFEA_AlignedSurface3dElementCoordinateSystem in _StepFEA:
_StepFEA.StepFEA_AlignedSurface3dElementCoordinateSystem_swigregister(StepFEA_AlignedSurface3dElementCoordinateSystem)

class StepFEA_ArbitraryVolume3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_CoordinateSystem)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_Init)
    SetCoordinateSystem = _swig_new_instance_method(_StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_SetCoordinateSystem)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_ArbitraryVolume3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ArbitraryVolume3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ArbitraryVolume3dElementCoordinateSystem

# Register StepFEA_ArbitraryVolume3dElementCoordinateSystem in _StepFEA:
_StepFEA.StepFEA_ArbitraryVolume3dElementCoordinateSystem_swigregister(StepFEA_ArbitraryVolume3dElementCoordinateSystem)

class StepFEA_ConstantSurface3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Angle = _swig_new_instance_method(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_Angle)
    Axis = _swig_new_instance_method(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_Axis)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_Init)
    SetAngle = _swig_new_instance_method(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_SetAngle)
    SetAxis = _swig_new_instance_method(_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_SetAxis)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_ConstantSurface3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ConstantSurface3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ConstantSurface3dElementCoordinateSystem

# Register StepFEA_ConstantSurface3dElementCoordinateSystem in _StepFEA:
_StepFEA.StepFEA_ConstantSurface3dElementCoordinateSystem_swigregister(StepFEA_ConstantSurface3dElementCoordinateSystem)

class StepFEA_Curve3dElementRepresentation(StepFEA_ElementRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ElementDescriptor = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementRepresentation_ElementDescriptor)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementRepresentation_Init)
    Material = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementRepresentation_Material)
    ModelRef = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementRepresentation_ModelRef)
    Property = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementRepresentation_Property)
    SetElementDescriptor = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementRepresentation_SetElementDescriptor)
    SetMaterial = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementRepresentation_SetMaterial)
    SetModelRef = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementRepresentation_SetModelRef)
    SetProperty = _swig_new_instance_method(_StepFEA.StepFEA_Curve3dElementRepresentation_SetProperty)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Curve3dElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_Curve3dElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Curve3dElementRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Curve3dElementRepresentation

# Register StepFEA_Curve3dElementRepresentation in _StepFEA:
_StepFEA.StepFEA_Curve3dElementRepresentation_swigregister(StepFEA_Curve3dElementRepresentation)

class StepFEA_CurveElementIntervalConstant(StepFEA_CurveElementInterval):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementIntervalConstant_Init)
    Section = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementIntervalConstant_Section)
    SetSection = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementIntervalConstant_SetSection)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementIntervalConstant_swiginit(self, _StepFEA.new_StepFEA_CurveElementIntervalConstant(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementIntervalConstant_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementIntervalConstant

# Register StepFEA_CurveElementIntervalConstant in _StepFEA:
_StepFEA.StepFEA_CurveElementIntervalConstant_swigregister(StepFEA_CurveElementIntervalConstant)

class StepFEA_CurveElementIntervalLinearlyVarying(StepFEA_CurveElementInterval):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_Init)
    Sections = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_Sections)
    SetSections = _swig_new_instance_method(_StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_SetSections)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_swiginit(self, _StepFEA.new_StepFEA_CurveElementIntervalLinearlyVarying(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_CurveElementIntervalLinearlyVarying_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_CurveElementIntervalLinearlyVarying

# Register StepFEA_CurveElementIntervalLinearlyVarying in _StepFEA:
_StepFEA.StepFEA_CurveElementIntervalLinearlyVarying_swigregister(StepFEA_CurveElementIntervalLinearlyVarying)

class StepFEA_DummyNode(StepFEA_NodeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_DummyNode_swiginit(self, _StepFEA.new_StepFEA_DummyNode(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_DummyNode_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_DummyNode

# Register StepFEA_DummyNode in _StepFEA:
_StepFEA.StepFEA_DummyNode_swigregister(StepFEA_DummyNode)

class StepFEA_ElementGroup(StepFEA_FeaGroup):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Elements = _swig_new_instance_method(_StepFEA.StepFEA_ElementGroup_Elements)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_ElementGroup_Init)
    SetElements = _swig_new_instance_method(_StepFEA.StepFEA_ElementGroup_SetElements)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ElementGroup_swiginit(self, _StepFEA.new_StepFEA_ElementGroup(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ElementGroup_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ElementGroup

# Register StepFEA_ElementGroup in _StepFEA:
_StepFEA.StepFEA_ElementGroup_swigregister(StepFEA_ElementGroup)

class StepFEA_FeaAreaDensity(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstant = _swig_new_instance_method(_StepFEA.StepFEA_FeaAreaDensity_FeaConstant)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaAreaDensity_Init)
    SetFeaConstant = _swig_new_instance_method(_StepFEA.StepFEA_FeaAreaDensity_SetFeaConstant)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaAreaDensity_swiginit(self, _StepFEA.new_StepFEA_FeaAreaDensity(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaAreaDensity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaAreaDensity

# Register StepFEA_FeaAreaDensity in _StepFEA:
_StepFEA.StepFEA_FeaAreaDensity_swigregister(StepFEA_FeaAreaDensity)

class StepFEA_FeaLinearElasticity(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaLinearElasticity_FeaConstants)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaLinearElasticity_Init)
    SetFeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaLinearElasticity_SetFeaConstants)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaLinearElasticity_swiginit(self, _StepFEA.new_StepFEA_FeaLinearElasticity(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaLinearElasticity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaLinearElasticity

# Register StepFEA_FeaLinearElasticity in _StepFEA:
_StepFEA.StepFEA_FeaLinearElasticity_swigregister(StepFEA_FeaLinearElasticity)

class StepFEA_FeaMassDensity(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstant = _swig_new_instance_method(_StepFEA.StepFEA_FeaMassDensity_FeaConstant)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaMassDensity_Init)
    SetFeaConstant = _swig_new_instance_method(_StepFEA.StepFEA_FeaMassDensity_SetFeaConstant)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaMassDensity_swiginit(self, _StepFEA.new_StepFEA_FeaMassDensity(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaMassDensity_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaMassDensity

# Register StepFEA_FeaMassDensity in _StepFEA:
_StepFEA.StepFEA_FeaMassDensity_swigregister(StepFEA_FeaMassDensity)

class StepFEA_FeaModel3d(StepFEA_FeaModel):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaModel3d_swiginit(self, _StepFEA.new_StepFEA_FeaModel3d(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaModel3d_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaModel3d

# Register StepFEA_FeaModel3d in _StepFEA:
_StepFEA.StepFEA_FeaModel3d_swigregister(StepFEA_FeaModel3d)

class StepFEA_FeaMoistureAbsorption(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaMoistureAbsorption_FeaConstants)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaMoistureAbsorption_Init)
    SetFeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaMoistureAbsorption_SetFeaConstants)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaMoistureAbsorption_swiginit(self, _StepFEA.new_StepFEA_FeaMoistureAbsorption(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaMoistureAbsorption_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaMoistureAbsorption

# Register StepFEA_FeaMoistureAbsorption in _StepFEA:
_StepFEA.StepFEA_FeaMoistureAbsorption_swigregister(StepFEA_FeaMoistureAbsorption)

class StepFEA_FeaSecantCoefficientOfLinearThermalExpansion(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_FeaConstants)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_Init)
    ReferenceTemperature = _swig_new_instance_method(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_ReferenceTemperature)
    SetFeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_SetFeaConstants)
    SetReferenceTemperature = _swig_new_instance_method(_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_SetReferenceTemperature)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_swiginit(self, _StepFEA.new_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaSecantCoefficientOfLinearThermalExpansion

# Register StepFEA_FeaSecantCoefficientOfLinearThermalExpansion in _StepFEA:
_StepFEA.StepFEA_FeaSecantCoefficientOfLinearThermalExpansion_swigregister(StepFEA_FeaSecantCoefficientOfLinearThermalExpansion)

class StepFEA_FeaShellBendingStiffness(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellBendingStiffness_FeaConstants)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellBendingStiffness_Init)
    SetFeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellBendingStiffness_SetFeaConstants)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaShellBendingStiffness_swiginit(self, _StepFEA.new_StepFEA_FeaShellBendingStiffness(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaShellBendingStiffness_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaShellBendingStiffness

# Register StepFEA_FeaShellBendingStiffness in _StepFEA:
_StepFEA.StepFEA_FeaShellBendingStiffness_swigregister(StepFEA_FeaShellBendingStiffness)

class StepFEA_FeaShellMembraneBendingCouplingStiffness(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_FeaConstants)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_Init)
    SetFeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_SetFeaConstants)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_swiginit(self, _StepFEA.new_StepFEA_FeaShellMembraneBendingCouplingStiffness(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaShellMembraneBendingCouplingStiffness_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaShellMembraneBendingCouplingStiffness

# Register StepFEA_FeaShellMembraneBendingCouplingStiffness in _StepFEA:
_StepFEA.StepFEA_FeaShellMembraneBendingCouplingStiffness_swigregister(StepFEA_FeaShellMembraneBendingCouplingStiffness)

class StepFEA_FeaShellMembraneStiffness(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellMembraneStiffness_FeaConstants)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellMembraneStiffness_Init)
    SetFeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellMembraneStiffness_SetFeaConstants)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaShellMembraneStiffness_swiginit(self, _StepFEA.new_StepFEA_FeaShellMembraneStiffness(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaShellMembraneStiffness_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaShellMembraneStiffness

# Register StepFEA_FeaShellMembraneStiffness in _StepFEA:
_StepFEA.StepFEA_FeaShellMembraneStiffness_swigregister(StepFEA_FeaShellMembraneStiffness)

class StepFEA_FeaShellShearStiffness(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellShearStiffness_FeaConstants)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellShearStiffness_Init)
    SetFeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaShellShearStiffness_SetFeaConstants)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaShellShearStiffness_swiginit(self, _StepFEA.new_StepFEA_FeaShellShearStiffness(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaShellShearStiffness_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaShellShearStiffness

# Register StepFEA_FeaShellShearStiffness in _StepFEA:
_StepFEA.StepFEA_FeaShellShearStiffness_swigregister(StepFEA_FeaShellShearStiffness)

class StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion(StepFEA_FeaMaterialPropertyRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_FeaConstants)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_Init)
    SetFeaConstants = _swig_new_instance_method(_StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_SetFeaConstants)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_swiginit(self, _StepFEA.new_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion

# Register StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion in _StepFEA:
_StepFEA.StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion_swigregister(StepFEA_FeaTangentialCoefficientOfLinearThermalExpansion)

class StepFEA_GeometricNode(StepFEA_NodeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_GeometricNode_swiginit(self, _StepFEA.new_StepFEA_GeometricNode(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_GeometricNode_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_GeometricNode

# Register StepFEA_GeometricNode in _StepFEA:
_StepFEA.StepFEA_GeometricNode_swigregister(StepFEA_GeometricNode)

class StepFEA_Node(StepFEA_NodeRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Node_swiginit(self, _StepFEA.new_StepFEA_Node(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Node_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Node

# Register StepFEA_Node in _StepFEA:
_StepFEA.StepFEA_Node_swigregister(StepFEA_Node)

class StepFEA_NodeGroup(StepFEA_FeaGroup):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_NodeGroup_Init)
    Nodes = _swig_new_instance_method(_StepFEA.StepFEA_NodeGroup_Nodes)
    SetNodes = _swig_new_instance_method(_StepFEA.StepFEA_NodeGroup_SetNodes)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeGroup_swiginit(self, _StepFEA.new_StepFEA_NodeGroup(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeGroup_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeGroup

# Register StepFEA_NodeGroup in _StepFEA:
_StepFEA.StepFEA_NodeGroup_swigregister(StepFEA_NodeGroup)

class StepFEA_ParametricCurve3dElementCoordinateDirection(StepFEA_FeaRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Init = _swig_new_instance_method(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_Init)
    Orientation = _swig_new_instance_method(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_Orientation)
    SetOrientation = _swig_new_instance_method(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_SetOrientation)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_swiginit(self, _StepFEA.new_StepFEA_ParametricCurve3dElementCoordinateDirection(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ParametricCurve3dElementCoordinateDirection_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ParametricCurve3dElementCoordinateDirection

# Register StepFEA_ParametricCurve3dElementCoordinateDirection in _StepFEA:
_StepFEA.StepFEA_ParametricCurve3dElementCoordinateDirection_swigregister(StepFEA_ParametricCurve3dElementCoordinateDirection)

class StepFEA_ParametricCurve3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Direction = _swig_new_instance_method(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_Direction)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_Init)
    SetDirection = _swig_new_instance_method(_StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_SetDirection)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_ParametricCurve3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ParametricCurve3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ParametricCurve3dElementCoordinateSystem

# Register StepFEA_ParametricCurve3dElementCoordinateSystem in _StepFEA:
_StepFEA.StepFEA_ParametricCurve3dElementCoordinateSystem_swigregister(StepFEA_ParametricCurve3dElementCoordinateSystem)

class StepFEA_ParametricSurface3dElementCoordinateSystem(StepFEA_FeaRepresentationItem):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Angle = _swig_new_instance_method(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_Angle)
    Axis = _swig_new_instance_method(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_Axis)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_Init)
    SetAngle = _swig_new_instance_method(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_SetAngle)
    SetAxis = _swig_new_instance_method(_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_SetAxis)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_ParametricSurface3dElementCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_ParametricSurface3dElementCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_ParametricSurface3dElementCoordinateSystem

# Register StepFEA_ParametricSurface3dElementCoordinateSystem in _StepFEA:
_StepFEA.StepFEA_ParametricSurface3dElementCoordinateSystem_swigregister(StepFEA_ParametricSurface3dElementCoordinateSystem)

class StepFEA_Surface3dElementRepresentation(StepFEA_ElementRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ElementDescriptor = _swig_new_instance_method(_StepFEA.StepFEA_Surface3dElementRepresentation_ElementDescriptor)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Surface3dElementRepresentation_Init)
    Material = _swig_new_instance_method(_StepFEA.StepFEA_Surface3dElementRepresentation_Material)
    ModelRef = _swig_new_instance_method(_StepFEA.StepFEA_Surface3dElementRepresentation_ModelRef)
    Property = _swig_new_instance_method(_StepFEA.StepFEA_Surface3dElementRepresentation_Property)
    SetElementDescriptor = _swig_new_instance_method(_StepFEA.StepFEA_Surface3dElementRepresentation_SetElementDescriptor)
    SetMaterial = _swig_new_instance_method(_StepFEA.StepFEA_Surface3dElementRepresentation_SetMaterial)
    SetModelRef = _swig_new_instance_method(_StepFEA.StepFEA_Surface3dElementRepresentation_SetModelRef)
    SetProperty = _swig_new_instance_method(_StepFEA.StepFEA_Surface3dElementRepresentation_SetProperty)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Surface3dElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_Surface3dElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Surface3dElementRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Surface3dElementRepresentation

# Register StepFEA_Surface3dElementRepresentation in _StepFEA:
_StepFEA.StepFEA_Surface3dElementRepresentation_swigregister(StepFEA_Surface3dElementRepresentation)

class StepFEA_Volume3dElementRepresentation(StepFEA_ElementRepresentation):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ElementDescriptor = _swig_new_instance_method(_StepFEA.StepFEA_Volume3dElementRepresentation_ElementDescriptor)
    Init = _swig_new_instance_method(_StepFEA.StepFEA_Volume3dElementRepresentation_Init)
    Material = _swig_new_instance_method(_StepFEA.StepFEA_Volume3dElementRepresentation_Material)
    ModelRef = _swig_new_instance_method(_StepFEA.StepFEA_Volume3dElementRepresentation_ModelRef)
    SetElementDescriptor = _swig_new_instance_method(_StepFEA.StepFEA_Volume3dElementRepresentation_SetElementDescriptor)
    SetMaterial = _swig_new_instance_method(_StepFEA.StepFEA_Volume3dElementRepresentation_SetMaterial)
    SetModelRef = _swig_new_instance_method(_StepFEA.StepFEA_Volume3dElementRepresentation_SetModelRef)

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_Volume3dElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_Volume3dElementRepresentation(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_Volume3dElementRepresentation_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_Volume3dElementRepresentation

# Register StepFEA_Volume3dElementRepresentation in _StepFEA:
_StepFEA.StepFEA_Volume3dElementRepresentation_swigregister(StepFEA_Volume3dElementRepresentation)

class StepFEA_NodeWithSolutionCoordinateSystem(StepFEA_Node):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeWithSolutionCoordinateSystem_swiginit(self, _StepFEA.new_StepFEA_NodeWithSolutionCoordinateSystem(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeWithSolutionCoordinateSystem_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeWithSolutionCoordinateSystem

# Register StepFEA_NodeWithSolutionCoordinateSystem in _StepFEA:
_StepFEA.StepFEA_NodeWithSolutionCoordinateSystem_swigregister(StepFEA_NodeWithSolutionCoordinateSystem)

class StepFEA_NodeWithVector(StepFEA_Node):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        * Empty constructor
        	:rtype: None
        """
        _StepFEA.StepFEA_NodeWithVector_swiginit(self, _StepFEA.new_StepFEA_NodeWithVector(*args))


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_NodeWithVector_DownCast(t)


    __repr__ = _dumps_object

    __swig_destroy__ = _StepFEA.delete_StepFEA_NodeWithVector

# Register StepFEA_NodeWithVector in _StepFEA:
_StepFEA.StepFEA_NodeWithVector_swigregister(StepFEA_NodeWithVector)

class StepFEA_HArray1OfCurveElementInterval(StepFEA_Array1OfCurveElementInterval, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfCurveElementInterval_swiginit(self, _StepFEA.new_StepFEA_HArray1OfCurveElementInterval(*args))
    Array1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfCurveElementInterval_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfCurveElementInterval_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfCurveElementInterval_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfCurveElementInterval

# Register StepFEA_HArray1OfCurveElementInterval in _StepFEA:
_StepFEA.StepFEA_HArray1OfCurveElementInterval_swigregister(StepFEA_HArray1OfCurveElementInterval)

class StepFEA_HArray1OfCurveElementEndOffset(StepFEA_Array1OfCurveElementEndOffset, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfCurveElementEndOffset_swiginit(self, _StepFEA.new_StepFEA_HArray1OfCurveElementEndOffset(*args))
    Array1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfCurveElementEndOffset_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfCurveElementEndOffset_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfCurveElementEndOffset_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfCurveElementEndOffset

# Register StepFEA_HArray1OfCurveElementEndOffset in _StepFEA:
_StepFEA.StepFEA_HArray1OfCurveElementEndOffset_swigregister(StepFEA_HArray1OfCurveElementEndOffset)

class StepFEA_HArray1OfElementRepresentation(StepFEA_Array1OfElementRepresentation, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_HArray1OfElementRepresentation(*args))
    Array1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfElementRepresentation_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfElementRepresentation_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfElementRepresentation_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfElementRepresentation

# Register StepFEA_HArray1OfElementRepresentation in _StepFEA:
_StepFEA.StepFEA_HArray1OfElementRepresentation_swigregister(StepFEA_HArray1OfElementRepresentation)

class StepFEA_HArray1OfCurveElementEndRelease(StepFEA_Array1OfCurveElementEndRelease, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfCurveElementEndRelease_swiginit(self, _StepFEA.new_StepFEA_HArray1OfCurveElementEndRelease(*args))
    Array1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfCurveElementEndRelease_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfCurveElementEndRelease_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfCurveElementEndRelease_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfCurveElementEndRelease

# Register StepFEA_HArray1OfCurveElementEndRelease in _StepFEA:
_StepFEA.StepFEA_HArray1OfCurveElementEndRelease_swigregister(StepFEA_HArray1OfCurveElementEndRelease)

class StepFEA_HArray1OfDegreeOfFreedom(StepFEA_Array1OfDegreeOfFreedom, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfDegreeOfFreedom_swiginit(self, _StepFEA.new_StepFEA_HArray1OfDegreeOfFreedom(*args))
    Array1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfDegreeOfFreedom_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfDegreeOfFreedom_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfDegreeOfFreedom_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfDegreeOfFreedom

# Register StepFEA_HArray1OfDegreeOfFreedom in _StepFEA:
_StepFEA.StepFEA_HArray1OfDegreeOfFreedom_swigregister(StepFEA_HArray1OfDegreeOfFreedom)

class StepFEA_HArray1OfNodeRepresentation(StepFEA_Array1OfNodeRepresentation, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HArray1OfNodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_HArray1OfNodeRepresentation(*args))
    Array1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfNodeRepresentation_Array1)
    ChangeArray1 = _swig_new_instance_method(_StepFEA.StepFEA_HArray1OfNodeRepresentation_ChangeArray1)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HArray1OfNodeRepresentation_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HArray1OfNodeRepresentation

# Register StepFEA_HArray1OfNodeRepresentation in _StepFEA:
_StepFEA.StepFEA_HArray1OfNodeRepresentation_swigregister(StepFEA_HArray1OfNodeRepresentation)

class StepFEA_HSequenceOfElementRepresentation(StepFEA_SequenceOfElementRepresentation, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HSequenceOfElementRepresentation_swiginit(self, _StepFEA.new_StepFEA_HSequenceOfElementRepresentation(*args))
    Sequence = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfElementRepresentation_Sequence)
    Append = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfElementRepresentation_Append)
    ChangeSequence = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfElementRepresentation_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HSequenceOfElementRepresentation_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HSequenceOfElementRepresentation

# Register StepFEA_HSequenceOfElementRepresentation in _StepFEA:
_StepFEA.StepFEA_HSequenceOfElementRepresentation_swigregister(StepFEA_HSequenceOfElementRepresentation)

class StepFEA_HSequenceOfElementGeometricRelationship(StepFEA_SequenceOfElementGeometricRelationship, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_swiginit(self, _StepFEA.new_StepFEA_HSequenceOfElementGeometricRelationship(*args))
    Sequence = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_Sequence)
    Append = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_Append)
    ChangeSequence = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HSequenceOfElementGeometricRelationship_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HSequenceOfElementGeometricRelationship

# Register StepFEA_HSequenceOfElementGeometricRelationship in _StepFEA:
_StepFEA.StepFEA_HSequenceOfElementGeometricRelationship_swigregister(StepFEA_HSequenceOfElementGeometricRelationship)

class StepFEA_HSequenceOfNodeRepresentation(StepFEA_SequenceOfNodeRepresentation, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HSequenceOfNodeRepresentation_swiginit(self, _StepFEA.new_StepFEA_HSequenceOfNodeRepresentation(*args))
    Sequence = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfNodeRepresentation_Sequence)
    Append = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfNodeRepresentation_Append)
    ChangeSequence = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfNodeRepresentation_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HSequenceOfNodeRepresentation_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HSequenceOfNodeRepresentation

# Register StepFEA_HSequenceOfNodeRepresentation in _StepFEA:
_StepFEA.StepFEA_HSequenceOfNodeRepresentation_swigregister(StepFEA_HSequenceOfNodeRepresentation)

class StepFEA_HSequenceOfCurve3dElementProperty(StepFEA_SequenceOfCurve3dElementProperty, OCC.Core.Standard.Standard_Transient):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_swiginit(self, _StepFEA.new_StepFEA_HSequenceOfCurve3dElementProperty(*args))
    Sequence = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_Sequence)
    Append = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_Append)
    ChangeSequence = _swig_new_instance_method(_StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_ChangeSequence)


    @staticmethod
    def DownCast(t):
      return Handle_StepFEA_HSequenceOfCurve3dElementProperty_DownCast(t)

    __swig_destroy__ = _StepFEA.delete_StepFEA_HSequenceOfCurve3dElementProperty

# Register StepFEA_HSequenceOfCurve3dElementProperty in _StepFEA:
_StepFEA.StepFEA_HSequenceOfCurve3dElementProperty_swigregister(StepFEA_HSequenceOfCurve3dElementProperty)



